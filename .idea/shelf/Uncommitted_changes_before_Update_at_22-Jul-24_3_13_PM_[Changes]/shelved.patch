Index: src/java/controller/flashcard/FlashcardQuestionServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.flashcard;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\n\r\nimport dal.FlashcardDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.flashcard.FlashcardQuestions;\r\nimport model.user.User;\r\n\r\npublic class FlashcardQuestionServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n            if (user == null) {\r\n                response.sendRedirect(\"login.jsp\");\r\n            } else {\r\n                FlashcardDAO flashcardDAO = new FlashcardDAO();\r\n                int flashcardSetId = Integer.parseInt(request.getParameter(\"flashcardSetId\"));\r\n                List<FlashcardQuestions> flashcardQuestions = flashcardDAO.getFlashcardQuestions(flashcardSetId);\r\n                boolean isOwner = flashcardDAO.isOwner(user.getEmail(), flashcardSetId);\r\n                session.setAttribute(\"isOwner\", isOwner);\r\n                session.setAttribute(\"flashcardSetId\", flashcardSetId);\r\n                session.setAttribute(\"flashcardQuestions\", flashcardQuestions);\r\n                session.setAttribute(\"flashcardSetName\", flashcardDAO.getFlashcardName(flashcardSetId));\r\n                RequestDispatcher dispatcher = request.getRequestDispatcher(\"flashcard-question.jsp\");\r\n                dispatcher.forward(request, response);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            response.sendRedirect(\"home.jsp\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/flashcard/FlashcardQuestionServlet.java b/src/java/controller/flashcard/FlashcardQuestionServlet.java
--- a/src/java/controller/flashcard/FlashcardQuestionServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/flashcard/FlashcardQuestionServlet.java	(date 1721635964772)
@@ -12,7 +12,7 @@
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
 import model.flashcard.FlashcardQuestions;
-import model.user.User;
+import model.User;
 
 public class FlashcardQuestionServlet extends HttpServlet {
 
@@ -27,8 +27,6 @@
                 FlashcardDAO flashcardDAO = new FlashcardDAO();
                 int flashcardSetId = Integer.parseInt(request.getParameter("flashcardSetId"));
                 List<FlashcardQuestions> flashcardQuestions = flashcardDAO.getFlashcardQuestions(flashcardSetId);
-                boolean isOwner = flashcardDAO.isOwner(user.getEmail(), flashcardSetId);
-                session.setAttribute("isOwner", isOwner);
                 session.setAttribute("flashcardSetId", flashcardSetId);
                 session.setAttribute("flashcardQuestions", flashcardQuestions);
                 session.setAttribute("flashcardSetName", flashcardDAO.getFlashcardName(flashcardSetId));
@@ -36,8 +34,8 @@
                 dispatcher.forward(request, response);
             }
         } catch (SQLException e) {
-            e.printStackTrace();
-            response.sendRedirect("home.jsp");
+            RequestDispatcher dispatcher = request.getRequestDispatcher("home.jsp");
+            dispatcher.forward(request, response);
         }
     }
 
Index: web/flashcard-question.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Flashcard Questions</title>\r\n    <meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\r\n    <meta content=\"Free HTML Templates\" name=\"keywords\">\r\n    <meta content=\"Free HTML Templates\" name=\"description\">\r\n\r\n    <!-- Favicon -->\r\n    <link href=\"img/favicon.ico\" rel=\"icon\">\r\n\r\n    <!-- Google Web Fonts -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\"\r\n          rel=\"stylesheet\">\r\n\r\n    <!-- Font Awesome -->\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Libraries Stylesheet -->\r\n    <link href=\"lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Customized Bootstrap Stylesheet -->\r\n    <link href=\"css/style.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Bootstrap CSS -->\r\n    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Custom Styles for Flashcards -->\r\n    <style>\r\n        .flashcard-container {\r\n            display: flex;\r\n            justify-content: center;\r\n            margin-top: 30px;\r\n            perspective: 1000px;\r\n        }\r\n\r\n        .flashcard {\r\n            width: 400px;\r\n            height: 300px;\r\n            margin-bottom: 20px;\r\n            background-color: #f8f9fa;\r\n            border: 1px solid #ced4da;\r\n            border-radius: 8px;\r\n            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            cursor: pointer;\r\n            transition: transform 0.6s;\r\n            transform-style: preserve-3d;\r\n            position: relative;\r\n        }\r\n\r\n        .flashcard.flip {\r\n            transform: rotateY(180deg);\r\n        }\r\n\r\n        .flashcard-content {\r\n            width: 100%;\r\n            height: 100%;\r\n            text-align: center;\r\n            position: absolute;\r\n            backface-visibility: hidden;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            padding: 20px;\r\n            box-sizing: border-box;\r\n        }\r\n\r\n        .flashcard-back {\r\n            transform: rotateY(180deg);\r\n        }\r\n\r\n        .terms-list {\r\n            margin-top: 20px;\r\n        }\r\n\r\n        .terms-list ul {\r\n            list-style-type: none;\r\n            padding: 0;\r\n        }\r\n\r\n        .terms-list li {\r\n            padding: 5px;\r\n            background-color: #f8f9fa;\r\n            border: 1px solid #ced4da;\r\n            border-radius: 4px;\r\n            margin-bottom: 5px;\r\n        }\r\n\r\n        .navigation-buttons {\r\n            display: flex;\r\n            justify-content: center;\r\n            margin-top: 20px;\r\n        }\r\n\r\n        .navigation-buttons .btn {\r\n            margin: 0 10px;\r\n        }\r\n\r\n        .extra-buttons {\r\n            display: flex;\r\n            justify-content: center;\r\n            margin-top: 20px;\r\n        }\r\n\r\n        .extra-buttons .btn {\r\n            margin: 0 10px;\r\n        }\r\n\r\n        .dropdown-menu {\r\n            display: none;\r\n        }\r\n\r\n        .dropdown-menu.show {\r\n            display: block;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n<%-- Header --%>\r\n<jsp:include page=\"header1.jsp\"/>\r\n\r\n<h1 class=\"text-center mt-5 mb-4\">\r\n    <span class=\"badge badge-pill badge-primary\">${sessionScope.flashcardSetName}</span>\r\n</h1>\r\n\r\n<%-- Flashcard Content --%>\r\n<div class=\"container\">\r\n\r\n    <div class=\"flashcard-container\">\r\n        <div class=\"flashcard\" onclick=\"flipFlashcard()\">\r\n            <div class=\"flashcard-content flashcard-front\">\r\n                <h4 id=\"term\"></h4>\r\n            </div>\r\n            <div class=\"flashcard-content flashcard-back\">\r\n                <h4 id=\"definition\"></h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"navigation-buttons\">\r\n        <button class=\"btn bg-light\" onclick=\"prevFlashcard()\"><i class=\"fas fa-arrow-left\"></i></button>\r\n        <button class=\"btn bg-light\" onclick=\"nextFlashcard()\"><i class=\"fas fa-arrow-right\"></i></button>\r\n    </div>\r\n\r\n    <div class=\"extra-buttons\">\r\n        <a href=\"${pageContext.request.contextPath}/flashcard-learn?flashcardSetId=${sessionScope.flashcardSetId}\"\r\n           class=\"btn btn-primary\">Learn</a>\r\n        <a href=\"${pageContext.request.contextPath}/flashcard-match?flashcardSetId=${sessionScope.flashcardSetId}\"\r\n           class=\"btn btn-primary\">Match</a>\r\n        <a href=\"${pageContext.request.contextPath}/flashcard-test?flashcardSetId=${sessionScope.flashcardSetId}\"\r\n           class=\"btn btn-primary\">Test</a>\r\n        <!-- Three-Dot Menu for Owner -->\r\n        <c:if test=\"${sessionScope.isOwner}\">\r\n            <div class=\"dropdown\">\r\n                <button class=\"btn btn-light dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\r\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <i class=\"fas fa-ellipsis-v\"></i>\r\n                </button>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <a class=\"dropdown-item\"\r\n                       href=\"${pageContext.request.contextPath}/flashcard-edit?flashcardSetId=${sessionScope.flashcardSetId}\">Edit\r\n                        Flashcard Set</a>\r\n                    <a class=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete\r\n                        Flashcard Set</a>\r\n                </div>\r\n            </div>\r\n        </c:if>\r\n    </div>\r\n\r\n    <div class=\"terms-list\">\r\n        <h5>Total Terms: <c:out value=\"${sessionScope.flashcardQuestions.size()}\"/></h5>\r\n        <ul>\r\n            <c:forEach var=\"question\" items=\"${sessionScope.flashcardQuestions}\">\r\n                <li><strong>Term:</strong> <c:out value=\"${question.term}\"/> <br> <strong>Definition:</strong> <c:out\r\n                        value=\"${question.definition}\"/></li>\r\n            </c:forEach>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n<%-- Footer --%>\r\n<jsp:include page=\"footer.jsp\"/>\r\n\r\n<!-- JavaScript Libraries -->\r\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n<script src=\"lib/easing/easing.min.js\"></script>\r\n<script src=\"lib/waypoints/waypoints.min.js\"></script>\r\n<script src=\"lib/counterup/counterup.min.js\"></script>\r\n<script src=\"lib/owlcarousel/owl.carousel.min.js\"></script>\r\n<!-- JavaScript for Dynamic Flashcard Navigation -->\r\n<script>\r\n    let currentFlashcardIndex = 0;\r\n    const flashcards = [\r\n        <c:forEach var=\"question\" items=\"${sessionScope.flashcardQuestions}\">\r\n        {\r\n            term: '<c:out value=\"${question.term}\"/>',\r\n            definition: '<c:out value=\"${question.definition}\"/>'\r\n        }<c:if test=\"${!questionStatus.last}\">, </c:if>\r\n        </c:forEach>\r\n    ];\r\n\r\n    document.addEventListener('DOMContentLoaded', (event) => {\r\n        updateFlashcard();\r\n    });\r\n\r\n    function flipFlashcard() {\r\n        const flashcardElement = document.querySelector('.flashcard');\r\n        flashcardElement.classList.toggle('flip');\r\n    }\r\n\r\n    function updateFlashcard() {\r\n        const termElement = document.getElementById('term');\r\n        const definitionElement = document.getElementById('definition');\r\n        termElement.innerHTML = flashcards[currentFlashcardIndex].term;\r\n        definitionElement.innerHTML = flashcards[currentFlashcardIndex].definition;\r\n    }\r\n\r\n    function nextFlashcard() {\r\n        currentFlashcardIndex = (currentFlashcardIndex + 1) % flashcards.length;\r\n        updateFlashcard();\r\n        document.querySelector('.flashcard').classList.remove('flip'); // Reset flip state\r\n    }\r\n\r\n    function prevFlashcard() {\r\n        currentFlashcardIndex = (currentFlashcardIndex - 1 + flashcards.length) % flashcards.length;\r\n        updateFlashcard();\r\n        document.querySelector('.flashcard').classList.remove('flip'); // Reset flip state\r\n    }\r\n</script>\r\n\r\n<!-- Bootstrap Modal for Delete Confirmation -->\r\n<div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModalLabel\"\r\n     aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"deleteModalLabel\">Confirm Deletion</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                Are you sure you want to delete this flashcard set? This action cannot be undone.\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                <a href=\"${pageContext.request.contextPath}/flashcard-delete?flashcardSetId=${sessionScope.flashcardSetId}\"\r\n                   class=\"btn btn-danger\">Delete</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/flashcard-question.jsp b/web/flashcard-question.jsp
--- a/web/flashcard-question.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/flashcard-question.jsp	(date 1721635964787)
@@ -111,27 +111,17 @@
         .extra-buttons .btn {
             margin: 0 10px;
         }
-
-        .dropdown-menu {
-            display: none;
-        }
-
-        .dropdown-menu.show {
-            display: block;
-        }
     </style>
 </head>
 <body>
 <%-- Header --%>
 <jsp:include page="header1.jsp"/>
 
-<h1 class="text-center mt-5 mb-4">
-    <span class="badge badge-pill badge-primary">${sessionScope.flashcardSetName}</span>
+<h1 class="text-center mt-5 mb-4"><span class="badge badge-pill badge-primary">${sessionScope.flashcard.name}</span>
 </h1>
 
 <%-- Flashcard Content --%>
 <div class="container">
-
     <div class="flashcard-container">
         <div class="flashcard" onclick="flipFlashcard()">
             <div class="flashcard-content flashcard-front">
@@ -155,22 +145,6 @@
            class="btn btn-primary">Match</a>
         <a href="${pageContext.request.contextPath}/flashcard-test?flashcardSetId=${sessionScope.flashcardSetId}"
            class="btn btn-primary">Test</a>
-        <!-- Three-Dot Menu for Owner -->
-        <c:if test="${sessionScope.isOwner}">
-            <div class="dropdown">
-                <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton"
-                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
-                    <i class="fas fa-ellipsis-v"></i>
-                </button>
-                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
-                    <a class="dropdown-item"
-                       href="${pageContext.request.contextPath}/flashcard-edit?flashcardSetId=${sessionScope.flashcardSetId}">Edit
-                        Flashcard Set</a>
-                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deleteModal">Delete
-                        Flashcard Set</a>
-                </div>
-            </div>
-        </c:if>
     </div>
 
     <div class="terms-list">
@@ -186,7 +160,6 @@
 
 <%-- Footer --%>
 <jsp:include page="footer.jsp"/>
-
 <!-- JavaScript Libraries -->
 <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
 <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
@@ -234,29 +207,5 @@
         document.querySelector('.flashcard').classList.remove('flip'); // Reset flip state
     }
 </script>
-
-<!-- Bootstrap Modal for Delete Confirmation -->
-<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel"
-     aria-hidden="true">
-    <div class="modal-dialog" role="document">
-        <div class="modal-content">
-            <div class="modal-header">
-                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
-                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
-                    <span aria-hidden="true">&times;</span>
-                </button>
-            </div>
-            <div class="modal-body">
-                Are you sure you want to delete this flashcard set? This action cannot be undone.
-            </div>
-            <div class="modal-footer">
-                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
-                <a href="${pageContext.request.contextPath}/flashcard-delete?flashcardSetId=${sessionScope.flashcardSetId}"
-                   class="btn btn-danger">Delete</a>
-            </div>
-        </div>
-    </div>
-</div>
-
 </body>
 </html>
Index: web/flashcard-test.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Flashcard Test</title>\r\n    <meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\r\n    <meta content=\"Free HTML Templates\" name=\"keywords\">\r\n    <meta content=\"Free HTML Templates\" name=\"description\">\r\n\r\n    <!-- Favicon -->\r\n    <link href=\"img/favicon.ico\" rel=\"icon\">\r\n\r\n    <!-- Google Web Fonts -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\"\r\n          rel=\"stylesheet\">\r\n\r\n    <!-- Font Awesome -->\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Bootstrap CSS -->\r\n    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Custom Styles for Flashcards -->\r\n    <style>\r\n        .flashcard-container {\r\n            display: flex;\r\n            justify-content: center;\r\n            margin-top: 30px;\r\n            perspective: 1000px;\r\n        }\r\n\r\n        .flashcard {\r\n            width: 400px;\r\n            height: 300px;\r\n            margin-bottom: 20px;\r\n            background-color: #f8f9fa;\r\n            border: 1px solid #ced4da;\r\n            border-radius: 8px;\r\n            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            position: relative;\r\n            pointer-events: none;\r\n        }\r\n\r\n        .flashcard-content {\r\n            width: 100%;\r\n            height: 100%;\r\n            text-align: center;\r\n            position: absolute;\r\n            backface-visibility: hidden;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            padding: 20px;\r\n            box-sizing: border-box;\r\n        }\r\n\r\n        .flashcard-back {\r\n            transform: rotateY(180deg);\r\n        }\r\n\r\n        .answers {\r\n            margin-top: 20px;\r\n            display: flex;\r\n            justify-content: center;\r\n            flex-wrap: wrap;\r\n        }\r\n\r\n        .answers button {\r\n            margin: 10px;\r\n            padding: 10px 20px;\r\n            font-size: 16px;\r\n            width: calc(50% - 20px);\r\n            min-height: 70px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            position: relative;\r\n            transition: background-color 0.3s ease, border 0.3s ease;\r\n            text-align: center;\r\n            border: 2px solid transparent;\r\n        }\r\n\r\n        .answers button.correct {\r\n            background-color: #28a745 !important;\r\n            color: #fff;\r\n            border: none;\r\n        }\r\n\r\n        .answers button.wrong {\r\n            background-color: #dc3545 !important;\r\n            color: #fff;\r\n            border: none;\r\n        }\r\n\r\n        .answers button.selected {\r\n            border: 2px dashed #28a745;\r\n        }\r\n\r\n        .answers button.disabled {\r\n            pointer-events: none;\r\n        }\r\n\r\n        .result {\r\n            margin-top: 20px;\r\n            text-align: center;\r\n            font-size: 18px;\r\n        }\r\n\r\n        .navigation-buttons {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            margin-top: 20px;\r\n        }\r\n\r\n        .navigation-buttons .btn {\r\n            margin: 0 10px;\r\n        }\r\n\r\n        .pagination {\r\n            text-align: center;\r\n            margin-top: 10px;\r\n        }\r\n\r\n        .pagination span {\r\n            font-size: 14px;\r\n            margin: 0 5px;\r\n        }\r\n\r\n        .go-back-button {\r\n            display: block;\r\n            margin: 20px auto;\r\n        }\r\n\r\n        .report-card {\r\n            margin-top: 30px;\r\n            text-align: center;\r\n        }\r\n\r\n        .report-card p {\r\n            font-size: 18px;\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        .report-card .score {\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n        }\r\n\r\n        /* Custom popup styles */\r\n        .modal-content {\r\n            padding: 20px;\r\n        }\r\n\r\n        .modal-header {\r\n            border-bottom: none;\r\n        }\r\n\r\n        .modal-body {\r\n            text-align: center;\r\n        }\r\n\r\n        .modal-footer {\r\n            border-top: none;\r\n            justify-content: center;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n<%-- Header --%>\r\n<jsp:include page=\"header1.jsp\"/>\r\n\r\n<h2 class=\"text-center mt-5 mb-4\">\r\n    <span class=\"badge badge-pill badge-primary\">${sessionScope.flashcardSetName}</span>\r\n</h2>\r\n\r\n<%-- Flashcard Content --%>\r\n<div class=\"container\">\r\n    <div class=\"flashcard-container\">\r\n        <div class=\"flashcard\">\r\n            <div class=\"flashcard-content flashcard-front\">\r\n                <h4 id=\"term\"></h4>\r\n            </div>\r\n            <div class=\"flashcard-content flashcard-back\">\r\n                <h4 id=\"definition\"></h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"answers\">\r\n        <button class=\"btn btn-primary\" onclick=\"checkAnswer(this)\" id=\"option1\"><span class=\"option-text\"></span>\r\n        </button>\r\n        <button class=\"btn btn-primary\" onclick=\"checkAnswer(this)\" id=\"option2\"><span class=\"option-text\"></span>\r\n        </button>\r\n        <button class=\"btn btn-primary\" onclick=\"checkAnswer(this)\" id=\"option3\"><span class=\"option-text\"></span>\r\n        </button>\r\n        <button class=\"btn btn-primary\" onclick=\"checkAnswer(this)\" id=\"option4\"><span class=\"option-text\"></span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"result\">\r\n        <p id=\"answerResult\"></p>\r\n    </div>\r\n\r\n    <div class=\"navigation-buttons mt-3\">\r\n        <button class=\"btn btn-primary\" onclick=\"previousFlashcard()\">Previous</button>\r\n\r\n        <div class=\"pagination\">\r\n            <span id=\"currentQuestion\"></span> / <span id=\"totalQuestions\"></span>\r\n        </div>\r\n\r\n        <button class=\"btn btn-primary\" onclick=\"nextFlashcard()\">Next</button>\r\n    </div>\r\n\r\n    <div class=\"go-back-button\">\r\n        <button class=\"btn btn-secondary\" onclick=\"finishTest()\">Finish Test</button>\r\n    </div>\r\n</div>\r\n\r\n<!-- Report Popup -->\r\n<div class=\"modal fade\" id=\"reportModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"reportModalLabel\"\r\n     aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"reportModalLabel\">Test Results</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>You answered <span id=\"correctAnswers\"></span> out of <span id=\"totalQuestions\"></span> questions\r\n                    correctly.</p>\r\n                <p>Your score: <span class=\"score\" id=\"score\"></span> / 10</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" onclick=\"goBack()\">Go Back</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<%-- Footer --%>\r\n<jsp:include page=\"footer.jsp\"/>\r\n<!-- JavaScript Libraries -->\r\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n<script src=\"lib/easing/easing.min.js\"></script>\r\n<script src=\"lib/waypoints/waypoints.min.js\"></script>\r\n<script src=\"lib/counterup/counterup.min.js\"></script>\r\n<script src=\"lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n<!-- JavaScript for Dynamic Flashcard Navigation -->\r\n<script>\r\n    let currentFlashcardIndex = 0;\r\n    let answeredFlashcards = [];\r\n    let correctAnswersCount = 0;\r\n    let isTestFinished = false; // Flag to check if the test is finished\r\n\r\n    const flashcards = [\r\n        <c:forEach var=\"question\" items=\"${flashcardQuestions}\">\r\n        {\r\n            questionId: ${question.questionId},\r\n            term: '<c:out value=\"${question.term}\"/>',\r\n            definition: '<c:out value=\"${question.definition}\"/>'\r\n        }<c:if test=\"${!questionStatus.last}\">, </c:if>\r\n        </c:forEach>\r\n    ];\r\n\r\n    const allAnswers = [\r\n        <c:forEach var=\"answer\" items=\"${allAnswers}\">\r\n        {\r\n            questionId: ${answer.questionId},\r\n            answer: '<c:out value=\"${answer.answer}\"/>'\r\n        }<c:if test=\"${!answerStatus.last}\">, </c:if>\r\n        </c:forEach>\r\n    ];\r\n\r\n    const flashcardOptions = Array(flashcards.length).fill(null);\r\n    const flashcardSelections = Array(flashcards.length).fill(null);\r\n\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        document.getElementById('totalQuestions').textContent = flashcards.length;\r\n        displayCard();\r\n    });\r\n\r\n    function getRandomAnswers(correctAnswer) {\r\n        let answers = allAnswers.filter(answer => answer.questionId !== correctAnswer.questionId);\r\n        if (answers.length >= 3) {\r\n            answers = answers.sort(() => 0.5 - Math.random()).slice(0, 3);\r\n        }\r\n        answers.push(correctAnswer);\r\n        return answers.sort(() => 0.5 - Math.random());\r\n    }\r\n\r\n    function displayCard() {\r\n        const question = flashcards[currentFlashcardIndex];\r\n        document.getElementById('term').innerText = question.term;\r\n        document.getElementById('definition').innerText = question.definition;\r\n        document.getElementById('currentQuestion').innerText = currentFlashcardIndex + 1;\r\n        document.getElementById('answerResult').innerText = '';\r\n\r\n        if (!flashcardOptions[currentFlashcardIndex]) {\r\n            flashcardOptions[currentFlashcardIndex] = getRandomAnswers({\r\n                questionId: question.questionId,\r\n                answer: question.definition\r\n            });\r\n        }\r\n\r\n        flashcardOptions[currentFlashcardIndex].forEach((option, index) => {\r\n            let button = document.getElementById('option' + (index + 1));\r\n            button.innerText = option.answer;\r\n            button.className = 'btn btn-primary';\r\n            button.disabled = false;\r\n            if (flashcardSelections[currentFlashcardIndex] === index) {\r\n                button.classList.add('selected');\r\n                button.disabled = true;\r\n            }\r\n        });\r\n\r\n        // Disable options if the question has been answered\r\n        if (answeredFlashcards.includes(currentFlashcardIndex) || isTestFinished) {\r\n            document.querySelectorAll('.answers button').forEach(button => {\r\n                button.disabled = true;\r\n                const selectedIndex = flashcardSelections[currentFlashcardIndex];\r\n                const correctAnswer = flashcards[currentFlashcardIndex].definition;\r\n                const selectedAnswer = button.innerText;\r\n\r\n                if (selectedAnswer === correctAnswer) {\r\n                    button.classList.add('correct');\r\n                } else if (selectedIndex !== null && selectedIndex.toString() === button.id.charAt(6)) {\r\n                    button.classList.add('wrong');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function checkAnswer(button) {\r\n        let selectedAnswer = button.innerText;\r\n        let correctAnswer = flashcards[currentFlashcardIndex].definition;\r\n        let selectedIndex = Array.from(button.parentElement.children).indexOf(button);\r\n\r\n        // Highlight the selected answer\r\n        if (selectedAnswer === correctAnswer) {\r\n            button.classList.add('correct');\r\n            correctAnswersCount++;\r\n            document.getElementById('answerResult').innerText = 'Correct!';\r\n        } else {\r\n            button.classList.add('wrong');\r\n            // Highlight the correct answer\r\n            flashcardOptions[currentFlashcardIndex].forEach((option, index) => {\r\n                if (option.answer === correctAnswer) {\r\n                    document.getElementById('option' + (index + 1)).classList.add('correct');\r\n                }\r\n            });\r\n            document.getElementById('answerResult').innerText = 'Incorrect!';\r\n        }\r\n\r\n        // Disable all buttons and mark the selected one\r\n        flashcardOptions[currentFlashcardIndex].forEach((option, index) => {\r\n            let btn = document.getElementById('option' + (index + 1));\r\n            btn.disabled = true;\r\n            if (index === selectedIndex) {\r\n                if (selectedAnswer === correctAnswer) {\r\n                    btn.classList.add('correct');\r\n                } else {\r\n                    btn.classList.add('wrong');\r\n                }\r\n            }\r\n        });\r\n\r\n        // Add the answer to the answeredFlashcards array\r\n        if (!answeredFlashcards.includes(currentFlashcardIndex)) {\r\n            answeredFlashcards.push(currentFlashcardIndex);\r\n        }\r\n    }\r\n\r\n    function nextFlashcard() {\r\n        if (currentFlashcardIndex < flashcards.length - 1) {\r\n            currentFlashcardIndex++;\r\n            displayCard();\r\n        } else {\r\n            finishTest();\r\n        }\r\n    }\r\n\r\n    function previousFlashcard() {\r\n        if (currentFlashcardIndex > 0) {\r\n            currentFlashcardIndex--;\r\n            displayCard();\r\n        }\r\n    }\r\n\r\n    function finishTest() {\r\n        isTestFinished = true;\r\n        document.querySelector('.flashcard-container').style.display = 'none';\r\n        document.querySelector('.answers').style.display = 'none';\r\n        document.querySelector('.navigation-buttons').style.display = 'none';\r\n\r\n        // Show the report modal\r\n        document.getElementById('correctAnswers').innerText = correctAnswersCount;\r\n        document.getElementById('score').innerText = (correctAnswersCount / flashcards.length * 10).toFixed(2);\r\n        $('#reportModal').modal('show');\r\n    }\r\n\r\n    function goBack() {\r\n        window.location.href = \"${pageContext.request.contextPath}/flashcard-question?flashcardSetId=${sessionScope.flashcardSetId}\";\r\n    }\r\n</script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/flashcard-test.jsp b/web/flashcard-test.jsp
--- a/web/flashcard-test.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/flashcard-test.jsp	(date 1721635964788)
@@ -151,24 +151,6 @@
             font-size: 24px;
             font-weight: bold;
         }
-
-        /* Custom popup styles */
-        .modal-content {
-            padding: 20px;
-        }
-
-        .modal-header {
-            border-bottom: none;
-        }
-
-        .modal-body {
-            text-align: center;
-        }
-
-        .modal-footer {
-            border-top: none;
-            justify-content: center;
-        }
     </style>
 </head>
 <body>
@@ -220,28 +202,12 @@
     <div class="go-back-button">
         <button class="btn btn-secondary" onclick="finishTest()">Finish Test</button>
     </div>
-</div>
-
-<!-- Report Popup -->
-<div class="modal fade" id="reportModal" tabindex="-1" role="dialog" aria-labelledby="reportModalLabel"
-     aria-hidden="true">
-    <div class="modal-dialog" role="document">
-        <div class="modal-content">
-            <div class="modal-header">
-                <h5 class="modal-title" id="reportModalLabel">Test Results</h5>
-                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
-                    <span aria-hidden="true">&times;</span>
-                </button>
-            </div>
-            <div class="modal-body">
-                <p>You answered <span id="correctAnswers"></span> out of <span id="totalQuestions"></span> questions
-                    correctly.</p>
-                <p>Your score: <span class="score" id="score"></span> / 10</p>
-            </div>
-            <div class="modal-footer">
-                <button type="button" class="btn btn-secondary" onclick="goBack()">Go Back</button>
-            </div>
-        </div>
+
+    <div class="report-card" id="reportCard" style="display: none;">
+        <p>You answered <span id="correctAnswers"></span> out of <span id="totalQuestions"></span> questions correctly.
+        </p>
+        <p>Your score: <span class="score" id="score"></span> / 10</p>
+        <button class="btn btn-secondary" onclick="goBack()">Go Back</button>
     </div>
 </div>
 
@@ -254,7 +220,6 @@
 <script src="lib/waypoints/waypoints.min.js"></script>
 <script src="lib/counterup/counterup.min.js"></script>
 <script src="lib/owlcarousel/owl.carousel.min.js"></script>
-
 <!-- JavaScript for Dynamic Flashcard Navigation -->
 <script>
     let currentFlashcardIndex = 0;
@@ -401,11 +366,10 @@
         document.querySelector('.flashcard-container').style.display = 'none';
         document.querySelector('.answers').style.display = 'none';
         document.querySelector('.navigation-buttons').style.display = 'none';
+        document.getElementById('reportCard').style.display = 'block';
 
-        // Show the report modal
         document.getElementById('correctAnswers').innerText = correctAnswersCount;
         document.getElementById('score').innerText = (correctAnswersCount / flashcards.length * 10).toFixed(2);
-        $('#reportModal').modal('show');
     }
 
     function goBack() {
Index: web/flashcard-add.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\r\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/fmt\" prefix=\"fmt\" %>\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Create Flashcard Set</title>\r\n    <meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\r\n    <meta content=\"Free HTML Templates\" name=\"keywords\">\r\n    <meta content=\"Free HTML Templates\" name=\"description\">\r\n\r\n    <!-- Favicon -->\r\n    <link href=\"img/favicon.ico\" rel=\"icon\">\r\n\r\n    <!-- Google Web Fonts -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\"\r\n          rel=\"stylesheet\">\r\n\r\n    <!-- Font Awesome -->\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Libraries Stylesheet -->\r\n    <link href=\"lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Customized Bootstrap Stylesheet -->\r\n    <link href=\"css/style.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Bootstrap CSS -->\r\n    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n    <style>\r\n        .table {\r\n            margin-top: 20px;\r\n        }\r\n\r\n        .table th, .table td {\r\n            vertical-align: middle;\r\n        }\r\n\r\n        .delete-button {\r\n            color: red;\r\n            cursor: pointer;\r\n            font-size: 1.5em;\r\n        }\r\n\r\n        .warning {\r\n            color: red;\r\n            margin-top: 10px;\r\n        }\r\n\r\n        .input-group {\r\n            position: relative;\r\n        }\r\n\r\n        .warning-icon {\r\n            color: red;\r\n            position: absolute;\r\n            top: 50%;\r\n            left: -25px;\r\n            transform: translateY(-50%);\r\n            display: none;\r\n            cursor: pointer;\r\n        }\r\n\r\n        .form-control {\r\n            padding-right: 30px;\r\n        }\r\n\r\n        .warning-icon:hover::after {\r\n            content: attr(data-warning);\r\n            color: black;\r\n            background-color: #ffc107;\r\n            padding: 2px 5px;\r\n            border-radius: 3px;\r\n            position: absolute;\r\n            top: -25px;\r\n            left: 20px;\r\n            white-space: nowrap;\r\n            z-index: 10;\r\n        }\r\n    </style>\r\n    <script>\r\n        function addRow() {\r\n            var table = document.getElementById(\"flashcardTable\");\r\n            var rowCount = table.rows.length;\r\n            var row = table.insertRow(rowCount - 1);\r\n\r\n            var cell1 = row.insertCell(0);\r\n            var element1 = document.createElement(\"div\");\r\n            element1.className = \"input-group\";\r\n            var input1 = document.createElement(\"input\");\r\n            input1.type = \"text\";\r\n            input1.name = \"term[]\";\r\n            input1.className = \"form-control\";\r\n            input1.oninput = validateForm;\r\n            var warningIcon1 = document.createElement(\"i\");\r\n            warningIcon1.className = \"fa fa-exclamation-circle warning-icon\";\r\n            warningIcon1.setAttribute(\"aria-hidden\", \"true\");\r\n            warningIcon1.setAttribute(\"data-warning\", \"Term cannot be empty or duplicated\");\r\n            element1.appendChild(input1);\r\n            element1.appendChild(warningIcon1);\r\n            cell1.appendChild(element1);\r\n\r\n            var cell2 = row.insertCell(1);\r\n            var element2 = document.createElement(\"div\");\r\n            element2.className = \"input-group\";\r\n            var input2 = document.createElement(\"input\");\r\n            input2.type = \"text\";\r\n            input2.name = \"definition[]\";\r\n            input2.className = \"form-control\";\r\n            input2.oninput = validateForm;\r\n            var warningIcon2 = document.createElement(\"i\");\r\n            warningIcon2.className = \"fa fa-exclamation-circle warning-icon\";\r\n            warningIcon2.setAttribute(\"aria-hidden\", \"true\");\r\n            warningIcon2.setAttribute(\"data-warning\", \"Definition cannot be empty or duplicated\");\r\n            element2.appendChild(input2);\r\n            element2.appendChild(warningIcon2);\r\n            cell2.appendChild(element2);\r\n\r\n            var cell3 = row.insertCell(2);\r\n            var deleteButton = document.createElement(\"span\");\r\n            deleteButton.className = \"delete-button\";\r\n            deleteButton.innerHTML = '<i class=\"fa fa-minus\" aria-hidden=\"true\"></i>';\r\n            deleteButton.onclick = function () {\r\n                deleteRow(this);\r\n            };\r\n            cell3.appendChild(deleteButton);\r\n\r\n            validateForm();\r\n        }\r\n\r\n        function deleteRow(button) {\r\n            var row = button.parentNode.parentNode;\r\n            row.parentNode.removeChild(row);\r\n            validateForm();\r\n        }\r\n\r\n        function validateForm() {\r\n            var terms = document.getElementsByName(\"term[]\");\r\n            var definitions = document.getElementsByName(\"definition[]\");\r\n            var title = document.getElementById(\"title\");\r\n            var createButton = document.querySelector(\"button[type='submit']\");\r\n            var warning = document.getElementById(\"warning\");\r\n            var termSet = new Set();\r\n            var definitionSet = new Set();\r\n            var valid = true;\r\n\r\n            // Validate title\r\n            var titleWarningIcon = document.getElementById(\"titleWarningIcon\");\r\n            if (title.value.trim() === \"\") {\r\n                valid = false;\r\n                titleWarningIcon.style.display = \"inline\";\r\n                titleWarningIcon.setAttribute(\"data-warning\", \"Title cannot be empty\");\r\n            } else {\r\n                titleWarningIcon.style.display = \"none\";\r\n            }\r\n\r\n            // Validate terms and definitions\r\n            for (var i = 0; i < terms.length; i++) {\r\n                var term = terms[i].value.trim().toLowerCase();\r\n                var definition = definitions[i].value.trim().toLowerCase();\r\n                var warningIconTerm = terms[i].nextElementSibling;\r\n                var warningIconDefinition = definitions[i].nextElementSibling;\r\n\r\n                warningIconTerm.style.display = \"none\";\r\n                warningIconDefinition.style.display = \"none\";\r\n\r\n                if (term === \"\" || definition === \"\") {\r\n                    valid = false;\r\n                    if (term === \"\") {\r\n                        warningIconTerm.style.display = \"inline\";\r\n                        warningIconTerm.setAttribute(\"data-warning\", \"Term cannot be empty\");\r\n                    }\r\n                    if (definition === \"\") {\r\n                        warningIconDefinition.style.display = \"inline\";\r\n                        warningIconDefinition.setAttribute(\"data-warning\", \"Definition cannot be empty\");\r\n                    }\r\n                } else {\r\n                    if (termSet.has(term)) {\r\n                        valid = false;\r\n                        warningIconTerm.style.display = \"inline\";\r\n                        warningIconTerm.setAttribute(\"data-warning\", \"Terms cannot contain duplicate\");\r\n                    } else {\r\n                        termSet.add(term);\r\n                    }\r\n                    if (definitionSet.has(definition)) {\r\n                        valid = false;\r\n                        warningIconDefinition.style.display = \"inline\";\r\n                        warningIconDefinition.setAttribute(\"data-warning\", \"Definitions cannot contain duplicate\");\r\n                    } else {\r\n                        definitionSet.add(definition);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (termSet.size === 0) {\r\n                valid = false;\r\n                warning.innerHTML = \"At least one term is required.\";\r\n            } else {\r\n                warning.innerHTML = \"\";\r\n            }\r\n\r\n            createButton.disabled = !valid;\r\n        }\r\n\r\n        window.onload = function () {\r\n            validateForm();\r\n        };\r\n    </script>\r\n</head>\r\n<body>\r\n<jsp:include page=\"header1.jsp\"/>\r\n\r\n<div class=\"container\">\r\n    <h2>Create New Flashcard Set</h2>\r\n    <form action=\"flashcard-add\" method=\"post\" onsubmit=\"return validateForm();\">\r\n        <div class=\"form-group\">\r\n            <label for=\"title\">Title</label>\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" required oninput=\"validateForm()\">\r\n                <i id=\"titleWarningIcon\" class=\"fa fa-exclamation-circle warning-icon\" aria-hidden=\"true\"></i>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"subject\">Subject</label>\r\n            <select class=\"form-control\" id=\"subject\" name=\"subjectId\" required>\r\n                <c:forEach var=\"subject\" items=\"${subjects}\">\r\n                    <option value=\"${subject.id}\">${subject.name}</option>\r\n                </c:forEach>\r\n            </select>\r\n        </div>\r\n        <table class=\"table\" id=\"flashcardTable\">\r\n            <thead>\r\n            <tr>\r\n                <th>Term</th>\r\n                <th>Definition</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n                <td>\r\n                    <div class=\"input-group\">\r\n                        <input type=\"text\" name=\"term[]\" class=\"form-control\" oninput=\"validateForm()\" required>\r\n                        <i class=\"fa fa-exclamation-circle warning-icon\" aria-hidden=\"true\"\r\n                           data-warning=\"Term cannot be empty or duplicated\"></i>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"input-group\">\r\n                        <input type=\"text\" name=\"definition[]\" class=\"form-control\" oninput=\"validateForm()\" required>\r\n                        <i class=\"fa fa-exclamation-circle warning-icon\" aria-hidden=\"true\"\r\n                           data-warning=\"Definition cannot be empty or duplicated\"></i>\r\n                    </div>\r\n                </td>\r\n                <td><span class=\"delete-button\" onclick=\"deleteRow(this)\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></span>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"3\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" onclick=\"addRow()\">+</button>\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n        <div id=\"warning\" class=\"warning\"></div>\r\n        <button type=\"submit\" class=\"btn btn-success\" disabled>Create Flashcard Set</button>\r\n    </form>\r\n</div>\r\n<!-- JavaScript Libraries -->\r\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n<script src=\"lib/easing/easing.min.js\"></script>\r\n<script src=\"lib/waypoints/waypoints.min.js\"></script>\r\n<script src=\"lib/counterup/counterup.min.js\"></script>\r\n<script src=\"lib/owlcarousel/owl.carousel.min.js\"></script>\r\n<jsp:include page=\"footer.jsp\"/>\r\n\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/flashcard-add.jsp b/web/flashcard-add.jsp
--- a/web/flashcard-add.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/flashcard-add.jsp	(date 1721635964786)
@@ -1,6 +1,7 @@
 <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
 <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
 <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
+<jsp:include page="header.jsp"/>
 
 <!DOCTYPE html>
 <html>
@@ -44,42 +45,6 @@
             cursor: pointer;
             font-size: 1.5em;
         }
-
-        .warning {
-            color: red;
-            margin-top: 10px;
-        }
-
-        .input-group {
-            position: relative;
-        }
-
-        .warning-icon {
-            color: red;
-            position: absolute;
-            top: 50%;
-            left: -25px;
-            transform: translateY(-50%);
-            display: none;
-            cursor: pointer;
-        }
-
-        .form-control {
-            padding-right: 30px;
-        }
-
-        .warning-icon:hover::after {
-            content: attr(data-warning);
-            color: black;
-            background-color: #ffc107;
-            padding: 2px 5px;
-            border-radius: 3px;
-            position: absolute;
-            top: -25px;
-            left: 20px;
-            white-space: nowrap;
-            z-index: 10;
-        }
     </style>
     <script>
         function addRow() {
@@ -88,126 +53,33 @@
             var row = table.insertRow(rowCount - 1);
 
             var cell1 = row.insertCell(0);
-            var element1 = document.createElement("div");
-            element1.className = "input-group";
-            var input1 = document.createElement("input");
-            input1.type = "text";
-            input1.name = "term[]";
-            input1.className = "form-control";
-            input1.oninput = validateForm;
-            var warningIcon1 = document.createElement("i");
-            warningIcon1.className = "fa fa-exclamation-circle warning-icon";
-            warningIcon1.setAttribute("aria-hidden", "true");
-            warningIcon1.setAttribute("data-warning", "Term cannot be empty or duplicated");
-            element1.appendChild(input1);
-            element1.appendChild(warningIcon1);
+            var element1 = document.createElement("input");
+            element1.type = "text";
+            element1.name = "term";
+            element1.className = "form-control";
             cell1.appendChild(element1);
 
             var cell2 = row.insertCell(1);
-            var element2 = document.createElement("div");
-            element2.className = "input-group";
-            var input2 = document.createElement("input");
-            input2.type = "text";
-            input2.name = "definition[]";
-            input2.className = "form-control";
-            input2.oninput = validateForm;
-            var warningIcon2 = document.createElement("i");
-            warningIcon2.className = "fa fa-exclamation-circle warning-icon";
-            warningIcon2.setAttribute("aria-hidden", "true");
-            warningIcon2.setAttribute("data-warning", "Definition cannot be empty or duplicated");
-            element2.appendChild(input2);
-            element2.appendChild(warningIcon2);
+            var element2 = document.createElement("input");
+            element2.type = "text";
+            element2.name = "definition";
+            element2.className = "form-control";
             cell2.appendChild(element2);
 
             var cell3 = row.insertCell(2);
             var deleteButton = document.createElement("span");
             deleteButton.className = "delete-button";
-            deleteButton.innerHTML = '<i class="fa fa-minus" aria-hidden="true"></i>';
+            deleteButton.innerHTML = "&minus;";
             deleteButton.onclick = function () {
                 deleteRow(this);
             };
             cell3.appendChild(deleteButton);
-
-            validateForm();
         }
 
         function deleteRow(button) {
             var row = button.parentNode.parentNode;
             row.parentNode.removeChild(row);
-            validateForm();
         }
-
-        function validateForm() {
-            var terms = document.getElementsByName("term[]");
-            var definitions = document.getElementsByName("definition[]");
-            var title = document.getElementById("title");
-            var createButton = document.querySelector("button[type='submit']");
-            var warning = document.getElementById("warning");
-            var termSet = new Set();
-            var definitionSet = new Set();
-            var valid = true;
-
-            // Validate title
-            var titleWarningIcon = document.getElementById("titleWarningIcon");
-            if (title.value.trim() === "") {
-                valid = false;
-                titleWarningIcon.style.display = "inline";
-                titleWarningIcon.setAttribute("data-warning", "Title cannot be empty");
-            } else {
-                titleWarningIcon.style.display = "none";
-            }
-
-            // Validate terms and definitions
-            for (var i = 0; i < terms.length; i++) {
-                var term = terms[i].value.trim().toLowerCase();
-                var definition = definitions[i].value.trim().toLowerCase();
-                var warningIconTerm = terms[i].nextElementSibling;
-                var warningIconDefinition = definitions[i].nextElementSibling;
-
-                warningIconTerm.style.display = "none";
-                warningIconDefinition.style.display = "none";
-
-                if (term === "" || definition === "") {
-                    valid = false;
-                    if (term === "") {
-                        warningIconTerm.style.display = "inline";
-                        warningIconTerm.setAttribute("data-warning", "Term cannot be empty");
-                    }
-                    if (definition === "") {
-                        warningIconDefinition.style.display = "inline";
-                        warningIconDefinition.setAttribute("data-warning", "Definition cannot be empty");
-                    }
-                } else {
-                    if (termSet.has(term)) {
-                        valid = false;
-                        warningIconTerm.style.display = "inline";
-                        warningIconTerm.setAttribute("data-warning", "Terms cannot contain duplicate");
-                    } else {
-                        termSet.add(term);
-                    }
-                    if (definitionSet.has(definition)) {
-                        valid = false;
-                        warningIconDefinition.style.display = "inline";
-                        warningIconDefinition.setAttribute("data-warning", "Definitions cannot contain duplicate");
-                    } else {
-                        definitionSet.add(definition);
-                    }
-                }
-            }
-
-            if (termSet.size === 0) {
-                valid = false;
-                warning.innerHTML = "At least one term is required.";
-            } else {
-                warning.innerHTML = "";
-            }
-
-            createButton.disabled = !valid;
-        }
-
-        window.onload = function () {
-            validateForm();
-        };
     </script>
 </head>
 <body>
@@ -215,13 +87,10 @@
 
 <div class="container">
     <h2>Create New Flashcard Set</h2>
-    <form action="flashcard-add" method="post" onsubmit="return validateForm();">
+    <form action="flashcard-add" method="post">
         <div class="form-group">
             <label for="title">Title</label>
-            <div class="input-group">
-                <input type="text" class="form-control" id="title" name="title" required oninput="validateForm()">
-                <i id="titleWarningIcon" class="fa fa-exclamation-circle warning-icon" aria-hidden="true"></i>
-            </div>
+            <input type="text" class="form-control" id="title" name="title" required>
         </div>
         <div class="form-group">
             <label for="subject">Subject</label>
@@ -241,22 +110,9 @@
             </thead>
             <tbody>
             <tr>
-                <td>
-                    <div class="input-group">
-                        <input type="text" name="term[]" class="form-control" oninput="validateForm()" required>
-                        <i class="fa fa-exclamation-circle warning-icon" aria-hidden="true"
-                           data-warning="Term cannot be empty or duplicated"></i>
-                    </div>
-                </td>
-                <td>
-                    <div class="input-group">
-                        <input type="text" name="definition[]" class="form-control" oninput="validateForm()" required>
-                        <i class="fa fa-exclamation-circle warning-icon" aria-hidden="true"
-                           data-warning="Definition cannot be empty or duplicated"></i>
-                    </div>
-                </td>
-                <td><span class="delete-button" onclick="deleteRow(this)"><i class="fa fa-minus" aria-hidden="true"></i></span>
-                </td>
+                <td><input type="text" name="term" class="form-control" required></td>
+                <td><input type="text" name="definition" class="form-control" required></td>
+                <td><span class="delete-button" onclick="deleteRow(this)">&minus;</span></td>
             </tr>
             <tr>
                 <td colspan="3">
@@ -265,8 +121,7 @@
             </tr>
             </tbody>
         </table>
-        <div id="warning" class="warning"></div>
-        <button type="submit" class="btn btn-success" disabled>Create Flashcard Set</button>
+        <button type="submit" class="btn btn-success">Create Flashcard Set</button>
     </form>
 </div>
 <!-- JavaScript Libraries -->
Index: src/java/dal/FlashcardDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dal;\r\n\r\nimport model.flashcard.Flashcard;\r\n\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport model.flashcard.FlashcardAnswer;\r\nimport model.flashcard.FlashcardQuestions;\r\nimport model.subject.Subject;\r\n\r\npublic class FlashcardDAO extends DBContext {\r\n\r\n    public ArrayList<Flashcard> getAllFlashcards() throws SQLException {\r\n        String sql = \"select * from flashcard_set\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        ResultSet rs = st.executeQuery();\r\n        ArrayList<Flashcard> list = new ArrayList<>();\r\n        while (rs.next()) {\r\n            Flashcard f = new Flashcard();\r\n            f.setFlashcardSetId(rs.getInt(\"id\"));\r\n            f.setName(rs.getString(\"name\"));\r\n            f.setSubjectId(rs.getInt(\"subject_id\"));\r\n            list.add(f);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public ArrayList<Subject> getAllSubjects() {\r\n        ArrayList<Subject> list = new ArrayList<>();\r\n        String sql = \"SELECT * FROM subject\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Subject s = new Subject();\r\n                s.setId(rs.getInt(\"id\"));\r\n                s.setCode(rs.getString(\"code\"));\r\n                s.setName(rs.getString(\"name\"));\r\n                list.add(s);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public String getSubjectName(int subjectId) {\r\n        String subjectName = \"\";\r\n        String sql = \"SELECT name FROM subject WHERE id = ?\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, subjectId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                subjectName = rs.getString(\"name\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return subjectName;\r\n    }\r\n\r\n    public String getSubjectCode(int subjectId) {\r\n        String subjectCode = \"\";\r\n        String sql = \"SELECT code FROM subject WHERE id = ?\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, subjectId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                subjectCode = rs.getString(\"code\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return subjectCode;\r\n    }\r\n\r\n    public int getNumQuestions(int flashcardSetId) {\r\n        String sql = \"SELECT COUNT(*) AS num_questions FROM flashcard_question WHERE flashcard_set_id = ?\";\r\n        int numQuestions = 0;\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, flashcardSetId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                numQuestions = rs.getInt(\"num_questions\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return numQuestions;\r\n    }\r\n\r\n    public ArrayList<FlashcardQuestions> getFlashcardQuestions(int flashcardSetId) throws SQLException {\r\n        String sql = \"SELECT * FROM flashcard_question WHERE flashcard_set_id = ?\";\r\n        ArrayList<FlashcardQuestions> questions = new ArrayList<>();\r\n\r\n        try (PreparedStatement statement = connection.prepareStatement(sql)) {\r\n            statement.setInt(1, flashcardSetId);\r\n            ResultSet resultSet = statement.executeQuery();\r\n\r\n            while (resultSet.next()) {\r\n                FlashcardQuestions question = new FlashcardQuestions();\r\n                question.setQuestionId(resultSet.getInt(\"id\"));\r\n                question.setTerm(resultSet.getString(\"term\"));\r\n                question.setDefinition(resultSet.getString(\"definition\"));\r\n                question.setFlashcardSetId(resultSet.getInt(\"flashcard_set_id\"));\r\n\r\n                questions.add(question);\r\n            }\r\n        }\r\n        return questions;\r\n    }\r\n\r\n    public boolean addFlashcardSet(String name, int subjectId, int userId) {\r\n        String sql = \"INSERT INTO flashcard_set (name, subject_id, created_by) VALUES (?, ?, ?)\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, name);\r\n            st.setInt(2, subjectId);\r\n            st.setInt(3, userId);\r\n            int rowsInserted = st.executeUpdate();\r\n            return rowsInserted > 0;\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void addFlashcardQuestions(ArrayList<FlashcardQuestions> questions, int flashcardSetId) {\r\n        String sql = \"INSERT INTO flashcard_question (term, definition, flashcard_set_id) VALUES (?, ?, ?)\";\r\n        try {\r\n            connection.setAutoCommit(false);\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            for (FlashcardQuestions question : questions) {\r\n                st.setString(1, question.getTerm());\r\n                st.setString(2, question.getDefinition());\r\n                st.setInt(3, flashcardSetId);\r\n                st.addBatch();\r\n            }\r\n            st.executeBatch();  // Add this line to execute the batch\r\n            connection.commit();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n            try {\r\n                connection.rollback();\r\n            } catch (SQLException ex) {\r\n                System.out.println(ex.getMessage());\r\n            }\r\n        } finally {\r\n            try {\r\n                connection.setAutoCommit(true);\r\n            } catch (SQLException e) {\r\n                System.out.println(e.getMessage());\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public int getFlashcardSetId(String name) {\r\n        String sql = \"SELECT id FROM flashcard_set WHERE name = ?\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, name);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return rs.getInt(\"id\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return -1; // Return -1 if not found\r\n    }\r\n\r\n    public int getUserId(String email) {\r\n        String sql = \"SELECT id FROM user WHERE email = ?\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, email);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return rs.getInt(\"id\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return -1; // Return -1 if not found\r\n    }\r\n\r\n    //retrieve all possible flashcard answers for the flashcard learn page\r\n    public ArrayList<FlashcardAnswer> getFlashcardAnswers() {\r\n        String sql = \"SELECT * FROM flashcard_question\";\r\n        ArrayList<FlashcardAnswer> answers = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                FlashcardAnswer answer = new FlashcardAnswer();\r\n                answer.setQuestionId(rs.getInt(\"id\"));\r\n                answer.setAnswer(rs.getString(\"definition\"));\r\n                answers.add(answer);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return answers;\r\n    }\r\n\r\n    public ArrayList<FlashcardAnswer> getSetAnswers(int setId) {\r\n        String sql = \"SELECT * FROM flashcard_question WHERE flashcard_set_id = ?\";\r\n        ArrayList<FlashcardAnswer> answers = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, setId);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                FlashcardAnswer answer = new FlashcardAnswer();\r\n                answer.setQuestionId(rs.getInt(\"id\"));\r\n                answer.setAnswer(rs.getString(\"definition\"));\r\n                answers.add(answer);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return answers;\r\n    }\r\n\r\n\r\n    public boolean isOwner(String email, int flashcardSetId) {\r\n        String sql = \"SELECT * FROM flashcard_set WHERE id = ? AND created_by = (SELECT id FROM user WHERE email = ?)\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, flashcardSetId);\r\n            st.setString(2, email);\r\n            ResultSet rs = st.executeQuery();\r\n            return rs.next();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public Flashcard getFlashcardSetById(int flashcardSetId) {\r\n        String sql = \"SELECT * FROM flashcard_set WHERE id = ?\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, flashcardSetId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                Flashcard flashcardSet = new Flashcard();\r\n                flashcardSet.setFlashcardSetId(flashcardSetId);\r\n                flashcardSet.setName(rs.getString(\"name\"));\r\n                flashcardSet.setSubjectId(rs.getInt(\"subject_id\"));\r\n                return flashcardSet;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void updateFlashcardSet(int flashcardSetId, String title, int subjectId) throws SQLException {\r\n        String query = \"UPDATE flashcard_set SET name = ?, subject_id = ? WHERE id = ?\";\r\n        try (PreparedStatement ps = connection.prepareStatement(query)) {\r\n            ps.setString(1, title);\r\n            ps.setInt(2, subjectId);\r\n            ps.setInt(3, flashcardSetId);\r\n            ps.executeUpdate();\r\n        }\r\n    }\r\n\r\n    public void updateFlashcardQuestions(int flashcardSetId, List<FlashcardQuestions> questions) throws SQLException {\r\n        String deleteQuery = \"DELETE FROM flashcard_question WHERE flashcard_set_id = ?\";\r\n        try (PreparedStatement deletePs = connection.prepareStatement(deleteQuery)) {\r\n            deletePs.setInt(1, flashcardSetId);\r\n            deletePs.executeUpdate();\r\n        }\r\n\r\n        String insertQuery = \"INSERT INTO flashcard_question (flashcard_set_id, term, definition) VALUES (?, ?, ?)\";\r\n        try (PreparedStatement insertPs = connection.prepareStatement(insertQuery)) {\r\n            for (FlashcardQuestions question : questions) {\r\n                insertPs.setInt(1, flashcardSetId);\r\n                insertPs.setString(2, question.getTerm());\r\n                insertPs.setString(3, question.getDefinition());\r\n                insertPs.addBatch();\r\n            }\r\n            insertPs.executeBatch();\r\n        }\r\n    }\r\n\r\n    public boolean deleteFlashcardSet(int flashcardSetId) {\r\n        String deleteQuestionsSQL = \"DELETE FROM flashcard_question WHERE flashcard_set_id = ?\";\r\n        String deleteFlashcardSetSQL = \"DELETE FROM flashcard_set WHERE id = ?\";\r\n\r\n        try {\r\n            // Disable auto-commit\r\n            connection.setAutoCommit(false);\r\n\r\n            // Delete flashcard questions\r\n            try (PreparedStatement deleteQuestionsPs = connection.prepareStatement(deleteQuestionsSQL)) {\r\n                deleteQuestionsPs.setInt(1, flashcardSetId);\r\n                deleteQuestionsPs.executeUpdate();\r\n            }\r\n\r\n            // Delete flashcard set\r\n            try (PreparedStatement deleteFlashcardSetPs = connection.prepareStatement(deleteFlashcardSetSQL)) {\r\n                deleteFlashcardSetPs.setInt(1, flashcardSetId);\r\n                int rowsAffected = deleteFlashcardSetPs.executeUpdate();\r\n\r\n                if (rowsAffected > 0) {\r\n                    // Commit transaction if deletion was successful\r\n                    connection.commit();\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            // Rollback transaction on error\r\n            try {\r\n                connection.rollback();\r\n            } catch (SQLException rollbackEx) {\r\n                System.out.println(\"Rollback failed: \" + rollbackEx.getMessage());\r\n            }\r\n            System.out.println(\"Error deleting flashcard set: \" + e.getMessage());\r\n        } finally {\r\n            // Restore auto-commit\r\n            try {\r\n                connection.setAutoCommit(true);\r\n            } catch (SQLException e) {\r\n                System.out.println(\"Failed to restore auto-commit: \" + e.getMessage());\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public String getFlashcardName(int flashcardSetId) {\r\n        String flashcardSetName = \"\";\r\n        String sql = \"SELECT name FROM flashcard_set WHERE id = ?\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, flashcardSetId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                flashcardSetName = rs.getString(\"name\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return flashcardSetName;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/dal/FlashcardDAO.java b/src/java/dal/FlashcardDAO.java
--- a/src/java/dal/FlashcardDAO.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/dal/FlashcardDAO.java	(date 1721635964777)
@@ -132,7 +132,7 @@
         }
     }
 
-    public void addFlashcardQuestions(ArrayList<FlashcardQuestions> questions, int flashcardSetId) {
+    public boolean addFlashcardQuestions(ArrayList<FlashcardQuestions> questions, int flashcardSetId) {
         String sql = "INSERT INTO flashcard_question (term, definition, flashcard_set_id) VALUES (?, ?, ?)";
         try {
             connection.setAutoCommit(false);
@@ -143,8 +143,9 @@
                 st.setInt(3, flashcardSetId);
                 st.addBatch();
             }
-            st.executeBatch();  // Add this line to execute the batch
+            int[] rowsInserted = st.executeBatch();
             connection.commit();
+            return rowsInserted.length == questions.size();
         } catch (SQLException e) {
             System.out.println(e.getMessage());
             try {
@@ -152,6 +153,7 @@
             } catch (SQLException ex) {
                 System.out.println(ex.getMessage());
             }
+            return false;
         } finally {
             try {
                 connection.setAutoCommit(true);
@@ -161,7 +163,6 @@
         }
     }
 
-
     public int getFlashcardSetId(String name) {
         String sql = "SELECT id FROM flashcard_set WHERE name = ?";
         try {
@@ -192,6 +193,19 @@
         return -1; // Return -1 if not found
     }
 
+    public boolean deleteFlashcardSet(int flashcardSetId) {
+        String sql = "DELETE FROM flashcard_set WHERE id = ?";
+        try {
+            PreparedStatement st = connection.prepareStatement(sql);
+            st.setInt(1, flashcardSetId);
+            int rowsDeleted = st.executeUpdate();
+            return rowsDeleted > 0;
+        } catch (SQLException e) {
+            System.out.println(e.getMessage());
+            return false;
+        }
+    }
+
     //retrieve all possible flashcard answers for the flashcard learn page
     public ArrayList<FlashcardAnswer> getFlashcardAnswers() {
         String sql = "SELECT * FROM flashcard_question";
@@ -211,130 +225,43 @@
         return answers;
     }
 
-    public ArrayList<FlashcardAnswer> getSetAnswers(int setId) {
-        String sql = "SELECT * FROM flashcard_question WHERE flashcard_set_id = ?";
-        ArrayList<FlashcardAnswer> answers = new ArrayList<>();
+    public FlashcardAnswer getCorrectAnswer(int flashcardQuestionId) {
+        String sql = "SELECT definition FROM flashcard_question WHERE id = ?";
         try {
             PreparedStatement st = connection.prepareStatement(sql);
-            st.setInt(1, setId);
+            st.setInt(1, flashcardQuestionId);
             ResultSet rs = st.executeQuery();
-            while (rs.next()) {
+            if (rs.next()) {
                 FlashcardAnswer answer = new FlashcardAnswer();
-                answer.setQuestionId(rs.getInt("id"));
+                answer.setQuestionId(flashcardQuestionId);
                 answer.setAnswer(rs.getString("definition"));
-                answers.add(answer);
+                return answer;
             }
         } catch (SQLException e) {
             System.out.println(e.getMessage());
         }
-        return answers;
-    }
-
-
-    public boolean isOwner(String email, int flashcardSetId) {
-        String sql = "SELECT * FROM flashcard_set WHERE id = ? AND created_by = (SELECT id FROM user WHERE email = ?)";
-        try {
-            PreparedStatement st = connection.prepareStatement(sql);
-            st.setInt(1, flashcardSetId);
-            st.setString(2, email);
-            ResultSet rs = st.executeQuery();
-            return rs.next();
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-            return false;
-        }
+        return null;
     }
 
-    public Flashcard getFlashcardSetById(int flashcardSetId) {
-        String sql = "SELECT * FROM flashcard_set WHERE id = ?";
+    //retrieve all possible flashcard wrong answers for the flashcard learn page, excluding a specific question
+    public List<FlashcardAnswer> getFlashcardWrongAnswers(int flashcardQuestionId) {
+        String sql = "SELECT * FROM flashcard_question";
+        ArrayList<FlashcardAnswer> answers = new ArrayList<>();
         try {
             PreparedStatement st = connection.prepareStatement(sql);
-            st.setInt(1, flashcardSetId);
             ResultSet rs = st.executeQuery();
-            if (rs.next()) {
-                Flashcard flashcardSet = new Flashcard();
-                flashcardSet.setFlashcardSetId(flashcardSetId);
-                flashcardSet.setName(rs.getString("name"));
-                flashcardSet.setSubjectId(rs.getInt("subject_id"));
-                return flashcardSet;
+            while (rs.next()) {
+                if (rs.getInt("id") != flashcardQuestionId) {
+                    FlashcardAnswer answer = new FlashcardAnswer();
+                    answer.setQuestionId(rs.getInt("id"));
+                    answer.setAnswer(rs.getString("definition"));
+                    answers.add(answer);
+                }
             }
         } catch (SQLException e) {
             System.out.println(e.getMessage());
         }
-        return null;
-    }
-
-    public void updateFlashcardSet(int flashcardSetId, String title, int subjectId) throws SQLException {
-        String query = "UPDATE flashcard_set SET name = ?, subject_id = ? WHERE id = ?";
-        try (PreparedStatement ps = connection.prepareStatement(query)) {
-            ps.setString(1, title);
-            ps.setInt(2, subjectId);
-            ps.setInt(3, flashcardSetId);
-            ps.executeUpdate();
-        }
-    }
-
-    public void updateFlashcardQuestions(int flashcardSetId, List<FlashcardQuestions> questions) throws SQLException {
-        String deleteQuery = "DELETE FROM flashcard_question WHERE flashcard_set_id = ?";
-        try (PreparedStatement deletePs = connection.prepareStatement(deleteQuery)) {
-            deletePs.setInt(1, flashcardSetId);
-            deletePs.executeUpdate();
-        }
-
-        String insertQuery = "INSERT INTO flashcard_question (flashcard_set_id, term, definition) VALUES (?, ?, ?)";
-        try (PreparedStatement insertPs = connection.prepareStatement(insertQuery)) {
-            for (FlashcardQuestions question : questions) {
-                insertPs.setInt(1, flashcardSetId);
-                insertPs.setString(2, question.getTerm());
-                insertPs.setString(3, question.getDefinition());
-                insertPs.addBatch();
-            }
-            insertPs.executeBatch();
-        }
-    }
-
-    public boolean deleteFlashcardSet(int flashcardSetId) {
-        String deleteQuestionsSQL = "DELETE FROM flashcard_question WHERE flashcard_set_id = ?";
-        String deleteFlashcardSetSQL = "DELETE FROM flashcard_set WHERE id = ?";
-
-        try {
-            // Disable auto-commit
-            connection.setAutoCommit(false);
-
-            // Delete flashcard questions
-            try (PreparedStatement deleteQuestionsPs = connection.prepareStatement(deleteQuestionsSQL)) {
-                deleteQuestionsPs.setInt(1, flashcardSetId);
-                deleteQuestionsPs.executeUpdate();
-            }
-
-            // Delete flashcard set
-            try (PreparedStatement deleteFlashcardSetPs = connection.prepareStatement(deleteFlashcardSetSQL)) {
-                deleteFlashcardSetPs.setInt(1, flashcardSetId);
-                int rowsAffected = deleteFlashcardSetPs.executeUpdate();
-
-                if (rowsAffected > 0) {
-                    // Commit transaction if deletion was successful
-                    connection.commit();
-                    return true;
-                }
-            }
-        } catch (SQLException e) {
-            // Rollback transaction on error
-            try {
-                connection.rollback();
-            } catch (SQLException rollbackEx) {
-                System.out.println("Rollback failed: " + rollbackEx.getMessage());
-            }
-            System.out.println("Error deleting flashcard set: " + e.getMessage());
-        } finally {
-            // Restore auto-commit
-            try {
-                connection.setAutoCommit(true);
-            } catch (SQLException e) {
-                System.out.println("Failed to restore auto-commit: " + e.getMessage());
-            }
-        }
-        return false;
+        return answers;
     }
 
     public String getFlashcardName(int flashcardSetId) {
Index: src/java/controller/flashcard/FlashcardTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template\r\n */\r\n\r\npackage controller.flashcard;\r\n\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\nimport dal.FlashcardDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport model.flashcard.FlashcardAnswer;\r\nimport model.flashcard.FlashcardQuestions;\r\n\r\n/**\r\n * @author PC\r\n */\r\npublic class FlashcardTest extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            FlashcardDAO flashcardDAO = new FlashcardDAO();\r\n            int flashcardSetId = Integer.parseInt(request.getParameter(\"flashcardSetId\"));\r\n            List<FlashcardQuestions> flashcardQuestions = flashcardDAO.getFlashcardQuestions(flashcardSetId);\r\n            List<FlashcardAnswer> allAnswers = flashcardDAO.getSetAnswers(flashcardSetId);\r\n            request.setAttribute(\"flashcardQuestions\", flashcardQuestions);\r\n            request.setAttribute(\"allAnswers\", allAnswers);\r\n            request.getRequestDispatcher(\"/flashcard-test.jsp\").forward(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/flashcard/FlashcardTest.java b/src/java/controller/flashcard/FlashcardTest.java
--- a/src/java/controller/flashcard/FlashcardTest.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/flashcard/FlashcardTest.java	(date 1721635964773)
@@ -32,7 +32,14 @@
             FlashcardDAO flashcardDAO = new FlashcardDAO();
             int flashcardSetId = Integer.parseInt(request.getParameter("flashcardSetId"));
             List<FlashcardQuestions> flashcardQuestions = flashcardDAO.getFlashcardQuestions(flashcardSetId);
-            List<FlashcardAnswer> allAnswers = flashcardDAO.getSetAnswers(flashcardSetId);
+            List<FlashcardAnswer> allAnswers = flashcardDAO.getFlashcardAnswers();
+
+            if (allAnswers.size() <= 3) {
+                List<FlashcardAnswer> wrongAnswers = flashcardDAO.getFlashcardWrongAnswers(flashcardSetId);
+                allAnswers.addAll(wrongAnswers);
+                allAnswers.addAll(wrongAnswers);
+            }
+
             request.setAttribute("flashcardQuestions", flashcardQuestions);
             request.setAttribute("allAnswers", allAnswers);
             request.getRequestDispatcher("/flashcard-test.jsp").forward(request, response);
Index: src/java/controller/flashcard/FlashcardUpdate.java
===================================================================
diff --git a/src/java/controller/flashcard/FlashcardUpdate.java b/src/java/controller/flashcard/FlashcardUpdate.java
deleted file mode 100644
--- a/src/java/controller/flashcard/FlashcardUpdate.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,107 +0,0 @@
-/*
- * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
- * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
- */
-
-package controller.flashcard;
-
-import java.io.IOException;
-import java.io.PrintWriter;
-import java.sql.SQLException;
-import java.util.ArrayList;
-import java.util.List;
-
-import dal.FlashcardDAO;
-import jakarta.servlet.ServletException;
-import jakarta.servlet.http.HttpServlet;
-import jakarta.servlet.http.HttpServletRequest;
-import jakarta.servlet.http.HttpServletResponse;
-import jakarta.servlet.http.HttpSession;
-import model.flashcard.FlashcardQuestions;
-import model.user.User;
-
-/**
- * @author PC
- */
-public class FlashcardUpdate extends HttpServlet {
-
-    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        response.setContentType("text/html;charset=UTF-8");
-        HttpSession session = request.getSession();
-        User user = (User) session.getAttribute("user");
-        if (user == null) {
-            response.sendRedirect("login.jsp");
-        } else {
-            try {
-                int flashcardSetId = Integer.parseInt(request.getParameter("flashcardSetId"));
-                String title = request.getParameter("title");
-                int subjectId = Integer.parseInt(request.getParameter("subjectId"));
-
-                List<FlashcardQuestions> questions = new ArrayList<>();
-                String[] terms = request.getParameterValues("term");
-                String[] definitions = request.getParameterValues("definition");
-                for (int i = 0; i < terms.length; i++) {
-                    FlashcardQuestions question = new FlashcardQuestions();
-                    question.setTerm(terms[i]);
-                    question.setDefinition(definitions[i]);
-                    questions.add(question);
-                }
-
-                FlashcardDAO flashcardDAO = new FlashcardDAO();
-                flashcardDAO.updateFlashcardSet(flashcardSetId, title, subjectId);
-                flashcardDAO.updateFlashcardQuestions(flashcardSetId, questions);
-
-                session.setAttribute("flashcardSetId", flashcardSetId);
-                session.setAttribute("flashcardQuestions", questions);
-                session.setAttribute("flashcard", title); // Ensure the flashcard name is updated
-
-                response.sendRedirect(request.getContextPath() + "/flashcard-question?flashcardSetId=" + flashcardSetId);
-            } catch (SQLException e) {
-                e.printStackTrace();
-                response.sendRedirect(request.getContextPath() + "/flashcard");
-            }
-        }
-    }
-
-    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
-
-    /**
-     * Handles the HTTP <code>GET</code> method.
-     *
-     * @param request  servlet request
-     * @param response servlet response
-     * @throws ServletException if a servlet-specific error occurs
-     * @throws IOException      if an I/O error occurs
-     */
-    @Override
-    protected void doGet(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        processRequest(request, response);
-    }
-
-    /**
-     * Handles the HTTP <code>POST</code> method.
-     *
-     * @param request  servlet request
-     * @param response servlet response
-     * @throws ServletException if a servlet-specific error occurs
-     * @throws IOException      if an I/O error occurs
-     */
-    @Override
-    protected void doPost(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        processRequest(request, response);
-    }
-
-    /**
-     * Returns a short description of the servlet.
-     *
-     * @return a String containing servlet description
-     */
-    @Override
-    public String getServletInfo() {
-        return "Short description";
-    }// </editor-fold>
-
-}
Index: web/WEB-INF/views/material/materiallist.jsp
===================================================================
diff --git a/web/WEB-INF/views/material/materiallist.jsp b/web/WEB-INF/views/material/materiallist.jsp
deleted file mode 100644
--- a/web/WEB-INF/views/material/materiallist.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,235 +0,0 @@
-<%@page isELIgnored="false" %>
-<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@page contentType="text/html" pageEncoding="UTF-8"%>
-<html
-    lang="en"
-    class="light-style layout-menu-fixed layout-compact"
-    dir="ltr"
-    data-theme="theme-default"
-    data-assets-path="../assets/"
-    data-template="vertical-menu-template-free">
-    <head>
-        <meta charset="utf-8" />
-        <meta
-            name="viewport"
-            content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />
-
-        <title>Lesson list</title>
-
-        <meta name="description" content="" />
-
-        <!-- Favicon -->
-        <link rel="icon" type="image/x-icon" href="../assets/img/favicon/favicon.ico" />
-
-        <!-- Fonts -->
-        <link rel="preconnect" href="https://fonts.googleapis.com" />
-        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
-        <link
-            href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
-            rel="stylesheet" />
-
-        <link rel="stylesheet" href="../assets/vendor/fonts/boxicons.css" />
-
-        <!-- Core CSS -->
-        <link rel="stylesheet" href="../assets/vendor/css/core.css" class="template-customizer-core-css" />
-        <link rel="stylesheet" href="../assets/vendor/css/theme-default.css" class="template-customizer-theme-css" />
-        <link rel="stylesheet" href="../assets/css/demo.css" />
-
-        <!-- Vendors CSS -->
-        <link rel="stylesheet" href="../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
-        <link rel="stylesheet" href="../assets/vendor/libs/apex-charts/apex-charts.css" />
-
-        <!-- Page CSS -->
-
-        <!-- Favicon -->
-        <link href="../img/favicon.ico" rel="icon">
-
-        <!-- Google Web Fonts -->
-        <link rel="preconnect" href="https://fonts.gstatic.com">
-        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap" rel="stylesheet"> 
-
-        <!-- Font Awesome -->
-        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
-
-        <!-- Libraries Stylesheet -->
-        <link href="../lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
-
-        <!-- Customized Bootstrap Stylesheet -->
-        <link href="../css/style.css" rel="stylesheet">
-
-        <!-- Helpers -->
-        <script src="../assets/vendor/js/helpers.js"></script>
-        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
-        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
-        <script src="../assets/js/config.js"></script>
-    </head>
-
-    <body>
-        <!-- Layout wrapper -->
-        <div class="layout-wrapper layout-content-navbar">
-            <div class="layout-container">
-                <!-- Menu -->
-
-                <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
-                    <div class="app-brand demo">
-                        <a href="${pageContext.request.contextPath}/home" class="app-brand-link">
-                            <h1 class="m-0 text-uppercase text-primary"><i class="fa fa-book-reader mr-3"></i>KRS</h1>
-                        </a>
-
-                        <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
-                            <i class="bx bx-chevron-left bx-sm align-middle"></i>
-                        </a>
-                    </div>
-
-                    <div class="menu-inner-shadow"></div>
-
-                    <ul class="menu-inner py-1">
-
-                        <li class="menu-header small text-uppercase">
-                            <span class="menu-header-text">Administration</span>
-                        </li>
-                        <!-- Apps -->
-                        <li class="menu-item">
-                            <a href="${pageContext.request.contextPath}/userlist" class="menu-link">
-                                <i class="menu-icon tf-icons bx bx-user"></i>
-                                <div data-i18n="User list">User list</div>
-                            </a>
-                        </li>
-                        <li class="menu-item">
-                            <a href="${pageContext.request.contextPath}/subjectlist" class="menu-link">
-                                <i class="menu-icon tf-icons bx bx-book-open"></i>
-                                <div data-i18n="Subject list">Subject list</div>
-                            </a>
-                        </li>
-                        <li class="menu-item">
-                            <a href="${pageContext.request.contextPath}/classlist" class="menu-link">
-                                <i class="menu-icon tf-icons bx bx-chalkboard"></i>
-                                <div data-i18n="Class list">Class list</div>
-                            </a>
-                        </li>
-
-                        <li class="menu-header small text-uppercase">
-                            <span class="menu-header-text">Navigation</span>
-                        </li>
-
-                        <li class="menu-item">
-                            <a href="${pageContext.request.contextPath}/home" class="menu-link">
-                                <i class="menu-icon tf-icons bx bx-home"></i>
-                                <div data-i18n="Home">Home</div>
-                            </a>
-                        </li>
-
-                        <li class="menu-item">
-                            <a href="${pageContext.request.contextPath}/dashboard.jsp" class="menu-link">
-                                <i class="menu-icon tf-icons bx bx-bar-chart"></i>
-                                <div data-i18n="Dashboard">Dashboard</div>
-                            </a>
-                        </li>
-
-                    </ul>
-                </aside>
-                <!-- / Menu -->
-
-                <!-- Layout container -->
-                <div class="layout-page">
-
-                    <!-- Content wrapper -->
-                    <div class="content-wrapper">
-                        <!-- Content -->
-                        <jsp:include page="/WEB-INF/common/header.jsp"/>
-
-                        <div class="container-xxl flex-grow-1 container-p-y">
-
-                            <div>
-                                <form action="${pageContext.request.contextPath}/material/new" method="post" enctype="multipart/form-data">
-                                    <input type="hidden" name="lessonid" value="${requestScope.lessonid}"/>
-                                    <input style="width: 300px;" type="file" name="newmaterial" />
-                                    <button class="btn btn-primary px-3">
-                                        <i class="fa fa-plus-square mr-3"></i>
-                                        Add material
-                                    </button>
-                                </form>
-                            </div>
-
-                            <h4 class="py-3 mb-4"><span class="text-muted fw-light">Material /</span> Material list</h4>
-
-                            <!-- Basic Bootstrap Table -->
-                            <div class="card">
-                                <h5 class="card-header">Lesson list for ${requestScope.subject.code}</h5>
-                                <div class="table-responsive text-nowrap">
-                                    <table class="table">
-                                        <thead>
-                                            <tr>
-                                                <th>#</th>
-                                                <th>Name</th>
-                                                <th></th>
-                                            </tr>
-                                        </thead>
-                                        <tbody class="table-border-bottom-0">
-                                            <c:forEach items="${requestScope.list}" var="material">
-                                                <tr>
-                                                    <td>${material.id}</td>
-                                                    <td>
-                                                        <a href="${material.webUri}" download="${material.name}">
-                                                            ${material.name}
-                                                        </a>
-                                                    </td>
-                                                    <td>
-                                                        <i class="bx bx-trash"></i>
-                                                    </td>
-                                                </tr>
-                                            </c:forEach>
-                                        </tbody>
-                                    </table>
-                                </div>
-                            </div>
-                            <!--/ Basic Bootstrap Table -->
-
-                        </div>
-                        <!-- / Content -->
-
-                        <jsp:include page="/WEB-INF/common/footer.jsp"/>
-                    </div>
-                    <!-- Content wrapper -->
-
-
-                </div>
-                <!-- / Layout page -->
-            </div>
-        </div>
-        <!-- / Layout wrapper -->
-
-        <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
-        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
-        <script src="../lib/easing/easing.min.js"></script>
-        <script src="../lib/waypoints/waypoints.min.js"></script>
-        <script src="../lib/counterup/counterup.min.js"></script>
-        <script src="../lib/owlcarousel/owl.carousel.min.js"></script>
-
-        <!-- Template Javascript -->
-        <script src="../js/main.js"></script>
-
-        <!-- Core JS -->
-        <!-- build:js assets/vendor/js/core.js -->
-
-        <script src="../assets/vendor/libs/jquery/jquery.js"></script>
-        <script src="../assets/vendor/libs/popper/popper.js"></script>
-        <script src="../assets/vendor/js/bootstrap.js"></script>
-        <script src="../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
-        <script src="../assets/vendor/js/menu.js"></script>
-
-        <!-- endbuild -->
-
-        <!-- Vendors JS -->
-        <script src="../assets/vendor/libs/apex-charts/apexcharts.js"></script>
-
-        <!-- Main JS -->
-        <script src="../assets/js/main.js"></script>
-
-        <!-- Page JS -->
-        <script src="assets/js/dashboards-analytics.js"></script>
-
-        <!-- Place this tag in your head or just before your close body tag. -->
-        <script async defer src="https://buttons.github.io/buttons.js"></script>
-    </body>
-</html>
Index: web/dashboard-user.jsp
===================================================================
diff --git a/web/dashboard-user.jsp b/web/dashboard-user.jsp
deleted file mode 100644
--- a/web/dashboard-user.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,197 +0,0 @@
-<%@page isELIgnored="false" %>
-<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@page contentType="text/html" pageEncoding="UTF-8" %>
-<html
-        lang="en"
-        class="light-style layout-menu-fixed layout-compact"
-        dir="ltr"
-        data-theme="theme-default"
-        data-assets-path="assets/"
-        data-template="vertical-menu-template-free">
-<head>
-    <meta charset="utf-8"/>
-    <meta
-            name="viewport"
-            content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0"/>
-
-    <title>User Profile</title>
-
-    <meta name="description" content=""/>
-
-    <!-- Favicon -->
-    <link href="img/favicon.ico" rel="icon">
-
-    <!-- Google Web Fonts -->
-    <link rel="preconnect" href="https://fonts.gstatic.com">
-    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap"
-          rel="stylesheet">
-
-    <!-- Font Awesome -->
-    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
-
-    <!-- Libraries Stylesheet -->
-    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
-
-    <!-- Customized Bootstrap Stylesheet -->
-    <link href="css/style.css" rel="stylesheet">
-
-    <!-- Fonts -->
-    <link rel="preconnect" href="https://fonts.googleapis.com"/>
-    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
-    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
-          rel="stylesheet"/>
-
-    <link rel="stylesheet" href="assets/vendor/fonts/boxicons.css"/>
-
-    <!-- Core CSS -->
-    <link rel="stylesheet" href="assets/vendor/css/core.css" class="template-customizer-core-css"/>
-    <link rel="stylesheet" href="assets/vendor/css/theme-default.css" class="template-customizer-theme-css"/>
-    <link rel="stylesheet" href="assets/css/demo.css"/>
-
-    <!-- Vendors CSS -->
-    <link rel="stylesheet" href="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css"/>
-    <link rel="stylesheet" href="assets/vendor/libs/apex-charts/apex-charts.css"/>
-
-    <!-- Page CSS -->
-    <style>
-        /* Adjust header and sidebar */
-        .layout-header {
-            z-index: 1000; /* Ensure header is above other content */
-            position: fixed; /* Fix header position */
-            width: 100%; /* Full width */
-            top: 0; /* Align to top */
-            background-color: #ffffff; /* Set background color */
-            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Add shadow */
-        }
-
-        #layout-menu {
-            z-index: 900; /* Ensure sidebar is below header */
-            position: fixed; /* Fix sidebar position */
-            top: 0; /* Align to top */
-            left: 0; /* Align to left */
-            height: 100%; /* Full height */
-            width: 280px; /* Adjust width as needed */
-            background-color: #f8f9fa; /* Set sidebar background color */
-            box-shadow: 2px 0 4px rgba(0, 0, 0, 0.1); /* Add shadow */
-            overflow-y: auto; /* Enable vertical scrolling if content overflows */
-        }
-
-        .layout-page {
-            margin-left: 280px; /* Adjust margin to prevent content from being overlapped by sidebar */
-            padding-top: 80px; /* Adjust padding to avoid content being overlapped by header */
-        }
-    </style>
-
-    <!-- Helpers -->
-    <script src="assets/vendor/js/helpers.js"></script>
-    <script src="assets/js/config.js"></script>
-</head>
-<body>
-<c:set var="currentPage" value="${pageContext.request.requestURI}"></c:set>
-<!-- Header -->
-<header class="layout-header">
-    <jsp:include page="header1.jsp"/>
-</header>
-<!-- /Header -->
-
-<!-- Layout wrapper -->
-<div class="layout-wrapper">
-    <div class="layout-container">
-        <!-- Sidebar -->
-        <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
-            <div class="app-brand demo">
-                <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
-                    <i class="bx bx-chevron-left bx-sm align-middle"></i>
-                </a>
-            </div>
-            <div class="menu-inner-shadow"></div>
-            <div class="menu-inner py-1">
-                <div class="user-profile text-center mt-3 mb-3">
-                    <img src="assets/img/avatars/1.png" alt="Profile" class="img-fluid rounded-circle mb-2"/>
-                    <h5 class="mb-0">User Name</h5>
-                </div>
-                <ul class="menu-inner">
-                    <li class="menu-item">
-                        <a href="#" class="menu-link">
-                            <div>Profile</div>
-                        </a>
-                    </li>
-                    <li class="menu-item">
-                        <a href="#" class="menu-link">
-                            <div>My Courses</div>
-                        </a>
-                    </li>
-                    <li class="menu-item">
-                        <a href="#" class="menu-link">
-                            <div>My Flashcard Sets</div>
-                        </a>
-                    </li>
-                    <li class="menu-item">
-                        <a href="#" class="menu-link">
-                            <div>Recent Activity</div>
-                        </a>
-                    </li>
-                    <li class="menu-item">
-                        <a href="#" class="menu-link">
-                            <div>Edit Profile</div>
-                        </a>
-                    </li>
-                    <li class="menu-item">
-                        <a href="#" class="menu-link">
-                            <div>Change Password</div>
-                        </a>
-                    </li>
-                    <li class="menu-item">
-                        <a href="${pageContext.request.contextPath}/logout" class="menu-link">
-                            <div>Log Out</div>
-                        </a>
-                    </li>
-                </ul>
-            </div>
-        </aside>
-        <!-- /Sidebar -->
-
-        <!-- Layout container -->
-        <div class="layout-page">
-
-            <!-- Content -->
-            <div class="content-wrapper">
-                <div class="container-xxl flex-grow-1 container-p-y">
-                    <!-- Content goes here -->
-                </div>
-            </div>
-            <!-- /Content -->
-
-        </div>
-        <!-- /Layout container -->
-    </div>
-</div>
-<!-- / Layout wrapper -->
-
-<!-- build:js assets/vendor/js/core.js -->
-<script src="assets/vendor/libs/jquery/jquery.js"></script>
-<script src="assets/vendor/libs/popper/popper.js"></script>
-<script src="assets/vendor/js/bootstrap.js"></script>
-<script src="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
-<script src="assets/vendor/js/menu.js"></script>
-<!-- endbuild -->
-
-<!-- Vendors JS -->
-<script src="assets/vendor/libs/apex-charts/apexcharts.js"></script>
-
-<!-- Main JS -->
-<script src="assets/js/main.js"></script>
-
-<!-- Page JS -->
-<script async defer src="https://buttons.github.io/buttons.js"></script>
-
-<!-- JavaScript Libraries -->
-<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
-<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
-<script src="lib/easing/easing.min.js"></script>
-<script src="lib/waypoints/waypoints.min.js"></script>
-<script src="lib/counterup/counterup.min.js"></script>
-<script src="lib/owlcarousel/owl.carousel.min.js"></script>
-
-</body>
-</html>
Index: src/java/controller/flashcard/FlashcardEdit.java
===================================================================
diff --git a/src/java/controller/flashcard/FlashcardEdit.java b/src/java/controller/flashcard/FlashcardEdit.java
deleted file mode 100644
--- a/src/java/controller/flashcard/FlashcardEdit.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,96 +0,0 @@
-/*
- * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
- * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
- */
-
-package controller.flashcard;
-
-import java.io.IOException;
-import java.io.PrintWriter;
-import java.sql.SQLException;
-import java.util.List;
-
-import dal.FlashcardDAO;
-import jakarta.servlet.RequestDispatcher;
-import jakarta.servlet.ServletException;
-import jakarta.servlet.http.HttpServlet;
-import jakarta.servlet.http.HttpServletRequest;
-import jakarta.servlet.http.HttpServletResponse;
-import jakarta.servlet.http.HttpSession;
-import model.flashcard.Flashcard;
-import model.flashcard.FlashcardQuestions;
-import model.user.User;
-
-/**
- * @author PC
- */
-public class FlashcardEdit extends HttpServlet {
-
-    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        response.setContentType("text/html;charset=UTF-8");
-        try {
-            HttpSession session = request.getSession();
-            User user = (User) session.getAttribute("user");
-            if (user == null) {
-                response.sendRedirect("login.jsp");
-            } else {
-                FlashcardDAO flashcardDAO = new FlashcardDAO();
-                int flashcardSetId = Integer.parseInt(request.getParameter("flashcardSetId"));
-                List<FlashcardQuestions> flashcardQuestions = flashcardDAO.getFlashcardQuestions(flashcardSetId);
-                boolean isOwner = flashcardDAO.isOwner(user.getEmail(), flashcardSetId);
-                Flashcard flashcard = flashcardDAO.getFlashcardSetById(flashcardSetId);
-                session.setAttribute("flashcard", flashcard);
-                session.setAttribute("isOwner", isOwner);
-                session.setAttribute("flashcardSetId", flashcardSetId);
-                session.setAttribute("flashcardQuestions", flashcardQuestions);
-                RequestDispatcher dispatcher = request.getRequestDispatcher("flashcard-edit.jsp");
-                dispatcher.forward(request, response);
-            }
-        } catch (SQLException e) {
-            RequestDispatcher dispatcher = request.getRequestDispatcher("home.jsp");
-            dispatcher.forward(request, response);
-        }
-    }
-
-    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
-
-    /**
-     * Handles the HTTP <code>GET</code> method.
-     *
-     * @param request  servlet request
-     * @param response servlet response
-     * @throws ServletException if a servlet-specific error occurs
-     * @throws IOException      if an I/O error occurs
-     */
-    @Override
-    protected void doGet(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        processRequest(request, response);
-    }
-
-    /**
-     * Handles the HTTP <code>POST</code> method.
-     *
-     * @param request  servlet request
-     * @param response servlet response
-     * @throws ServletException if a servlet-specific error occurs
-     * @throws IOException      if an I/O error occurs
-     */
-    @Override
-    protected void doPost(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        processRequest(request, response);
-    }
-
-    /**
-     * Returns a short description of the servlet.
-     *
-     * @return a String containing servlet description
-     */
-    @Override
-    public String getServletInfo() {
-        return "Short description";
-    }// </editor-fold>
-
-}
Index: web/flashcard-edit.jsp
===================================================================
diff --git a/web/flashcard-edit.jsp b/web/flashcard-edit.jsp
deleted file mode 100644
--- a/web/flashcard-edit.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,289 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
-<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
-<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
-
-<!DOCTYPE html>
-<html>
-<head>
-    <meta charset="UTF-8">
-    <title>Edit Flashcard Set</title>
-    <meta content="width=device-width, initial-scale=1.0" name="viewport">
-    <meta content="Free HTML Templates" name="keywords">
-    <meta content="Free HTML Templates" name="description">
-
-    <!-- Favicon -->
-    <link href="img/favicon.ico" rel="icon">
-
-    <!-- Google Web Fonts -->
-    <link rel="preconnect" href="https://fonts.gstatic.com">
-    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap"
-          rel="stylesheet">
-
-    <!-- Font Awesome -->
-    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
-
-    <!-- Libraries Stylesheet -->
-    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
-
-    <!-- Customized Bootstrap Stylesheet -->
-    <link href="css/style.css" rel="stylesheet">
-
-    <!-- Bootstrap CSS -->
-    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
-    <style>
-        .table {
-            margin-top: 20px;
-        }
-
-        .table th, .table td {
-            vertical-align: middle;
-        }
-
-        .delete-button {
-            color: red;
-            cursor: pointer;
-            font-size: 1.5em;
-        }
-
-        .warning {
-            color: red;
-            margin-top: 10px;
-        }
-
-        .input-group {
-            position: relative;
-        }
-
-        .warning-icon {
-            color: red;
-            position: absolute;
-            top: 50%;
-            left: -25px;
-            transform: translateY(-50%);
-            display: none;
-            cursor: pointer;
-        }
-
-        .form-control {
-            padding-right: 30px;
-        }
-
-        .warning-icon:hover::after {
-            content: attr(data-warning);
-            color: black;
-            background-color: #ffc107;
-            padding: 2px 5px;
-            border-radius: 3px;
-            position: absolute;
-            top: -25px;
-            left: 20px;
-            white-space: nowrap;
-            z-index: 10;
-        }
-    </style>
-    <script>
-        function addRow() {
-            var table = document.getElementById("flashcardTable");
-            var rowCount = table.rows.length;
-            var row = table.insertRow(rowCount - 1);
-
-            var cell1 = row.insertCell(0);
-            var element1 = document.createElement("div");
-            element1.className = "input-group";
-            var input1 = document.createElement("input");
-            input1.type = "text";
-            input1.name = "term";
-            input1.className = "form-control";
-            input1.oninput = validateForm;
-            var warningIcon1 = document.createElement("i");
-            warningIcon1.className = "fa fa-exclamation-circle warning-icon";
-            warningIcon1.setAttribute("aria-hidden", "true");
-            warningIcon1.setAttribute("data-warning", "Term cannot be empty or duplicated");
-            element1.appendChild(input1);
-            element1.appendChild(warningIcon1);
-            cell1.appendChild(element1);
-
-            var cell2 = row.insertCell(1);
-            var element2 = document.createElement("div");
-            element2.className = "input-group";
-            var input2 = document.createElement("input");
-            input2.type = "text";
-            input2.name = "definition";
-            input2.className = "form-control";
-            input2.oninput = validateForm;
-            var warningIcon2 = document.createElement("i");
-            warningIcon2.className = "fa fa-exclamation-circle warning-icon";
-            warningIcon2.setAttribute("aria-hidden", "true");
-            warningIcon2.setAttribute("data-warning", "Definition cannot be empty or duplicated");
-            element2.appendChild(input2);
-            element2.appendChild(warningIcon2);
-            cell2.appendChild(element2);
-
-            var cell3 = row.insertCell(2);
-            var deleteButton = document.createElement("span");
-            deleteButton.className = "delete-button";
-            deleteButton.innerHTML = '<i class="fa fa-minus" aria-hidden="true"></i>';
-            deleteButton.onclick = function () {
-                deleteRow(this);
-            };
-            cell3.appendChild(deleteButton);
-
-            validateForm();
-        }
-
-        function deleteRow(button) {
-            var row = button.parentNode.parentNode;
-            row.parentNode.removeChild(row);
-            validateForm();
-        }
-
-        function validateForm() {
-            var terms = document.getElementsByName("term");
-            var definitions = document.getElementsByName("definition");
-            var title = document.getElementById("title");
-            var updateButton = document.querySelector("button[type='submit']");
-            var warning = document.getElementById("warning");
-            var termSet = new Set();
-            var definitionSet = new Set();
-            var valid = true;
-
-            // Validate title
-            var titleWarningIcon = document.getElementById("titleWarningIcon");
-            if (title.value.trim() === "") {
-                valid = false;
-                titleWarningIcon.style.display = "inline";
-                titleWarningIcon.setAttribute("data-warning", "Title cannot be empty");
-            } else {
-                titleWarningIcon.style.display = "none";
-            }
-
-            // Validate terms and definitions
-            for (var i = 0; i < terms.length; i++) {
-                var term = terms[i].value.trim().toLowerCase();
-                var definition = definitions[i].value.trim().toLowerCase();
-                var warningIconTerm = terms[i].nextElementSibling;
-                var warningIconDefinition = definitions[i].nextElementSibling;
-
-                warningIconTerm.style.display = "none";
-                warningIconDefinition.style.display = "none";
-
-                if (term === "" || definition === "") {
-                    valid = false;
-                    if (term === "") {
-                        warningIconTerm.style.display = "inline";
-                        warningIconTerm.setAttribute("data-warning", "Term cannot be empty");
-                    }
-                    if (definition === "") {
-                        warningIconDefinition.style.display = "inline";
-                        warningIconDefinition.setAttribute("data-warning", "Definition cannot be empty");
-                    }
-                } else {
-                    if (termSet.has(term)) {
-                        valid = false;
-                        warningIconTerm.style.display = "inline";
-                        warningIconTerm.setAttribute("data-warning", "Terms cannot contain duplicate");
-                    } else {
-                        termSet.add(term);
-                    }
-                    if (definitionSet.has(definition)) {
-                        valid = false;
-                        warningIconDefinition.style.display = "inline";
-                        warningIconDefinition.setAttribute("data-warning", "Definitions cannot contain duplicate");
-                    } else {
-                        definitionSet.add(definition);
-                    }
-                }
-            }
-
-            if (termSet.size === 0) {
-                valid = false;
-                warning.innerHTML = "At least one term is required.";
-            } else {
-                warning.innerHTML = "";
-            }
-
-            updateButton.disabled = !valid;
-        }
-
-        window.onload = function () {
-            validateForm();
-        };
-    </script>
-</head>
-<body>
-<jsp:include page="header1.jsp"/>
-
-<div class="container">
-    <h2>Edit Flashcard Set</h2>
-    <form action="flashcard-update" method="post" onsubmit="return validateForm();">
-        <input type="hidden" name="flashcardSetId" value="${sessionScope.flashcardSetId}">
-        <div class="form-group">
-            <label for="title">Title</label>
-            <div class="input-group">
-                <input type="text" class="form-control" id="title" name="title" value="${sessionScope.flashcard.name}"
-                       required oninput="validateForm()">
-                <i id="titleWarningIcon" class="fa fa-exclamation-circle warning-icon" aria-hidden="true"></i>
-            </div>
-        </div>
-        <div class="form-group">
-            <label for="subject">Subject</label>
-            <select class="form-control" id="subject" name="subjectId" required>
-                <c:forEach var="subject" items="${subjects}">
-                    <option value="${subject.id}"
-                            <c:if test="${subject.id == sessionScope.flashcard.subjectId}">selected</c:if>>${subject.name}</option>
-                </c:forEach>
-            </select>
-        </div>
-        <table class="table" id="flashcardTable">
-            <thead>
-            <tr>
-                <th>Term</th>
-                <th>Definition</th>
-                <th></th>
-            </tr>
-            </thead>
-            <tbody>
-            <c:forEach var="question" items="${sessionScope.flashcardQuestions}">
-                <tr>
-                    <td>
-                        <div class="input-group">
-                            <input type="text" name="term" class="form-control" value="${question.term}" required
-                                   oninput="validateForm()">
-                            <i class="fa fa-exclamation-circle warning-icon" aria-hidden="true"
-                               data-warning="Term cannot be empty or duplicated"></i>
-                        </div>
-                    </td>
-                    <td>
-                        <div class="input-group">
-                            <input type="text" name="definition" class="form-control" value="${question.definition}"
-                                   required oninput="validateForm()">
-                            <i class="fa fa-exclamation-circle warning-icon" aria-hidden="true"
-                               data-warning="Definition cannot be empty or duplicated"></i>
-                        </div>
-                    </td>
-                    <td><span class="delete-button" onclick="deleteRow(this)"><i class="fa fa-minus"
-                                                                                 aria-hidden="true"></i></span></td>
-                </tr>
-            </c:forEach>
-            <tr>
-                <td colspan="3">
-                    <button type="button" class="btn btn-primary" onclick="addRow()">+</button>
-                </td>
-            </tr>
-            </tbody>
-        </table>
-        <div id="warning" class="warning"></div>
-        <button type="submit" class="btn btn-success">Update Flashcard Set</button>
-    </form>
-</div>
-<!-- JavaScript Libraries -->
-<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
-<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
-<script src="lib/easing/easing.min.js"></script>
-<script src="lib/waypoints/waypoints.min.js"></script>
-<script src="lib/counterup/counterup.min.js"></script>
-<script src="lib/owlcarousel/owl.carousel.min.js"></script>
-<jsp:include page="footer.jsp"/>
-
-</body>
-</html>
Index: src/java/controller/flashcard/FlashcardDelete.java
===================================================================
diff --git a/src/java/controller/flashcard/FlashcardDelete.java b/src/java/controller/flashcard/FlashcardDelete.java
deleted file mode 100644
--- a/src/java/controller/flashcard/FlashcardDelete.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,55 +0,0 @@
-/*
- * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
- * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
- */
-
-package controller.flashcard;
-
-import java.io.IOException;
-import java.io.PrintWriter;
-
-import dal.FlashcardDAO;
-import jakarta.servlet.ServletException;
-import jakarta.servlet.http.HttpServlet;
-import jakarta.servlet.http.HttpServletRequest;
-import jakarta.servlet.http.HttpServletResponse;
-
-/**
- * @author PC
- */
-public class FlashcardDelete extends HttpServlet {
-
-    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        response.setContentType("text/html;charset=UTF-8");
-        int flashcardSetId = Integer.parseInt(request.getParameter("flashcardSetId"));
-
-        FlashcardDAO flashcardDAO = new FlashcardDAO();
-        boolean isDeleted = flashcardDAO.deleteFlashcardSet(flashcardSetId);
-
-        if (isDeleted) {
-            response.sendRedirect(request.getContextPath() + "/flashcard");
-        } else {
-            request.setAttribute("errorMessage", "Failed to delete the flashcard set. Please try again.");
-            request.getRequestDispatcher("/flashcard").forward(request, response);
-        }
-    }
-
-    @Override
-    protected void doGet(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        processRequest(request, response);
-    }
-
-    @Override
-    protected void doPost(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-        processRequest(request, response);
-    }
-
-    @Override
-    public String getServletInfo() {
-        return "Short description";
-    }
-
-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM__Changes_.xml	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM_[Changes]" date="1721423137215" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 20-Jul-24 4:05 AM [Changes]" />
-</changelist>
\ No newline at end of file
Index: src/java/AppContextListener.java
===================================================================
diff --git a/src/java/AppContextListener.java b/src/java/AppContextListener.java
deleted file mode 100644
--- a/src/java/AppContextListener.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,19 +0,0 @@
-import com.mysql.cj.jdbc.AbandonedConnectionCleanupThread;
-import jakarta.servlet.ServletContextEvent;
-import jakarta.servlet.ServletContextListener;
-import jakarta.servlet.annotation.WebListener;
-
-@WebListener
-public class AppContextListener implements ServletContextListener {
-
-    @Override
-    public void contextInitialized(ServletContextEvent sce) {
-        // Initialize resources
-    }
-
-    @Override
-    public void contextDestroyed(ServletContextEvent sce) {
-        // Cleanup resources
-        AbandonedConnectionCleanupThread.checkedShutdown();
-    }
-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_18-Jul-24_10_04_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_18-Jul-24_10_04_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_18-Jul-24_10_04_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_18-Jul-24_10_04_AM__Changes_.xml	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,14 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_18-Jul-24_10_04_AM_[Changes]" date="1721271855131" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18-Jul-24_10_04_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 18-Jul-24 10:04 AM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="web/assets/img/annandmaryann.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18-Jul-24_10_04_AM_[Changes]/annandmaryann.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="web/assets/img/Screenshot (960).png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18-Jul-24_10_04_AM_[Changes]/Screenshot (960).png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20-Jul-24_4_05_AM_[Changes]/shelved.patch	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ /dev/null	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
@@ -1,3677 +0,0 @@
-Index: src/java/controller/login/LoginServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.login;\r\n\r\nimport dal.UserDAO;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport mail.GenerateVerifyCode;\r\nimport mail.SendMail;\r\n\r\n@WebServlet(name = \"LoginServlet\", urlPatterns = {\"/login\"})\r\npublic class LoginServlet extends HttpServlet {\r\n    \r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User u = (User) session.getAttribute(\"user\");\r\n        if (u != null) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            String email = request.getParameter(\"email\");\r\n            String password = request.getParameter(\"password\");\r\n            UserDAO userDAO = new UserDAO();\r\n            try {\r\n                User user = userDAO.login(email, password);\r\n                if (user != null || user.getEmail() == null) {\r\n                    switch (user.getStatus()) {\r\n                        case 2:\r\n                            request.setAttribute(\"user\", user);\r\n                            request.getRequestDispatcher(\"/WEB-INF/account/setnewpassword.jsp\").forward(request, response);\r\n                            break;\r\n                        case 0:\r\n                            String receiver = user.getEmail();\r\n                            String subject = \"Your activation code\";\r\n                            String activationCode = GenerateVerifyCode.GenerateCode();\r\n                            String content = \"Your activation code is: \" + activationCode;\r\n                            SendMail.sendMail(receiver, subject, content);\r\n                            \r\n                            request.setAttribute(\"activationCode\", activationCode);\r\n                            request.setAttribute(\"user\", user);\r\n                            request.getRequestDispatcher(\"/WEB-INF/account/enteractivationcode.jsp\").forward(request, response);\r\n                            break;\r\n                        default:\r\n                            session.setAttribute(\"user\", user);\r\n                            switch (user.getRole()) {\r\n                                case 0:\r\n                                case 1:\r\n                                    response.sendRedirect(\"dashboard\");\r\n                                    break;\r\n                                default:\r\n                                    response.sendRedirect(\"home\");\r\n                            }\r\n                            \r\n                            break;\r\n                    }\r\n                } else {\r\n                    session.setAttribute(\"message\", \"Invalid email or password\");\r\n                    response.sendRedirect(\"login.jsp\");\r\n                }\r\n            } catch (SQLException e) {\r\n                throw new ServletException(\"Login failed\", e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n    \r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/login/LoginServlet.java b/src/java/controller/login/LoginServlet.java
---- a/src/java/controller/login/LoginServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/login/LoginServlet.java	(date 1721423113111)
-@@ -1,7 +1,7 @@
- package controller.login;
- 
- import dal.UserDAO;
--import model.user.User;
-+import model.User;
- 
- import java.io.IOException;
- import java.sql.SQLException;
-Index: src/java/controller/DashboardServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller;\r\n\r\nimport dal.*;\r\n\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\n\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport model.classes.Classes;\r\nimport model.Question;\r\nimport model.subject.Subject;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"DashboardServlet\", urlPatterns = {\"/dashboard\"})\r\npublic class DashboardServlet extends HttpServlet {\r\n\r\n    UserDAO userDAO = new UserDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n    ClassDAO classDAO = new ClassDAO();\r\n    QuestionDAO questionDAO = new QuestionDAO();\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet DashboardServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet DashboardServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    private boolean isEqualDate(Date date1, Date date2) {\r\n        return date1.getDay() == date2.getDay() && date1.getMonth() == date2.getMonth()\r\n                && date1.getYear() == date2.getYear();\r\n    }\r\n\r\n    private void getUserStatistics(HttpServletRequest request) {\r\n        ArrayList<User> userList = userDAO.getAllUsers();\r\n        int newUsersToday = 0;\r\n        Date today = new Date();\r\n        for (User user : userList) {\r\n            if (isEqualDate(today, user.getDateCreated())) {\r\n                newUsersToday++;\r\n            }\r\n        }\r\n        request.setAttribute(\"newUsersToday\", newUsersToday);\r\n        request.setAttribute(\"userList\", userList);\r\n    }\r\n\r\n    private void getClassStastistic(HttpServletRequest request) {\r\n        ArrayList<Classes> classList = classDAO.getAllClasses();\r\n        request.setAttribute(\"classList\", classList);\r\n    }\r\n\r\n    private void getSubjectStastistics(HttpServletRequest request) {\r\n        ArrayList<Subject> subjectList = subjectDAO.getAllSubject();\r\n        request.setAttribute(\"subjectList\", subjectList);\r\n    }\r\n\r\n    private void getQuestionStastistic(HttpServletRequest request) {\r\n        ArrayList<Question> questionList = questionDAO.getAllQuestions();\r\n        request.setAttribute(\"questionList\", questionList);\r\n\r\n    }\r\n\r\n    private void getStatistic(HttpServletRequest request) {\r\n        getUserStatistics(request);\r\n        getSubjectStastistics(request);\r\n        getClassStastistic(request);\r\n        getQuestionStastistic(request);\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String contextPath = request.getServletContext().getContextPath();\r\n        String loginPage = contextPath + \"/login.jsp\";\r\n        String homePage = contextPath + \"/home\";\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(loginPage);\r\n        } else {\r\n            User u = userDAO.getUserById(user.getId());\r\n            if (u != null && u.getEmail() != null) {\r\n                session.setAttribute(\"user\", u);\r\n                if (user.getRole() > 1) {\r\n                    response.sendRedirect(homePage);\r\n                } else {\r\n                    getStatistic(request);\r\n                    request.getRequestDispatcher(\"/WEB-INF/dashboard/dashboard.jsp\").forward(request, response);\r\n                }\r\n            } else {\r\n                response.sendRedirect(loginPage);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doGet(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/DashboardServlet.java b/src/java/controller/DashboardServlet.java
---- a/src/java/controller/DashboardServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/DashboardServlet.java	(date 1721423113102)
-@@ -18,7 +18,7 @@
- import model.classes.Classes;
- import model.Question;
- import model.subject.Subject;
--import model.user.User;
-+import model.User;
- 
- @WebServlet(name = "DashboardServlet", urlPatterns = {"/dashboard"})
- public class DashboardServlet extends HttpServlet {
-Index: src/java/controller/google/LoginGoogleServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template\r\n */\r\npackage controller.google;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.google.GooglePojo;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n/**\r\n * @author PC\r\n */\r\n@WebServlet(\"/login-google\")\r\npublic class LoginGoogleServlet extends HttpServlet {\r\n\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    public LoginGoogleServlet() {\r\n        super();\r\n    }\r\n\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String code = request.getParameter(\"code\");\r\n        if (code == null || code.isEmpty()) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else {\r\n            String accessToken = GoogleUtils.getToken(code);\r\n            GooglePojo googlePojo = GoogleUtils.getUserInfo(accessToken);\r\n            String email = googlePojo.getEmail();\r\n            UserDAO userDAO = new UserDAO();\r\n            try {\r\n                HttpSession session = request.getSession();\r\n                if (userDAO.checkEmailExist(email)) {\r\n                    // email đã tồn tại trong database\r\n                    User user = new User();\r\n                    user = userDAO.loginGoogle(email);\r\n                    session.setAttribute(\"user\", user);\r\n                    RequestDispatcher rd = request.getRequestDispatcher(\"dashboard\");\r\n                    rd.forward(request, response);\r\n                } else {\r\n                    // email chưa tồn tại trong database\r\n                    session.setAttribute(\"email\", email);\r\n                    response.sendRedirect(\"set-password.jsp\");\r\n                }\r\n            } catch (SQLException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doGet(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Handles Google Login\";\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/google/LoginGoogleServlet.java b/src/java/controller/google/LoginGoogleServlet.java
---- a/src/java/controller/google/LoginGoogleServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/google/LoginGoogleServlet.java	(date 1721423113110)
-@@ -13,7 +13,7 @@
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
- import model.google.GooglePojo;
--import model.user.User;
-+import model.User;
- 
- import java.io.IOException;
- import java.sql.SQLException;
-Index: src/java/controller/flashcard/FlashcardAddServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.flashcard;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\nimport dal.FlashcardDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.flashcard.FlashcardQuestions;\r\nimport model.user.User;\r\n\r\npublic class FlashcardAddServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n            if (user == null) {\r\n                response.sendRedirect(\"login.jsp\");\r\n            } else {\r\n                String title = request.getParameter(\"title\");\r\n                int subjectId = Integer.parseInt(request.getParameter(\"subjectId\"));\r\n                String[] terms = request.getParameterValues(\"term\");\r\n                String[] definitions = request.getParameterValues(\"definition\");\r\n\r\n                // Assuming userEmail is obtained from session or request\r\n                String userEmail = user.getEmail();\r\n\r\n                FlashcardDAO dao = new FlashcardDAO();\r\n                int userId = dao.getUserId(userEmail);\r\n                if (userId == -1) {\r\n                    // Handle error: user not found\r\n\r\n                    RequestDispatcher dispatcher = request.getRequestDispatcher(\"login\");\r\n                    dispatcher.forward(request, response);\r\n                    return;\r\n                }\r\n\r\n                boolean setAdded = dao.addFlashcardSet(title, subjectId, userId);\r\n\r\n                if (setAdded) {\r\n                    int flashcardSetId = dao.getFlashcardSetId(title);\r\n                    ArrayList<FlashcardQuestions> questions = new ArrayList<>();\r\n\r\n                    for (int i = 0; i < terms.length; i++) {\r\n                        FlashcardQuestions question = new FlashcardQuestions();\r\n                        question.setTerm(terms[i]);\r\n                        question.setDefinition(definitions[i]);\r\n                        question.setFlashcardSetId(flashcardSetId);\r\n                        questions.add(question);\r\n                    }\r\n\r\n                    dao.addFlashcardQuestions(questions, flashcardSetId);\r\n                }\r\n\r\n                RequestDispatcher dispatcher = request.getRequestDispatcher(\"flashcard\");\r\n                dispatcher.forward(request, response);\r\n            }\r\n        } catch (Exception e) {\r\n            response.sendRedirect(\"flashcard.jsp\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/flashcard/FlashcardAddServlet.java b/src/java/controller/flashcard/FlashcardAddServlet.java
---- a/src/java/controller/flashcard/FlashcardAddServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/flashcard/FlashcardAddServlet.java	(date 1721423113108)
-@@ -11,7 +11,7 @@
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
- import model.flashcard.FlashcardQuestions;
--import model.user.User;
-+import model.User;
- 
- public class FlashcardAddServlet extends HttpServlet {
- 
-Index: web/WEB-INF/views/material/materiallist.jsp
-===================================================================
-diff --git a/web/WEB-INF/views/material/materiallist.jsp b/web/WEB-INF/views/material/materiallist.jsp
-deleted file mode 100644
---- a/web/WEB-INF/views/material/materiallist.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ /dev/null	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-@@ -1,235 +0,0 @@
--<%@page isELIgnored="false" %>
--<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
--<%@page contentType="text/html" pageEncoding="UTF-8"%>
--<html
--    lang="en"
--    class="light-style layout-menu-fixed layout-compact"
--    dir="ltr"
--    data-theme="theme-default"
--    data-assets-path="../assets/"
--    data-template="vertical-menu-template-free">
--    <head>
--        <meta charset="utf-8" />
--        <meta
--            name="viewport"
--            content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />
--
--        <title>Lesson list</title>
--
--        <meta name="description" content="" />
--
--        <!-- Favicon -->
--        <link rel="icon" type="image/x-icon" href="../assets/img/favicon/favicon.ico" />
--
--        <!-- Fonts -->
--        <link rel="preconnect" href="https://fonts.googleapis.com" />
--        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
--        <link
--            href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap"
--            rel="stylesheet" />
--
--        <link rel="stylesheet" href="../assets/vendor/fonts/boxicons.css" />
--
--        <!-- Core CSS -->
--        <link rel="stylesheet" href="../assets/vendor/css/core.css" class="template-customizer-core-css" />
--        <link rel="stylesheet" href="../assets/vendor/css/theme-default.css" class="template-customizer-theme-css" />
--        <link rel="stylesheet" href="../assets/css/demo.css" />
--
--        <!-- Vendors CSS -->
--        <link rel="stylesheet" href="../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
--        <link rel="stylesheet" href="../assets/vendor/libs/apex-charts/apex-charts.css" />
--
--        <!-- Page CSS -->
--
--        <!-- Favicon -->
--        <link href="../img/favicon.ico" rel="icon">
--
--        <!-- Google Web Fonts -->
--        <link rel="preconnect" href="https://fonts.gstatic.com">
--        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap" rel="stylesheet"> 
--
--        <!-- Font Awesome -->
--        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
--
--        <!-- Libraries Stylesheet -->
--        <link href="../lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
--
--        <!-- Customized Bootstrap Stylesheet -->
--        <link href="../css/style.css" rel="stylesheet">
--
--        <!-- Helpers -->
--        <script src="../assets/vendor/js/helpers.js"></script>
--        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
--        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
--        <script src="../assets/js/config.js"></script>
--    </head>
--
--    <body>
--        <!-- Layout wrapper -->
--        <div class="layout-wrapper layout-content-navbar">
--            <div class="layout-container">
--                <!-- Menu -->
--
--                <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
--                    <div class="app-brand demo">
--                        <a href="${pageContext.request.contextPath}/home" class="app-brand-link">
--                            <h1 class="m-0 text-uppercase text-primary"><i class="fa fa-book-reader mr-3"></i>KRS</h1>
--                        </a>
--
--                        <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
--                            <i class="bx bx-chevron-left bx-sm align-middle"></i>
--                        </a>
--                    </div>
--
--                    <div class="menu-inner-shadow"></div>
--
--                    <ul class="menu-inner py-1">
--
--                        <li class="menu-header small text-uppercase">
--                            <span class="menu-header-text">Administration</span>
--                        </li>
--                        <!-- Apps -->
--                        <li class="menu-item">
--                            <a href="${pageContext.request.contextPath}/userlist" class="menu-link">
--                                <i class="menu-icon tf-icons bx bx-user"></i>
--                                <div data-i18n="User list">User list</div>
--                            </a>
--                        </li>
--                        <li class="menu-item">
--                            <a href="${pageContext.request.contextPath}/subjectlist" class="menu-link">
--                                <i class="menu-icon tf-icons bx bx-book-open"></i>
--                                <div data-i18n="Subject list">Subject list</div>
--                            </a>
--                        </li>
--                        <li class="menu-item">
--                            <a href="${pageContext.request.contextPath}/classlist" class="menu-link">
--                                <i class="menu-icon tf-icons bx bx-chalkboard"></i>
--                                <div data-i18n="Class list">Class list</div>
--                            </a>
--                        </li>
--
--                        <li class="menu-header small text-uppercase">
--                            <span class="menu-header-text">Navigation</span>
--                        </li>
--
--                        <li class="menu-item">
--                            <a href="${pageContext.request.contextPath}/home" class="menu-link">
--                                <i class="menu-icon tf-icons bx bx-home"></i>
--                                <div data-i18n="Home">Home</div>
--                            </a>
--                        </li>
--
--                        <li class="menu-item">
--                            <a href="${pageContext.request.contextPath}/dashboard.jsp" class="menu-link">
--                                <i class="menu-icon tf-icons bx bx-bar-chart"></i>
--                                <div data-i18n="Dashboard">Dashboard</div>
--                            </a>
--                        </li>
--
--                    </ul>
--                </aside>
--                <!-- / Menu -->
--
--                <!-- Layout container -->
--                <div class="layout-page">
--
--                    <!-- Content wrapper -->
--                    <div class="content-wrapper">
--                        <!-- Content -->
--                        <jsp:include page="/WEB-INF/common/header.jsp"/>
--
--                        <div class="container-xxl flex-grow-1 container-p-y">
--
--                            <div>
--                                <form action="${pageContext.request.contextPath}/material/new" method="post" enctype="multipart/form-data">
--                                    <input type="hidden" name="lessonid" value="${requestScope.lessonid}"/>
--                                    <input style="width: 300px;" type="file" name="newmaterial" />
--                                    <button class="btn btn-primary px-3">
--                                        <i class="fa fa-plus-square mr-3"></i>
--                                        Add material
--                                    </button>
--                                </form>
--                            </div>
--
--                            <h4 class="py-3 mb-4"><span class="text-muted fw-light">Material /</span> Material list</h4>
--
--                            <!-- Basic Bootstrap Table -->
--                            <div class="card">
--                                <h5 class="card-header">Lesson list for ${requestScope.subject.code}</h5>
--                                <div class="table-responsive text-nowrap">
--                                    <table class="table">
--                                        <thead>
--                                            <tr>
--                                                <th>#</th>
--                                                <th>Name</th>
--                                                <th></th>
--                                            </tr>
--                                        </thead>
--                                        <tbody class="table-border-bottom-0">
--                                            <c:forEach items="${requestScope.list}" var="material">
--                                                <tr>
--                                                    <td>${material.id}</td>
--                                                    <td>
--                                                        <a href="${material.webUri}" download="${material.name}">
--                                                            ${material.name}
--                                                        </a>
--                                                    </td>
--                                                    <td>
--                                                        <i class="bx bx-trash"></i>
--                                                    </td>
--                                                </tr>
--                                            </c:forEach>
--                                        </tbody>
--                                    </table>
--                                </div>
--                            </div>
--                            <!--/ Basic Bootstrap Table -->
--
--                        </div>
--                        <!-- / Content -->
--
--                        <jsp:include page="/WEB-INF/common/footer.jsp"/>
--                    </div>
--                    <!-- Content wrapper -->
--
--
--                </div>
--                <!-- / Layout page -->
--            </div>
--        </div>
--        <!-- / Layout wrapper -->
--
--        <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
--        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
--        <script src="../lib/easing/easing.min.js"></script>
--        <script src="../lib/waypoints/waypoints.min.js"></script>
--        <script src="../lib/counterup/counterup.min.js"></script>
--        <script src="../lib/owlcarousel/owl.carousel.min.js"></script>
--
--        <!-- Template Javascript -->
--        <script src="../js/main.js"></script>
--
--        <!-- Core JS -->
--        <!-- build:js assets/vendor/js/core.js -->
--
--        <script src="../assets/vendor/libs/jquery/jquery.js"></script>
--        <script src="../assets/vendor/libs/popper/popper.js"></script>
--        <script src="../assets/vendor/js/bootstrap.js"></script>
--        <script src="../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
--        <script src="../assets/vendor/js/menu.js"></script>
--
--        <!-- endbuild -->
--
--        <!-- Vendors JS -->
--        <script src="../assets/vendor/libs/apex-charts/apexcharts.js"></script>
--
--        <!-- Main JS -->
--        <script src="../assets/js/main.js"></script>
--
--        <!-- Page JS -->
--        <script src="assets/js/dashboards-analytics.js"></script>
--
--        <!-- Place this tag in your head or just before your close body tag. -->
--        <script async defer src="https://buttons.github.io/buttons.js"></script>
--    </body>
--</html>
-Index: web/WEB-INF/views/lesson/newlesson.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>New lesson</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Lesson /</span> New lesson</h4>\r\n                            <form action=\"${pageContext.request.contextPath}/lesson/insert\">\r\n                                <input type=\"hidden\" name=\"action\" value=\"addNew\"/>\r\n                                <label for=\"subjectSelect\">Subject: </label>\r\n                                <select name=\"subjectId\" id=\"subjectSelect\" class=\"ml-2\">\r\n                                    <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                        <c:if test=\"${requestScope.subject.id == subject.id}\">\r\n                                            <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.subject.id != subject.id}\">\r\n                                            <option value=\"${subject.id}\">${subject.code}</option>\r\n                                        </c:if>\r\n                                    </c:forEach>\r\n                                </select>\r\n                                <div class=\"col-xxl\">\r\n                                    <div class=\"card mb-4\">\r\n                                        <div class=\"card-header d-flex align-items-center justify-content-between mb-3\">\r\n                                            <small class=\"text-muted float-end\">Input subject name and materials</small>\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row mb-3\">\r\n                                                <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname\">Name</label>\r\n                                                <div class=\"col-sm-10\">\r\n                                                    <div class=\"input-group input-group-merge\">\r\n                                                        <span id=\"basic-icon-default-fullname2\" class=\"input-group-text\">\r\n                                                            <i class=\"bx bx-rename\"></i></span>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            class=\"form-control\"\r\n                                                            id=\"basic-icon-default-fullname\"\r\n                                                            name=\"name\"\r\n                                                            placeholder=\"Subject name\"\r\n                                                            aria-label=\"Subject name\"\r\n                                                            aria-describedby=\"basic-icon-default-fullname2\" \r\n                                                            value=\"${requestScope.name}\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <c:if test=\"${requestScope.err != null && !requestScope.err.isEmpty()}\">\r\n                                                <div class=\"row mb-3\">\r\n                                                    <div class=\"col-sm-2\"></div>\r\n                                                    <div class=\"col-sm-10\">\r\n                                                        <h6 style=\"color: red;\">${requestScope.err}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </c:if>\r\n                                            <div class=\"row justify-content-end\">\r\n                                                <div class=\"col-sm-10\">\r\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Add lesson</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/lesson/newlesson.jsp b/web/WEB-INF/views/lesson/newlesson.jsp
---- a/web/WEB-INF/views/lesson/newlesson.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/lesson/newlesson.jsp	(date 1721423113118)
-@@ -117,8 +117,8 @@
-                                                             class="form-control"
-                                                             id="basic-icon-default-fullname"
-                                                             name="name"
--                                                            placeholder="Subject name"
--                                                            aria-label="Subject name"
-+                                                            placeholder="Lesson name"
-+                                                            aria-label="Lesson name"
-                                                             aria-describedby="basic-icon-default-fullname2" 
-                                                             value="${requestScope.name}"/>
-                                                     </div>
-@@ -143,6 +143,8 @@
-                             </form>
-                             <hr class="my-5" />
- 
-+                            <a href="${pageContext.request.contextPath}/lesson" class="btn btn-primary">Back</a>
-+
-                         </div>
-                         <!-- / Content -->
- 
-Index: web/WEB-INF/views/lesson/lessonlist.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"./assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>Lesson list</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"./assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"./assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"./img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"./lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"./css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"./assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"./assets/js/config.js\"></script>\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n                            <div>\r\n                                <form action=\"${pageContext.request.contextPath}/lesson/new\">\r\n                                    <input type=\"hidden\" name=\"subjectid\" value=\"${requestScope.subject.id}\"/>\r\n                                    <input type=\"hidden\" name=\"action\" value=\"goToPage\"/>\r\n                                    <button class=\"btn btn-primary px-3\">\r\n                                        <i class=\"fa fa-plus-square mr-3\"></i>\r\n                                        Add lesson\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Lesson /</span> Lesson list</h4>\r\n\r\n                            <form id=\"searchBar\" class=\"d-flex\" action=\"${pageContext.request.contextPath}/lesson\">\r\n                                <div class=\"input-group mr-3\" style=\"overflow: auto;\">\r\n                                    <label for=\"subjectselect\">Subject: </label>\r\n                                    <select name=\"subjectId\" id=\"subjectselect\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;\">\r\n                                        <c:if test=\"${requestScope.subject == null}\">\r\n                                            <option value=\"all\" selected>All subjects</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.subject != null}\">\r\n                                            <option value=\"all\">All subjects</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                            <c:if test=\"${subject.id == requestScope.subject.id}\">\r\n                                                <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${subject.id != requestScope.subject.id}\">\r\n                                                <option value=\"${subject.id}\">${subject.code}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <label for=\"sortBy\">Sort by: </label>\r\n                                    <select style=\"height: 38px;\" name=\"sortBy\" id=\"sortBy\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('sortBy').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;document.getElementById('sortBy').style.height = '38px';\">\r\n                                        <c:if test=\"${requestScope.sortBy == null || requestScope.sortBy.isEmpty()\r\n                                                      || requestScope.sortBy.equals('None')}\">\r\n                                              <option value=\"None\" selected>None</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.sortBy != null && !requestScope.sortBy.isEmpty()\r\n                                                      && !requestScope.sortBy.equals('None')}\">\r\n                                              <option value=\"None\">None</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.sortOptions}\" var=\"option\">\r\n                                            <c:if test=\"${requestScope.sortBy.equals(option)}\">\r\n                                                <option value=\"${option}\" selected>${option}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${!requestScope.sortBy.equals(option)}\">\r\n                                                <option value=\"${option}\">${option}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <span style=\"height: 38px;\" class=\"input-group-text\"><i class=\"tf-icons bx bx-search\"></i></span>\r\n                                    <input type=\"text\" name=\"keyWord\" class=\"form-control\" placeholder=\"Search\" value=\"${requestScope.keyWord}\"\r\n                                           style=\"float: right;\"/>\r\n                                    <button style=\"height: 38px; float: right;\" \r\n                                            class=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                            <!-- Basic Bootstrap Table -->\r\n                            <div class=\"card\">\r\n                                <h5 class=\"card-header\">Lesson list</h5>\r\n                                <div class=\"table-responsive text-nowrap\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Name</th>\r\n                                                <th>Subject</th>\r\n                                                <th>Status</th>\r\n                                                <th>Order</th>\r\n                                                <th>Actions</th>\r\n                                                <th>Order</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody class=\"table-border-bottom-0\">\r\n                                            <c:forEach items=\"${requestScope.list}\" var=\"lesson\">\r\n                                                <tr>\r\n                                                    <c:if test=\"${lesson.status}\">\r\n                                                        <td class=\"text-primary\">${lesson.id}</td>\r\n                                                        <td class=\"text-primary\">${lesson.name}</td>\r\n                                                        <td class=\"text-primary\">${lesson.subject.code}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-success\">Active</span>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${!lesson.status}\">\r\n                                                        <td>${lesson.id}</td>\r\n                                                        <td>${lesson.name}</td>\r\n                                                        <td>${lesson.subject.code}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-danger\">Inactive</span>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                    <td class=\"text-success\">${lesson.order}</td>\r\n                                                    <td>\r\n                                                        <c:if test=\"${lesson.status}\">\r\n                                                            <form action=\"${pageContext.request.contextPath}/lesson/details\" id=\"lessonDetails\">\r\n                                                                <input type=\"hidden\" name=\"lessonId\" value=\"${lesson.id}\"/>\r\n                                                                <button style=\"height: 25px; width: 25px; float: left;\" type=\"submit\" class=\"btn btn-icon btn-outline-primary mr-1\"\r\n                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\">\r\n                                                                    <i class=\"bx bx-edit\"></i>\r\n                                                                </button>\r\n                                                            </form>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" type=\"button\" class=\"btn btn-icon btn-outline-danger mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Deactivate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${lesson.id}, 'deactivate')\">\r\n                                                                <i class=\"bx bx-x\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${!lesson.status}\">\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-secondary mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\" disabled>\r\n                                                                <i class=\"bx bx-edit\"></i>\r\n                                                            </button>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left\" type=\"button\" class=\"btn btn-icon btn-outline-success mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Activate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${lesson.id}, 'activate')\">\r\n                                                                <i class=\"bx bx-check me-1\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <c:if test=\"${lesson.order != requestScope.latestOrder}\">\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" type=\"button\" class=\"btn btn-icon btn-outline-warning mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Move down\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modalOrder\" onclick=\"assignOrderValue(${lesson.id}, 'down')\">\r\n                                                                <i class=\"bx bx-down-arrow\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${lesson.order != 1}\">\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" type=\"button\" class=\"btn btn-icon btn-outline-warning mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Move up\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modalOrder\" onclick=\"assignOrderValue(${lesson.id}, 'up')\">\r\n                                                                <i class=\"bx bx-up-arrow\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </c:forEach>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n                                        <form action=\"${pageContext.request.contextPath}/lesson/update\">\r\n                                            <input type=\"hidden\" name=\"lessonId\" id=\"lessonId\"/>\r\n                                            <input type=\"hidden\" name=\"action\" value=\"changeStatus\"/>\r\n                                            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"modalCenterTitle\">Activate / Deactivate</h5>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            class=\"btn-close\"\r\n                                                            data-bs-dismiss=\"modal\"\r\n                                                            aria-label=\"Close\"></button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        <h5 id=\"modalBodyText\"></h5>\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                                            No\r\n                                                        </button>\r\n                                                        <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!--/ Basic Bootstrap Table -->\r\n\r\n                            <form action=\"${pageContext.request.contextPath}/lesson\">\r\n                                <input type=\"hidden\" name=\"subjectId\" value=\"${requestScope.subject.id}\"/>\r\n                                <input type=\"hidden\" name=\"keyWord\" value=\"${requestScope.keyWord}\"/>\r\n                                <input type=\"hidden\" name=\"sortBy\" value=\"${requestScope.sortBy}\"/>\r\n                                <input type=\"hidden\" name=\"pageAction\" id=\"pageAction\"/>\r\n                                <input type=\"hidden\" name=\"newPage\" id=\"newPage\"/>\r\n                                <input type=\"hidden\" name=\"currentPage\" value=\"${requestScope.currentPage}\"/>\r\n                                <div class=\"card mb-4\">\r\n                                    <!-- Basic Pagination -->\r\n                                    <div class=\"card mb-4\">\r\n                                        <!-- Basic Pagination -->\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-lg-6\">\r\n                                                    <small class=\"text-light fw-medium\">Basic</small>\r\n                                                    <div class=\"demo-inline-spacing\">\r\n                                                        <!-- Basic Pagination -->\r\n                                                        <nav aria-label=\"Page navigation\">\r\n                                                            <ul class=\"pagination\">\r\n                                                                <li class=\"page-item first\">\r\n                                                                    <button class=\"page-link\"\r\n                                                                            type=\"submit\"\r\n                                                                            onclick=\"document.getElementById('pageAction').value = 'firstPage';\">\r\n                                                                        <i class=\"tf-icon bx bx-chevrons-left\"></i>\r\n                                                                    </button>\r\n                                                                </li>\r\n                                                                <li class=\"page-item prev\">\r\n                                                                    <button class=\"page-link\"\r\n                                                                            type=\"submit\"\r\n                                                                            onclick=\"document.getElementById('pageAction').value = 'prevPage';\">\r\n                                                                        <i class=\"tf-icon bx bx-chevron-left\"></i>\r\n                                                                    </button>\r\n                                                                </li>\r\n                                                                <c:forEach begin=\"1\" end=\"${requestScope.noOfPages}\" var=\"page\">\r\n                                                                    <c:if test=\"${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||\r\n                                                                                  (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}\">\r\n                                                                        <c:if test=\"${page == requestScope.currentPage}\">\r\n                                                                            <li class=\"page-item active\">\r\n                                                                                <button class=\"page-link\"\r\n                                                                                        type=\"submit\"\r\n                                                                                        onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                            </li>\r\n                                                                        </c:if>\r\n                                                                        <c:if test=\"${page != requestScope.currentPage}\">\r\n                                                                            <li class=\"page-item\">\r\n                                                                                <input type=\"hidden\" name=\"page\" value=\"${page}\"/>\r\n                                                                                <button class=\"page-link\"\r\n                                                                                        type=\"submit\"\r\n                                                                                        onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                            </li>\r\n                                                                        </c:if>\r\n                                                                        <c:if test=\"${(page == 2) && (page < requestScope.currentPage - 1)}\">\r\n                                                                            <li class=\"page-item\">\r\n                                                                                <button class=\"page-link\">...</button>\r\n                                                                            </li>\r\n                                                                        </c:if>\r\n                                                                        <c:if test=\"${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}\">\r\n                                                                            <li class=\"page-item\">\r\n                                                                                <button class=\"page-link\">...</button>\r\n                                                                            </li>\r\n                                                                        </c:if>\r\n                                                                    </c:if>\r\n                                                                </c:forEach>\r\n                                                                <li class=\"page-item next\">\r\n                                                                    <button class=\"page-link\"\r\n                                                                            type=\"submit\"\r\n                                                                            onclick=\"document.getElementById('pageAction').value = 'nextPage';\">\r\n                                                                        <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                    </button>\r\n                                                                </li>\r\n\r\n                                                                <li class=\"page-item last\">\r\n                                                                    <button class=\"page-link\"\r\n                                                                            type=\"submit\"\r\n                                                                            onclick=\"document.getElementById('pageAction').value = 'lastPage';\">\r\n                                                                        <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                    </button>\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </nav>\r\n                                                        <!--/ Basic Pagination -->\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <div class=\"modal fade\" id=\"modalOrder\" tabindex=\"-1\" aria-hidden=\"true\">\r\n            <form action=\"${pageContext.request.contextPath}/lesson/update\">\r\n                <input type=\"hidden\" name=\"lessonId\" id=\"orderLessonId\"/>\r\n                <input type=\"hidden\" name=\"action\" value=\"changeOrder\"/>\r\n                <input type=\"hidden\" name=\"orderAction\" id=\"orderAction\"/>\r\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"modalCenterTitle\">Change order</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <h5 id=\"modalOrderBodyText\"></h5>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                No\r\n                            </button>\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <script>\r\n            function assignValue(lessonId, action) {\r\n                document.getElementById(\"lessonId\").value = lessonId;\r\n                let text1 = \"Are you sure you want to \";\r\n                let text2 = \" lesson \";\r\n                let text3 = \"?\"\r\n                let s = text1 + action + text2 + text3;\r\n                document.getElementById(\"modalBodyText\").innerHTML = s;\r\n            }\r\n\r\n            function assignOrderValue(lessonId, action) {\r\n                document.getElementById(\"orderLessonId\").value = lessonId;\r\n                let text1 = \"Are you sure you want to move \";\r\n                let text2 = \" lesson?\";\r\n                let s = text1 + action + text2;\r\n                document.getElementById(\"modalOrderBodyText\").innerHTML = s;\r\n                document.getElementById(\"orderAction\").value = action;\r\n            }\r\n        </script>\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"./lib/easing/easing.min.js\"></script>\r\n        <script src=\"./lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"./lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"./lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"./js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js assets/vendor/js/core.js -->\r\n\r\n        <script src=\"./assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"./assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"./assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"./assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"./assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"./assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"./assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n\r\n        <script src=\"js/sider.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/lesson/lessonlist.jsp b/web/WEB-INF/views/lesson/lessonlist.jsp
---- a/web/WEB-INF/views/lesson/lessonlist.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/lesson/lessonlist.jsp	(date 1721423113118)
-@@ -85,8 +85,7 @@
- 
-                             <div>
-                                 <form action="${pageContext.request.contextPath}/lesson/new">
--                                    <input type="hidden" name="subjectid" value="${requestScope.subject.id}"/>
--                                    <input type="hidden" name="action" value="goToPage"/>
-+                                    <input type="hidden" name="subjectId" value="${requestScope.subject.id}"/>
-                                     <button class="btn btn-primary px-3">
-                                         <i class="fa fa-plus-square mr-3"></i>
-                                         Add lesson
-@@ -105,12 +104,6 @@
-                                                         this.size = 5;
-                                                     }"  
-                                             onblur="this.size = 0;">
--                                        <c:if test="${requestScope.subject == null}">
--                                            <option value="all" selected>All subjects</option>
--                                        </c:if>
--                                        <c:if test="${requestScope.subject != null}">
--                                            <option value="all">All subjects</option>
--                                        </c:if>
-                                         <c:forEach items="${requestScope.subjectList}" var="subject">
-                                             <c:if test="${subject.id == requestScope.subject.id}">
-                                                 <option value="${subject.id}" selected>${subject.code}</option>
-@@ -128,14 +121,6 @@
-                                                         document.getElementById('sortBy').style.height = '115px';
-                                                     }"  
-                                             onblur="this.size = 0;document.getElementById('sortBy').style.height = '38px';">
--                                        <c:if test="${requestScope.sortBy == null || requestScope.sortBy.isEmpty()
--                                                      || requestScope.sortBy.equals('None')}">
--                                              <option value="None" selected>None</option>
--                                        </c:if>
--                                        <c:if test="${requestScope.sortBy != null && !requestScope.sortBy.isEmpty()
--                                                      && !requestScope.sortBy.equals('None')}">
--                                              <option value="None">None</option>
--                                        </c:if>
-                                         <c:forEach items="${requestScope.sortOptions}" var="option">
-                                             <c:if test="${requestScope.sortBy.equals(option)}">
-                                                 <option value="${option}" selected>${option}</option>
-@@ -154,6 +139,15 @@
- 
-                             </form>
- 
-+                            <div class="row mb-3">
-+                                <c:if test="${requestScope.successful != null && !requestScope.successful.isEmpty()}">
-+                                    <h6 class="text-success">${requestScope.successful}</h6>
-+                                </c:if>
-+                                <c:if test="${requestScope.err != null && !requestScope.err.isEmpty()}">
-+                                    <h6 class="text-danger">${requestScope.err}</h6>
-+                                </c:if>
-+                            </div>
-+
-                             <!-- Basic Bootstrap Table -->
-                             <div class="card">
-                                 <h5 class="card-header">Lesson list</h5>
-@@ -301,9 +295,10 @@
-                                                                         <i class="tf-icon bx bx-chevron-left"></i>
-                                                                     </button>
-                                                                 </li>
-+                                                                <c:set var="noOfPages" value="${requestScope.noOfPages}"></c:set>
-                                                                 <c:forEach begin="1" end="${requestScope.noOfPages}" var="page">
--                                                                    <c:if test="${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||
--                                                                                  (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}">
-+                                                                    <c:if test="${(page == 1) || (page == 2) || (Math.abs(page - requestScope.currentPage) <= 1)
-+                                                                                  || (page == noOfPages) || (page == noOfPages - 1)}">
-                                                                         <c:if test="${page == requestScope.currentPage}">
-                                                                             <li class="page-item active">
-                                                                                 <button class="page-link"
-@@ -319,16 +314,17 @@
-                                                                                         onclick="document.getElementById('newPage').value = ${page}">${page}</button>
-                                                                             </li>
-                                                                         </c:if>
--                                                                        <c:if test="${(page == 2) && (page < requestScope.currentPage - 1)}">
--                                                                            <li class="page-item">
--                                                                                <button class="page-link">...</button>
--                                                                            </li>
--                                                                        </c:if>
--                                                                        <c:if test="${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}">
--                                                                            <li class="page-item">
--                                                                                <button class="page-link">...</button>
--                                                                            </li>
--                                                                        </c:if>
-+                                                                    </c:if>
-+                                                                    <c:set var="currentPage" value="${requestScope.currentPage}"></c:set>
-+                                                                    <c:if test="${(page == currentPage - 2) && (page > 2)}">
-+                                                                        <li class="page-item">
-+                                                                            <button class="page-link">...</button>
-+                                                                        </li>
-+                                                                    </c:if>
-+                                                                    <c:if test="${(page == currentPage + 2) && (page < noOfPages - 1)}">
-+                                                                        <li class="page-item">
-+                                                                            <button class="page-link">...</button>
-+                                                                        </li>
-                                                                     </c:if>
-                                                                 </c:forEach>
-                                                                 <li class="page-item next">
-Index: web/WEB-INF/views/lesson/lessondetails.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>Lesson details</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n        <script>\r\n            function setActiveTab(currentPage) {\r\n                if (currentPage === 'enterData' || currentPage === null || currentPage === '') {\r\n                    document.getElementById(\"navs-pills-enter-data\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = true;\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonMaterial\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonMaterial\").ariaSelected = false;\r\n                } else {\r\n                    document.getElementById(\"navs-pills-material\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonMaterial\").ariaSelected = true;\r\n                    document.getElementById(\"buttonMaterial\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = false;\r\n                }\r\n            }\r\n            function getActiveTab() {\r\n                if (document.getElementById(\"buttonMaterial\").className === 'nav-link active') {\r\n                    return \"inportFile\";\r\n                } else {\r\n                    return \"enterData\";\r\n                }\r\n            }\r\n            function setActiveTabForRefresh() {\r\n                document.getElementById('currentPage').value = getActiveTab();\r\n            }\r\n        </script>\r\n\r\n    </head>\r\n\r\n    <body onload=\"setActiveTab('${requestScope.currentPage}');\">\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Lesson /</span> Lesson details</h4>\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"subject\">Subject: </label>\r\n                                <input type=\"text\" value=\"${requestScope.lesson.subject.code}\" readonly id=\"subject\"/>\r\n                            </div>\r\n                            <form action=\"${pageContext.request.contextPath}/lesson/update\"\r\n                                  enctype=\"multipart/form-data\"\r\n                                  method=\"post\">\r\n                                <input type=\"hidden\" name=\"lessonId\" value=\"${requestScope.lesson.id}\"/>\r\n                                <input type=\"hidden\" name=\"action\" id=\"action\"/>\r\n                                <div class=\"row\">\r\n                                    <div class=\"nav-align-top mb-4\">\r\n                                        <ul class=\"nav nav-pills mb-3\" role=\"tablist\">\r\n                                            <li class=\"nav-item\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    id=\"buttonEnterData\"\r\n                                                    role=\"tab\"\r\n                                                    data-bs-toggle=\"tab\"\r\n                                                    data-bs-target=\"#navs-pills-enter-data\"\r\n                                                    aria-controls=\"navs-pills-enter-data\">\r\n                                                    Update lesson name\r\n                                                </button>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    id=\"buttonMaterial\"\r\n                                                    role=\"tab\"\r\n                                                    data-bs-toggle=\"tab\"\r\n                                                    data-bs-target=\"#navs-pills-material\"\r\n                                                    aria-controls=\"navs-pills-material\">\r\n                                                    View lesson's materials\r\n                                                </button>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div class=\"tab-content\" style=\"width: 100%;\">\r\n                                            <div class=\"tab-pane fade\" id=\"navs-pills-enter-data\" role=\"tabpanel\">\r\n                                                <div class=\"col-xxl\">\r\n                                                    <div class=\"card mb-4\">\r\n                                                        <div class=\"card-header d-flex align-items-center justify-content-between mb-3\">\r\n                                                            <h5 class=\"mb-0\">Lesson details</h5>\r\n                                                            <small class=\"text-muted float-end\">Input subject name</small>\r\n                                                        </div>\r\n                                                        <div class=\"card-body\">\r\n\r\n                                                            <div class=\"row mb-3\">\r\n                                                                <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname\">Name</label>\r\n                                                                <div class=\"col-sm-10\">\r\n                                                                    <div class=\"input-group input-group-merge\">\r\n                                                                        <span id=\"basic-icon-default-fullname2\" class=\"input-group-text\">\r\n                                                                            <i class=\"bx bx-rename\"></i></span>\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            class=\"form-control\"\r\n                                                                            id=\"basic-icon-default-fullname\"\r\n                                                                            name=\"name\"\r\n                                                                            value=\"${requestScope.lesson.name}\"\r\n                                                                            placeholder=\"Lesson name\"\r\n                                                                            aria-label=\"Lesson name\"\r\n                                                                            aria-describedby=\"basic-icon-default-fullname2\" />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <c:if test=\"${requestScope.err != null && !requestScope.err.isEmpty()}\">\r\n                                                                <div class=\"row mb-3\">\r\n                                                                    <div class=\"col-sm-2\"></div>\r\n                                                                    <div class=\"col-sm-10\">\r\n                                                                        <h6 style=\"color: red;\">${requestScope.err}</h6>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </c:if>\r\n                                                            <div class=\"row justify-content-end\">\r\n                                                                <div class=\"col-sm-10\">\r\n                                                                    <button type=\"submit\" class=\"btn btn-primary\"\r\n                                                                            onclick=\"document.getElementById('action').value = 'updateLesson';\"> \r\n                                                                        Update lesson \r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"tab-pane fade\" id=\"navs-pills-material\" role=\"tabpanel\">\r\n                                                <div class=\"row mb-4\">\r\n                                                    <label for=\"formFile\" class=\"form-label\">Choose a file</label>\r\n                                                    <div class=\"col-sm-9\">\r\n                                                        <input class=\"form-control\" type=\"file\" id=\"formFile\"\r\n                                                               name=\"file\"\r\n                                                               style=\"width: 100%;\"/>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-3\">\r\n                                                        <button\r\n                                                            style=\"height: 38px;\" class=\"btn btn-primary ml-3\"\r\n                                                            type=\"submit\"\r\n                                                            onclick=\"document.getElementById('action').value = 'insertMaterial'\">\r\n                                                            Add material\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <c:if test=\"${(requestScope.fileErr != null) && (!requestScope.fileErr.isEmpty())}\">\r\n                                                    <div class=\"row mb-3\">\r\n                                                        <h5 style=\"color: red;\">${requestScope.fileErr}</h5>\r\n                                                    </div>\r\n                                                </c:if>\r\n                                                <div class=\"table-responsive text-nowrap\">\r\n                                                    <table class=\"table\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th>#</th>\r\n                                                                <th>Name</th>\r\n                                                                <th></th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody class=\"table-border-bottom-0\">\r\n                                                            <c:forEach items=\"${requestScope.materialList}\" var=\"material\">\r\n                                                                <tr>\r\n                                                                    <td>${material.id}</td>\r\n                                                                    <td>\r\n                                                                        <a href=\"../${material.uri}\" download=\"${material.name}\">\r\n                                                                            ${material.name}\r\n                                                                        </a>\r\n                                                                    </td>\r\n                                                                    <td>\r\n                                                                        <button class=\"btn btn-icon btn-outline-danger\"\r\n                                                                                type=\"button\"\r\n                                                                                style=\"height: 25px; width: 25px; float: left;\"\r\n                                                                                data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Remove\"\r\n                                                                                onclick=\"\r\n                                                                                        document.getElementById('materialId').value = ${material.id};\"\r\n                                                                                data-bs-toggle=\"modal\" data-bs-target=\"#modalMaterial\">\r\n                                                                            <i class=\"bx bx-trash\"></i>\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </c:forEach>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n                            <a href=\"${pageContext.request.contextPath}/lesson\" class=\"btn btn-primary\">Back</a>\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <div class=\"modal fade\" id=\"modalMaterial\" tabindex=\"-1\" aria-hidden=\"true\">\r\n            <form action=\"${pageContext.request.contextPath}/lesson/update\">\r\n                <input type=\"hidden\" name=\"lessonId\" value=\"${requestScope.lesson.id}\"/>\r\n                <input type=\"hidden\" name=\"action\" value=\"removeMaterial\"/>\r\n                <input type=\"hidden\" name=\"materialId\" id=\"materialId\"/>\r\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"modalCenterTitle\">Remove material</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <h5 id=\"modalOrderBodyText\">Are you sure you want to remove material?</h5>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                No\r\n                            </button>\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/lesson/lessondetails.jsp b/web/WEB-INF/views/lesson/lessondetails.jsp
---- a/web/WEB-INF/views/lesson/lessondetails.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/lesson/lessondetails.jsp	(date 1721423113117)
-@@ -155,7 +155,7 @@
-                                                     <div class="card mb-4">
-                                                         <div class="card-header d-flex align-items-center justify-content-between mb-3">
-                                                             <h5 class="mb-0">Lesson details</h5>
--                                                            <small class="text-muted float-end">Input subject name</small>
-+                                                            <small class="text-muted float-end">Input lesson name</small>
-                                                         </div>
-                                                         <div class="card-body">
- 
-@@ -216,9 +216,17 @@
-                                                 </div>
-                                                 <c:if test="${(requestScope.fileErr != null) && (!requestScope.fileErr.isEmpty())}">
-                                                     <div class="row mb-3">
--                                                        <h5 style="color: red;">${requestScope.fileErr}</h5>
-+                                                        <h6 style="color: red;">${requestScope.fileErr}</h6>
-                                                     </div>
-                                                 </c:if>
-+                                                <c:if test="${(requestScope.fileSuccessful != null) && (!requestScope.fileSuccessful.isEmpty())}">
-+                                                    <div class="row mb-3">
-+                                                        <h6 class="text-success">${requestScope.fileSuccessful}</h6>
-+                                                    </div>
-+                                                </c:if>
-+                                                <div class="row mb-3">
-+                                                    <h5 style="color: black;">${requestScope.lesson.name}</h5>
-+                                                </div>
-                                                 <div class="table-responsive text-nowrap">
-                                                     <table class="table">
-                                                         <thead>
-Index: src/java/controller/signup/VerifyEmail.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template\r\n */\r\n\r\npackage controller.signup;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n/**\r\n * @author PC\r\n */\r\npublic class VerifyEmail extends HttpServlet {\r\n\r\n    /**\r\n     * Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.\r\n     *\r\n     * @param request  servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException      if an I/O error occurs\r\n     */\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        HttpSession session = request.getSession();\r\n        String code = request.getParameter(\"verifycode\");\r\n        String verificationCode = (String) session.getAttribute(\"verificationCode\");\r\n        if (code.equals(verificationCode)) {\r\n            try {\r\n                UserDAO userDAO = new UserDAO();\r\n                User user = (User) session.getAttribute(\"user\");\r\n                String password = (String) session.getAttribute(\"password\");\r\n                user.setStatus(1);\r\n                userDAO.userSignUp(user, password);\r\n                session.setAttribute(\"message\", \"Sign up successfully, please login.\");\r\n                response.sendRedirect(\"login.jsp\");\r\n            } catch (SQLException e) {\r\n                session.setAttribute(\"message\", \"Sign up failed. \" + e.getMessage());\r\n                response.sendRedirect(\"signup.jsp\");\r\n            }\r\n        } else {\r\n            request.getSession().setAttribute(\"message\", \"Verification code is incorrect.\");\r\n            response.sendRedirect(\"verificate-email.jsp\");\r\n        }\r\n    }\r\n\r\n    // <editor-fold defaultstate=\"collapsed\" desc=\"HttpServlet methods. Click on the + sign on the left to edit the code.\">\r\n\r\n    /**\r\n     * Handles the HTTP <code>GET</code> method.\r\n     *\r\n     * @param request  servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException      if an I/O error occurs\r\n     */\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    /**\r\n     * Handles the HTTP <code>POST</code> method.\r\n     *\r\n     * @param request  servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException      if an I/O error occurs\r\n     */\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    /**\r\n     * Returns a short description of the servlet.\r\n     *\r\n     * @return a String containing servlet description\r\n     */\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/signup/VerifyEmail.java b/src/java/controller/signup/VerifyEmail.java
---- a/src/java/controller/signup/VerifyEmail.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/signup/VerifyEmail.java	(date 1721423113112)
-@@ -11,7 +11,7 @@
- import jakarta.servlet.http.HttpServletRequest;
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
--import model.user.User;
-+import model.User;
- 
- import java.io.IOException;
- import java.sql.SQLException;
-Index: src/java/dal/AnswerDAO.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dal;\r\n\r\nimport java.io.Serializable;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport model.Answer;\r\nimport model.Question;\r\n\r\npublic class AnswerDAO extends DBContext implements Serializable {\r\n\r\n    QuestionDAO questionDAO = new QuestionDAO();\r\n\r\n    public ArrayList<Answer> getAllAnswersOfAQuestion(int questionId) {\r\n        ArrayList<Answer> list = new ArrayList<>();\r\n\r\n        String sql = \"select * from answer where question_id = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, questionId);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Answer a = new Answer(rs.getInt(\"id\"), rs.getString(\"content\"),\r\n                        rs.getBoolean(\"is_correct\"), questionDAO.getQuestionMatchId(questionId));\r\n                list.add(a);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public void updateAnswer(Answer a) throws SQLException {\r\n        String sql = \"update answer set content = ?, is_correct = ? where id = ?\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, a.getContent());\r\n        st.setBoolean(2, a.isIsCorrect());\r\n        st.setInt(3, a.getId());\r\n        st.execute();\r\n    }\r\n\r\n    public void insertAnswer(Answer a, Question q) {\r\n        String sql = \"insert into answer(content,is_correct,question_id) values (?,?,\"\r\n                + \"(select id from question where content = ?));\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, a.getContent());\r\n            st.setBoolean(2, a.isIsCorrect());\r\n            st.setString(3, q.getContent());\r\n            st.execute();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/dal/AnswerDAO.java b/src/java/dal/AnswerDAO.java
---- a/src/java/dal/AnswerDAO.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/dal/AnswerDAO.java	(date 1721423113114)
-@@ -6,7 +6,6 @@
- import java.sql.SQLException;
- import java.util.ArrayList;
- import model.Answer;
--import model.Question;
- 
- public class AnswerDAO extends DBContext implements Serializable {
- 
-@@ -31,27 +30,22 @@
-         return list;
-     }
- 
--    public void updateAnswer(Answer a) throws SQLException {
--        String sql = "update answer set content = ?, is_correct = ? where id = ?";
-+    public void deleteAllAnswersOfAQuestion(int questionId) throws SQLException {
-+        String sql = "delete from answer where question_id = ?;";
-         PreparedStatement st = connection.prepareStatement(sql);
--        st.setString(1, a.getContent());
--        st.setBoolean(2, a.isIsCorrect());
--        st.setInt(3, a.getId());
-+        st.setInt(1, questionId);
-         st.execute();
-     }
- 
--    public void insertAnswer(Answer a, Question q) {
-+    public void insertAnswer(Answer a) throws SQLException {
-         String sql = "insert into answer(content,is_correct,question_id) values (?,?,"
--                + "(select id from question where content = ?));";
--        try {
--            PreparedStatement st = connection.prepareStatement(sql);
--            st.setString(1, a.getContent());
--            st.setBoolean(2, a.isIsCorrect());
--            st.setString(3, q.getContent());
--            st.execute();
--        } catch (SQLException e) {
--            System.out.println(e.getMessage());
--        }
-+                + "(select id from question where content = ? and lesson_id = ?));";
-+        PreparedStatement st = connection.prepareStatement(sql);
-+        st.setString(1, a.getContent());
-+        st.setBoolean(2, a.isIsCorrect());
-+        st.setString(3, a.getQuestion().getContent());
-+        st.setInt(4, a.getQuestion().getLesson().getId());
-+        st.execute();
-     }
- 
- }
-Index: src/java/dal/QuestionDAO.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dal;\r\n\r\nimport com.mysql.cj.xdevapi.PreparableStatement;\r\nimport java.io.Serializable;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport model.Question;\r\n\r\npublic class QuestionDAO extends DBContext implements Serializable {\r\n\r\n    LessonDAO lessonDAO = new LessonDAO();\r\n\r\n    public ArrayList<Question> getAllQuestionsOfALesson(int lessonId) {\r\n        ArrayList<Question> ret = new ArrayList<>();\r\n\r\n        ArrayList<Question> list = getAllQuestions();\r\n        for (Question q : list) {\r\n            if (q.getLesson().getId() == lessonId) {\r\n                ret.add(q);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public ArrayList<Question> getAllQuestionsOfASubject(int subjectId) {\r\n        ArrayList<Question> ret = new ArrayList<>();\r\n\r\n        ArrayList<Question> list = getAllQuestions();\r\n        for (Question q : list) {\r\n            if (q.getLesson().getSubject().getId() == subjectId) {\r\n                ret.add(q);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private Question getQuestionInfo(ResultSet rs) throws SQLException {\r\n        Question q = new Question();\r\n        q.setId(rs.getInt(\"id\"));\r\n        q.setContent(rs.getString(\"content\"));\r\n        q.setLesson(lessonDAO.getLessonMatchId(rs.getInt(\"lesson_id\")));\r\n        q.setStatus(rs.getBoolean(\"status\"));\r\n        return q;\r\n    }\r\n\r\n    public ArrayList<Question> getAllQuestions() {\r\n        ArrayList<Question> list = new ArrayList<>();\r\n\r\n        String sql = \"select * from question;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Question q = getQuestionInfo(rs);\r\n                list.add(q);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public Question getQuestionMatchId(int questionId) {\r\n        String sql = \"select * from question where id = ?\";\r\n\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, questionId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                Question q = getQuestionInfo(rs);\r\n                return q;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void changeQuestionStatus(Question q) throws SQLException {\r\n        String sql = \"update question set status = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        if (q.isStatus()) {\r\n            st.setBoolean(1, false);\r\n        } else {\r\n            st.setBoolean(1, true);\r\n        }\r\n        st.setInt(2, q.getId());\r\n        st.execute();\r\n    }\r\n\r\n    public void insertQuestion(Question q) {\r\n        String sql = \"insert into Question(content,lesson_id,status) values (?,?,?);\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, q.getContent());\r\n            st.setInt(2, q.getLesson().getId());\r\n            st.setBoolean(3, q.isStatus());\r\n            st.execute();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/dal/QuestionDAO.java b/src/java/dal/QuestionDAO.java
---- a/src/java/dal/QuestionDAO.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/dal/QuestionDAO.java	(date 1721423113115)
-@@ -1,6 +1,5 @@
- package dal;
- 
--import com.mysql.cj.xdevapi.PreparableStatement;
- import java.io.Serializable;
- import java.sql.PreparedStatement;
- import java.sql.ResultSet;
-@@ -91,17 +90,31 @@
-         st.execute();
-     }
- 
--    public void insertQuestion(Question q) {
--        String sql = "insert into Question(content,lesson_id,status) values (?,?,?);";
--        try {
--            PreparedStatement st = connection.prepareStatement(sql);
--            st.setString(1, q.getContent());
--            st.setInt(2, q.getLesson().getId());
--            st.setBoolean(3, q.isStatus());
--            st.execute();
--        } catch (SQLException e) {
--            System.out.println(e.getMessage());
--        }
-+    public boolean isQuestionExist(Question question) {
-+        ArrayList<Question> list = getAllQuestionsOfASubject(question.getLesson().getSubjectId());
-+        for (Question q : list) {
-+            if (q.getContent().equals(question.getContent())) {
-+                return true;
-+            }
-+        }
-+        return false;
-+    }
-+
-+    public void insertQuestion(Question q) throws SQLException {
-+        String sql = "insert into question(content, status, lesson_id) values (?,?,?);";
-+        PreparedStatement st = connection.prepareStatement(sql);
-+        st.setString(1, q.getContent());
-+        st.setBoolean(2, q.isStatus());
-+        st.setInt(3, q.getLesson().getId());
-+        st.execute();
-+    }
-+
-+    public void updateQuestion(Question q) throws SQLException {
-+        String sql = "update question set content = ? where id = ?;";
-+        PreparedStatement st = connection.prepareStatement(sql);
-+        st.setString(1, q.getContent());
-+        st.setInt(2, q.getId());
-+        st.execute();
-     }
- 
- }
-Index: src/java/common/AvatarHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package common;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.http.Part;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport model.user.User;\r\n\r\npublic class AvatarHandler {\r\n\r\n    UserDAO userDAO = new UserDAO();\r\n\r\n    private void removeOldAvatar(String oldUri, String workingDir) {\r\n        String uri = workingDir + \"\\\\\" + oldUri.replace(\"/\", \"\\\\\");\r\n        File file = new File(uri);\r\n        System.out.println(uri);\r\n        if (file.exists()) {\r\n            file.delete();\r\n        }\r\n    }\r\n\r\n    private void deleteOldAvatar(String oldUri, String workingDir) {\r\n        if (!userDAO.isAvtExist(oldUri) && !oldUri.equals(\"assets/img/default_avt.jpg\")\r\n                && oldUri != null && !oldUri.isEmpty()) {\r\n            removeOldAvatar(oldUri, workingDir);\r\n        }\r\n    }\r\n\r\n    public void changeAvatar(int userId, String workingFolder, String workingDir,\r\n            Part filePart) throws IOException, SQLException {\r\n\r\n        FileHandler fileHandler = new FileHandler(workingFolder);\r\n        String uri = fileHandler.fileUpload(workingDir, filePart);\r\n        uri = (\"\" + uri).replace(\"\\\\\", \"/\");\r\n\r\n        User u = userDAO.getUserById(userId);\r\n        String oldUri = u.getAvatar();\r\n        System.out.println(oldUri);\r\n        deleteOldAvatar(oldUri, workingDir);\r\n\r\n        u.setAvatar(uri);\r\n        userDAO.updateAvatar(u);\r\n    }\r\n\r\n    public String uploadAvatar(String workingFolder, String workingDir, Part filePart, String oldUri)\r\n            throws IOException {\r\n        FileHandler fileHandler = new FileHandler(workingFolder);\r\n        String uri = fileHandler.fileUpload(workingDir, filePart);\r\n        uri = (\"\" + uri).replace(\"\\\\\", \"/\");\r\n        deleteOldAvatar(oldUri, workingDir);\r\n        return uri;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/common/AvatarHandler.java b/src/java/common/AvatarHandler.java
---- a/src/java/common/AvatarHandler.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/common/AvatarHandler.java	(date 1721423113098)
-@@ -5,7 +5,7 @@
- import java.io.File;
- import java.io.IOException;
- import java.sql.SQLException;
--import model.user.User;
-+import model.User;
- 
- public class AvatarHandler {
- 
-Index: src/java/common/ReadQuestionFromXlsFile.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package common;\r\n\r\nimport dal.AnswerDAO;\r\nimport dal.QuestionDAO;\r\nimport jakarta.servlet.http.Part;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.ArrayList;\r\nimport model.Lesson;\r\nimport model.Answer;\r\nimport model.Question;\r\nimport org.apache.poi.ss.usermodel.*;\r\n\r\npublic class ReadQuestionFromXlsFile {\r\n\r\n    QuestionDAO questionDAO = new QuestionDAO();\r\n    AnswerDAO answerDAO = new AnswerDAO();\r\n\r\n    private Question readQuestion(Row row) {\r\n        String content = row.getCell(0).toString();\r\n        Question q = new Question();\r\n        q.setContent(content);\r\n        return q;\r\n    }\r\n\r\n    private ArrayList<Answer> readAnswer(Row row) {\r\n        ArrayList<Answer> ret = new ArrayList<>();\r\n\r\n        for (Cell cell : row) {\r\n            Answer a = new Answer();\r\n            a.setContent(cell.toString());\r\n            ret.add(a);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private ArrayList<Answer> readCorrectAnswer(Row row, ArrayList<Answer> answerList) {\r\n        int index = 0;\r\n        for (Cell cell : row) {\r\n            Answer a = answerList.get(index);\r\n            a.setIsCorrect(cell.toString().equals(\"1.0\"));\r\n            answerList.set(index, a);\r\n            index++;\r\n            if (index == answerList.size()) {\r\n                return answerList;\r\n            }\r\n        }\r\n        return answerList;\r\n    }\r\n\r\n    private boolean insertQuestion(Question q, ArrayList<Answer> answerList, Lesson lesson) {\r\n        if (q.getContent().isEmpty() || q.getContent().length() > 255) {\r\n            return false;\r\n        }\r\n        int correctAnswers = 0, validAnswer = 0;\r\n        for (Answer a : answerList) {\r\n            if (a.getContent().length() <= 255) {\r\n                validAnswer++;\r\n                if (a.isIsCorrect()) {\r\n                    correctAnswers++;\r\n                }\r\n            }\r\n        }\r\n        if ((correctAnswers == 0) || (validAnswer < 2)) {\r\n            return false;\r\n        }\r\n        q.setStatus(true);\r\n        q.setLesson(lesson);\r\n        questionDAO.insertQuestion(q);\r\n        for (Answer a : answerList) {\r\n            if (a.getContent().length() <= 255) {\r\n                answerDAO.insertAnswer(a, q);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public void readQuestionFromFile(Part part, Lesson lesson) throws IOException {\r\n        Question q = null;\r\n        ArrayList<Answer> answerList = null;\r\n\r\n        InputStream fileContent = part.getInputStream();\r\n        Workbook wb = WorkbookFactory.create(fileContent);\r\n        Sheet sheet = wb.getSheetAt(0);\r\n        int rowType = 0;\r\n        for (Row row : sheet) {\r\n            rowType++;\r\n            switch (rowType % 3) {\r\n                case 1:\r\n                    answerList = new ArrayList<>();\r\n                    q = readQuestion(row);\r\n                    break;\r\n                case 2:\r\n                    answerList = readAnswer(row);\r\n                    break;\r\n                case 0:\r\n                    answerList = readCorrectAnswer(row, answerList);\r\n                    if (insertQuestion(q, answerList, lesson)) {\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/common/ReadQuestionFromXlsFile.java b/src/java/common/ReadQuestionFromXlsFile.java
---- a/src/java/common/ReadQuestionFromXlsFile.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/common/ReadQuestionFromXlsFile.java	(date 1721423113101)
-@@ -5,6 +5,7 @@
- import jakarta.servlet.http.Part;
- import java.io.IOException;
- import java.io.InputStream;
-+import java.sql.SQLException;
- import java.util.ArrayList;
- import model.Lesson;
- import model.Answer;
-@@ -18,18 +19,25 @@
- 
-     private Question readQuestion(Row row) {
-         String content = row.getCell(0).toString();
--        Question q = new Question();
--        q.setContent(content);
--        return q;
-+        content = StringFormatter.removeDoubleSpaces(content.trim());
-+        if (!content.isEmpty() && content.length() <= 255) {
-+            Question q = new Question();
-+            q.setContent(content);
-+            return q;
-+        }
-+        return null;
-     }
- 
-     private ArrayList<Answer> readAnswer(Row row) {
-         ArrayList<Answer> ret = new ArrayList<>();
- 
-         for (Cell cell : row) {
--            Answer a = new Answer();
--            a.setContent(cell.toString());
--            ret.add(a);
-+            String content = StringFormatter.removeDoubleSpaces(cell.toString().trim());
-+            if (!content.isEmpty() && content.length() <= 255) {
-+                Answer a = new Answer();
-+                a.setContent(content);
-+                ret.add(a);
-+            }
-         }
-         return ret;
-     }
-@@ -49,16 +57,15 @@
-     }
- 
-     private boolean insertQuestion(Question q, ArrayList<Answer> answerList, Lesson lesson) {
--        if (q.getContent().isEmpty() || q.getContent().length() > 255) {
-+        if (q == null) {
-             return false;
-         }
--        int correctAnswers = 0, validAnswer = 0;
-+        int correctAnswers = 0;
-+        int validAnswer = answerList.size();
-         for (Answer a : answerList) {
--            if (a.getContent().length() <= 255) {
--                validAnswer++;
--                if (a.isIsCorrect()) {
--                    correctAnswers++;
--                }
-+            if (a.isIsCorrect()) {
-+                correctAnswers++;
-+
-             }
-         }
-         if ((correctAnswers == 0) || (validAnswer < 2)) {
-@@ -66,18 +73,27 @@
-         }
-         q.setStatus(true);
-         q.setLesson(lesson);
--        questionDAO.insertQuestion(q);
--        for (Answer a : answerList) {
--            if (a.getContent().length() <= 255) {
--                answerDAO.insertAnswer(a, q);
--            }
--        }
--        return true;
-+        if (!questionDAO.isQuestionExist(q)) {
-+            try {
-+                questionDAO.insertQuestion(q);
-+                for (Answer a : answerList) {
-+                    if (a.getContent().length() <= 255) {
-+                        a.setQuestion(q);
-+                        answerDAO.insertAnswer(a);
-+                    }
-+                }
-+                return true;
-+            } catch (SQLException e) {
-+                System.out.println(e.getMessage());
-+            }
-+        }
-+        return false;
-     }
- 
--    public void readQuestionFromFile(Part part, Lesson lesson) throws IOException {
-+    public int readQuestionFromFile(Part part, Lesson lesson) throws IOException {
-         Question q = null;
-         ArrayList<Answer> answerList = null;
-+        int count = 0;
- 
-         InputStream fileContent = part.getInputStream();
-         Workbook wb = WorkbookFactory.create(fileContent);
-@@ -96,10 +112,12 @@
-                 case 0:
-                     answerList = readCorrectAnswer(row, answerList);
-                     if (insertQuestion(q, answerList, lesson)) {
-+                        count++;
-                     }
-                     break;
-             }
-         }
-+        return count;
-     }
- 
- }
-Index: src/java/controller/flashcard/FlashcardQuestionServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.flashcard;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\n\r\nimport dal.FlashcardDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.flashcard.FlashcardQuestions;\r\nimport model.user.User;\r\n\r\npublic class FlashcardQuestionServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n            if (user == null) {\r\n                response.sendRedirect(\"login.jsp\");\r\n            } else {\r\n                FlashcardDAO flashcardDAO = new FlashcardDAO();\r\n                int flashcardSetId = Integer.parseInt(request.getParameter(\"flashcardSetId\"));\r\n                List<FlashcardQuestions> flashcardQuestions = flashcardDAO.getFlashcardQuestions(flashcardSetId);\r\n                session.setAttribute(\"flashcardSetId\", flashcardSetId);\r\n                session.setAttribute(\"flashcardQuestions\", flashcardQuestions);\r\n                RequestDispatcher dispatcher = request.getRequestDispatcher(\"flashcard-question.jsp\");\r\n                dispatcher.forward(request, response);\r\n            }\r\n        } catch (SQLException e) {\r\n            RequestDispatcher dispatcher = request.getRequestDispatcher(\"home.jsp\");\r\n            dispatcher.forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/flashcard/FlashcardQuestionServlet.java b/src/java/controller/flashcard/FlashcardQuestionServlet.java
---- a/src/java/controller/flashcard/FlashcardQuestionServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/flashcard/FlashcardQuestionServlet.java	(date 1721423113109)
-@@ -12,7 +12,7 @@
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
- import model.flashcard.FlashcardQuestions;
--import model.user.User;
-+import model.User;
- 
- public class FlashcardQuestionServlet extends HttpServlet {
- 
-Index: src/java/common/MaterialHandler.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package common;\r\n\r\nimport dal.MaterialDAO;\r\nimport jakarta.servlet.http.Part;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport model.Material;\r\n\r\npublic class MaterialHandler {\r\n\r\n    static MaterialDAO materialDAO = new MaterialDAO();\r\n\r\n    private static void removeMaterialFile(String workingDir, String uri) {\r\n        File file = new File(workingDir + \"\\\\\" + uri.replace(\"/\", \"\\\\\"));\r\n        if (file.exists()) {\r\n            file.delete();\r\n        }\r\n    }\r\n\r\n    public static void addMaterial(int lessonId, String workingFolder,\r\n            String workingDir, Part filePart)\r\n            throws IOException, SQLException {\r\n        FileHandler fileHandler = new FileHandler(workingFolder);\r\n        String uri = fileHandler.fileUpload(workingDir, filePart);\r\n        uri = (\"\" + uri).replace(\"\\\\\", \"/\");\r\n\r\n        if (!materialDAO.isMaterialExist(lessonId, uri)) {\r\n            materialDAO.insertMaterial(lessonId, uri);\r\n        }\r\n    }\r\n\r\n    public static void removeMaterial(int lessonId, int materialId, String workingDir) throws SQLException {\r\n        materialDAO.removeFromMaterial_Lesson(lessonId, materialId);\r\n        if (!materialDAO.isMaterialUsed(materialId)) {\r\n            Material m = materialDAO.getMaterialMatchId(materialId);\r\n            if (m != null) {\r\n                removeMaterialFile(workingDir, m.getUri());\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/common/MaterialHandler.java b/src/java/common/MaterialHandler.java
---- a/src/java/common/MaterialHandler.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/common/MaterialHandler.java	(date 1721423113100)
-@@ -35,6 +35,7 @@
-         if (!materialDAO.isMaterialUsed(materialId)) {
-             Material m = materialDAO.getMaterialMatchId(materialId);
-             if (m != null) {
-+                materialDAO.removeMaterial(m);
-                 removeMaterialFile(workingDir, m.getUri());
-             }
-         }
-Index: src/java/dal/LessonDAO.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dal;\r\n\r\nimport java.io.Serializable;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport model.Lesson;\r\n\r\npublic class LessonDAO extends DBContext implements Serializable {\r\n\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    private Lesson getLessonInfo(ResultSet rs) throws SQLException {\r\n        Lesson l = new Lesson();\r\n        l.setId(rs.getInt(\"id\"));\r\n        l.setName(rs.getString(\"name\"));\r\n        int subjectId = rs.getInt(\"subject_id\");\r\n        l.setSubjectId(rs.getInt(\"subject_id\"));\r\n        l.setSubject(subjectDAO.getSubjectMatchId(subjectId));\r\n        l.setStatus(rs.getBoolean(\"status\"));\r\n        l.setOrder(rs.getInt(\"order\"));\r\n        return l;\r\n    }\r\n\r\n    public ArrayList<Lesson> getAllLessons() {\r\n        String sql = \"select * from lesson;\";\r\n        ArrayList<Lesson> list = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Lesson l = getLessonInfo(rs);\r\n                list.add(l);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public Lesson getLessonMatchId(int lessonId) {\r\n        String sql = \"select * from lesson where id = ?;\";\r\n        Lesson l = null;\r\n\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, lessonId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                l = getLessonInfo(rs);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    public int getLatestOrder() {\r\n        ArrayList<Lesson> list = getAllLessons();\r\n        int max = 0;\r\n        for (Lesson lesson : list) {\r\n            int order = lesson.getOrder();\r\n            if (order > max) {\r\n                max = order;\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    public void addLesson(String name, int subjectId) throws SQLException {\r\n        String sql = \"insert into lesson(name, subject_id, `order`) values (?,?,?);\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, name);\r\n        st.setInt(2, subjectId);\r\n        st.setInt(3, getLatestOrder() + 1);\r\n        st.execute();\r\n    }\r\n\r\n    public void updateLesson(Lesson lesson) throws SQLException {\r\n\r\n        String sql = \"update lesson set name = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, lesson.getName());\r\n        st.setInt(2, lesson.getId());\r\n        st.execute();\r\n\r\n    }\r\n\r\n    public void changeStatus(int lessonId) throws SQLException {\r\n        boolean newStatus = !getLessonMatchId(lessonId).isStatus();\r\n        String sql = \"update lesson set status = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setBoolean(1, newStatus);\r\n        st.setInt(2, lessonId);\r\n        st.execute();\r\n    }\r\n\r\n    private Lesson getLessonByOrder(int order) {\r\n        String sql = \"select * from lesson where `order` = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, order);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return getLessonInfo(rs);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private void updateOrder(int lessonId, int order) throws SQLException {\r\n        String sql = \"update lesson set `order` = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, order);\r\n        st.setInt(2, lessonId);\r\n        st.execute();\r\n    }\r\n\r\n    public void changeOrder(int lessonId, String action) throws SQLException {\r\n        int thisOrder = getLessonMatchId(lessonId).getOrder();\r\n        int newOrder = 0;\r\n        switch (action) {\r\n            case \"up\":\r\n                newOrder = thisOrder - 1;\r\n                break;\r\n            case \"down\":\r\n                newOrder = thisOrder + 1;\r\n                break;\r\n        }\r\n        if (newOrder >= 1 && newOrder <= getLatestOrder()) {\r\n            Lesson secondLesson = getLessonByOrder(newOrder);\r\n            if (secondLesson != null){\r\n                updateOrder(lessonId, newOrder);\r\n                updateOrder(secondLesson.getId(), thisOrder);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    public ArrayList<Lesson> getAllLesson(int subjectId) {\r\n        String sql = \"select * from lesson where subject_id = ?;\";\r\n        ArrayList<Lesson> list = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, subjectId);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Lesson l = getLessonInfo(rs);\r\n                list.add(l);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/dal/LessonDAO.java b/src/java/dal/LessonDAO.java
---- a/src/java/dal/LessonDAO.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/dal/LessonDAO.java	(date 1721423113114)
-@@ -57,8 +57,8 @@
-         return l;
-     }
- 
--    public int getLatestOrder() {
--        ArrayList<Lesson> list = getAllLessons();
-+    public int getLatestOrder(int subjectId) {
-+        ArrayList<Lesson> list = getAllLessonsOfASubject(subjectId);
-         int max = 0;
-         for (Lesson lesson : list) {
-             int order = lesson.getOrder();
-@@ -74,7 +74,7 @@
-         PreparedStatement st = connection.prepareStatement(sql);
-         st.setString(1, name);
-         st.setInt(2, subjectId);
--        st.setInt(3, getLatestOrder() + 1);
-+        st.setInt(3, getLatestOrder(subjectId) + 1);
-         st.execute();
-     }
- 
-@@ -97,11 +97,12 @@
-         st.execute();
-     }
- 
--    private Lesson getLessonByOrder(int order) {
--        String sql = "select * from lesson where `order` = ?;";
-+    private Lesson getLessonByOrder(int order, int subjectId) {
-+        String sql = "select * from lesson where `order` = ? and subject_id = ?;";
-         try {
-             PreparedStatement st = connection.prepareStatement(sql);
-             st.setInt(1, order);
-+            st.setInt(2, subjectId);
-             ResultSet rs = st.executeQuery();
-             if (rs.next()) {
-                 return getLessonInfo(rs);
-@@ -121,7 +122,8 @@
-     }
- 
-     public void changeOrder(int lessonId, String action) throws SQLException {
--        int thisOrder = getLessonMatchId(lessonId).getOrder();
-+        Lesson lesson = getLessonMatchId(lessonId);
-+        int thisOrder = lesson.getOrder();
-         int newOrder = 0;
-         switch (action) {
-             case "up":
-@@ -131,17 +133,18 @@
-                 newOrder = thisOrder + 1;
-                 break;
-         }
--        if (newOrder >= 1 && newOrder <= getLatestOrder()) {
--            Lesson secondLesson = getLessonByOrder(newOrder);
--            if (secondLesson != null){
-+        int subjectId = lesson.getSubjectId();
-+        if (newOrder >= 1 && newOrder <= getLatestOrder(subjectId)) {
-+            Lesson secondLesson = getLessonByOrder(newOrder, subjectId);
-+            if (secondLesson != null) {
-                 updateOrder(lessonId, newOrder);
-                 updateOrder(secondLesson.getId(), thisOrder);
-             }
-         }
- 
-     }
--    
--    public ArrayList<Lesson> getAllLesson(int subjectId) {
-+
-+    public ArrayList<Lesson> getAllLessonsOfASubject(int subjectId) {
-         String sql = "select * from lesson where subject_id = ?;";
-         ArrayList<Lesson> list = new ArrayList<>();
-         try {
-@@ -158,4 +161,14 @@
-         return list;
-     }
- 
-+    public boolean isLessonExist(String name, int subjectId) {
-+        ArrayList<Lesson> list = getAllLessonsOfASubject(subjectId);
-+        for (Lesson lesson : list) {
-+            if (lesson.getName().equals(name)) {
-+                return true;
-+            }
-+        }
-+        return false;
-+    }
-+
- }
-Index: src/java/model/Question.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package model;\r\n\r\nimport java.util.Comparator;\r\nimport model.Lesson;\r\n\r\npublic class Question {\r\n\r\n    private int id;\r\n    private String content;\r\n    private Lesson lesson;\r\n    private boolean status;\r\n\r\n    public Question() {\r\n    }\r\n\r\n    public Question(int id, String content, Lesson lesson, boolean status) {\r\n        this.id = id;\r\n        this.content = content;\r\n        this.lesson = lesson;\r\n        this.status = status;\r\n    }\r\n\r\n    public boolean isStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(boolean status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getContent() {\r\n        return content;\r\n    }\r\n\r\n    public void setContent(String content) {\r\n        this.content = content;\r\n    }\r\n\r\n    public Lesson getLesson() {\r\n        return lesson;\r\n    }\r\n\r\n    public void setLesson(Lesson lesson) {\r\n        this.lesson = lesson;\r\n    }\r\n\r\n    public static class SortByContent implements Comparator<Question> {\r\n\r\n        @Override\r\n        public int compare(Question q1, Question q2) {\r\n            return q1.getContent().compareTo(q2.getContent());\r\n        }\r\n\r\n    }\r\n\r\n    public static class SortByLesson implements Comparator<Question> {\r\n\r\n        @Override\r\n        public int compare(Question q1, Question q2) {\r\n            return q1.getLesson().getName()\r\n                    .compareTo(q2.getLesson().getName());\r\n        }\r\n    }\r\n\r\n    public static class SortByStatus implements Comparator<Question> {\r\n\r\n        @Override\r\n        public int compare(Question q1, Question q2) {\r\n            if (q1.isStatus() == q2.isStatus()) {\r\n                return 0;\r\n            }\r\n            if ((q1.isStatus()) && (!q2.isStatus())) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static class SortBySubject implements Comparator<Question> {\r\n\r\n        @Override\r\n        public int compare(Question q1, Question q2) {\r\n            return q1.getLesson().getSubject().getCode()\r\n                    .compareTo(q2.getLesson().getSubject().getCode());\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/model/Question.java b/src/java/model/Question.java
---- a/src/java/model/Question.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/model/Question.java	(date 1721423113116)
-@@ -1,7 +1,6 @@
- package model;
- 
- import java.util.Comparator;
--import model.Lesson;
- 
- public class Question {
- 
-Index: src/java/controller/subject/SubjectListServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.subject;\r\n\r\nimport dal.SubjectDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"SubjectListServlet\", urlPatterns = {\"/subjectlist\"})\r\npublic class SubjectListServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet UserListServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet UserListServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    void refreshSession(HttpServletRequest request) {\r\n        HttpSession session = request.getSession();\r\n        session.setAttribute(\"user\", session.getAttribute(\"user\"));\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            request.setAttribute(\"list\", subjectDAO.getAllSubject());\r\n            request.getRequestDispatcher(\"subjectlist.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/subject/SubjectListServlet.java b/src/java/controller/subject/SubjectListServlet.java
---- a/src/java/controller/subject/SubjectListServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/subject/SubjectListServlet.java	(date 1721423113113)
-@@ -9,7 +9,7 @@
- import jakarta.servlet.http.HttpServletRequest;
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
--import model.user.User;
-+import model.User;
- 
- @WebServlet(name = "SubjectListServlet", urlPatterns = {"/subjectlist"})
- public class SubjectListServlet extends HttpServlet {
-Index: src/java/controller/UserServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller;\r\n\r\nimport common.AvatarHandler;\r\nimport common.EmailValidator;\r\nimport common.PasswordGenerator;\r\nimport dal.SubjectDAO;\r\nimport dal.UserDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.MultipartConfig;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport jakarta.servlet.http.Part;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport mail.SendMail;\r\nimport model.subject.Subject;\r\nimport model.user.*;\r\n\r\n@MultipartConfig\r\n@WebServlet(name = \"UserServlet\", urlPatterns = {\"/user\", \"/user/update\", \"/user/details\", \"/user/new\"})\r\npublic class UserServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet UserServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet UserServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    UserDAO userDAO = new UserDAO();\r\n    AvatarHandler avatarHandler = new AvatarHandler();\r\n    private final int rowPerPage = 6;\r\n\r\n    private String getWorkingDir() {\r\n        String directory = getServletContext().getRealPath(\"\") + \"\";\r\n        return directory.replace(\"\\\\build\\\\web\\\\\", \"\\\\web\\\\\");\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doPost(request, response);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n        String contextPath = request.getServletContext().getContextPath();\r\n        String loginPage = contextPath + \"/login.jsp\";\r\n        String homePage = contextPath + \"/home\";\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(loginPage);\r\n        } else {\r\n            User u = userDAO.getUserById(user.getId());\r\n            if (u != null && u.getEmail() != null) {\r\n                session.setAttribute(\"user\", u);\r\n                if (user.getRole() != 0) {\r\n                    response.sendRedirect(homePage);\r\n                } else {\r\n                    String action = request.getServletPath();\r\n                    switch (action) {\r\n                        case \"/user\":\r\n                            viewUserList(request, response);\r\n                            break;\r\n                        case \"/user/update\":\r\n                            updateUser(request, response);\r\n                            break;\r\n                        case \"/user/details\":\r\n                            viewUserDetails(request, response);\r\n                            break;\r\n                        case \"/user/new\":\r\n                            newUser(request, response);\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                response.sendRedirect(loginPage);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private ArrayList<String> allSortOptions() {\r\n        ArrayList<String> list = new ArrayList<>();\r\n        list.add(\"Name\");\r\n        list.add(\"Email\");\r\n        list.add(\"Role\");\r\n        list.add(\"Status\");\r\n        return list;\r\n    }\r\n\r\n    private ArrayList<User> getUsersMatchRole(int roleId, ArrayList<User> list) {\r\n        ArrayList<User> ret = new ArrayList<>();\r\n        for (User user : list) {\r\n            if (user.getRole() == roleId) {\r\n                ret.add(user);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private ArrayList<User> getUsersContainKeyWord(String keyWord, ArrayList<User> list) {\r\n        ArrayList<User> ret = new ArrayList<>();\r\n        for (User user : list) {\r\n            if (user.getName().contains(keyWord) || user.getEmail().contains(keyWord)) {\r\n                ret.add(user);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private int getNoOfPages(ArrayList<User> list) {\r\n        int length = list.size();\r\n        if (length == 0) {\r\n            return 1;\r\n        }\r\n        int noOfPages = length / rowPerPage;\r\n        if (length % rowPerPage == 0) {\r\n            return noOfPages;\r\n        }\r\n        return noOfPages + 1;\r\n    }\r\n\r\n    private int getPage(HttpServletRequest request, int noOfPages) {\r\n        String cur = request.getParameter(\"currentPage\");\r\n        if ((cur == null) || (cur.isEmpty())) {\r\n            return 1;\r\n        }\r\n\r\n        int currentPage = Integer.parseInt(cur);\r\n        switch (request.getParameter(\"pageAction\")) {\r\n            case \"firstPage\":\r\n                return 1;\r\n            case \"prevPage\": {\r\n                currentPage--;\r\n                if (currentPage < 1) {\r\n                    return 1;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"nextPage\": {\r\n                currentPage++;\r\n                if (currentPage > noOfPages) {\r\n                    return noOfPages;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"lastPage\":\r\n                return noOfPages;\r\n        }\r\n\r\n        String newpage = request.getParameter(\"newPage\");\r\n        if ((newpage != null) && (!newpage.isEmpty())) {\r\n            int newPage = Integer.parseInt(newpage);\r\n            return newPage;\r\n        }\r\n        return currentPage;\r\n\r\n    }\r\n\r\n    private int getAdminIndex(ArrayList<Role> roleList) {\r\n        int index = 0;\r\n        for (Role role : roleList) {\r\n            if (role.getName().equals(\"Admin\")) {\r\n                return index;\r\n            }\r\n            index++;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private ArrayList<Role> getRoleList() {\r\n        ArrayList<Role> roleList = userDAO.getAllRoles();\r\n        int index = getAdminIndex(roleList);\r\n        if (index != -1) {\r\n            roleList.remove(getAdminIndex(roleList));\r\n        }\r\n        return roleList;\r\n    }\r\n\r\n    private ArrayList<User> getAllUsersOfPage(int page, ArrayList<User> list) {\r\n        ArrayList<User> ret = new ArrayList<>();\r\n        int start = rowPerPage * (page - 1) + 1;\r\n        int end = rowPerPage * page;\r\n        if (start < 1) {\r\n            start = 1;\r\n        }\r\n        if (end > list.size()) {\r\n            end = list.size();\r\n        }\r\n\r\n        for (int i = start - 1; i < end; i++) {\r\n            ret.add(list.get(i));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private void viewUserList(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        ArrayList<User> list = userDAO.getAllUsers();\r\n\r\n        String rid = request.getParameter(\"roleId\");\r\n        if (rid != null && !rid.isEmpty()) {\r\n            int roleId = Integer.parseInt(rid);\r\n            request.setAttribute(\"roleId\", roleId);\r\n            if (roleId != 0) {\r\n                list = getUsersMatchRole(roleId, list);\r\n            }\r\n        }\r\n\r\n        String keyWord = request.getParameter(\"keyWord\");\r\n        if (keyWord != null && !keyWord.isEmpty()) {\r\n            list = getUsersContainKeyWord(keyWord, list);\r\n        }\r\n\r\n        String sortBy = request.getParameter(\"sortBy\");\r\n        if (sortBy != null && !sortBy.isEmpty()) {\r\n            switch (sortBy) {\r\n                case \"Name\":\r\n                    Collections.sort(list, new User.SortByName());\r\n                    break;\r\n                case \"Email\":\r\n                    Collections.sort(list, new User.SortByEmail());\r\n                    break;\r\n                case \"Role\":\r\n                    Collections.sort(list, new User.SortByRole());\r\n                    break;\r\n                case \"Status\":\r\n                    Collections.sort(list, new User.SortByStatus());\r\n                    break;\r\n            }\r\n        }\r\n\r\n        int noOfPages = getNoOfPages(list);\r\n        int currentPage = getPage(request, noOfPages);\r\n        list = getAllUsersOfPage(currentPage, list);\r\n\r\n        request.setAttribute(\"list\", list);\r\n        request.setAttribute(\"roleList\", getRoleList());\r\n        request.setAttribute(\"keyWord\", keyWord);\r\n        request.setAttribute(\"sortOptions\", allSortOptions());\r\n        request.setAttribute(\"sortBy\", sortBy);\r\n        request.setAttribute(\"currentPage\", currentPage);\r\n        request.setAttribute(\"noOfPages\", noOfPages);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/user/userlist.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void changeUserStatus(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException {\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        System.out.println(userId);\r\n        userDAO.changeUserStatus(userId);\r\n        response.sendRedirect(\"../user\");\r\n    }\r\n\r\n    private void saveChanges(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        boolean successful = true;\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        User user = userDAO.getUserById(userId);\r\n        String name = request.getParameter(\"name\");\r\n        if (name == null || name.isEmpty()) {\r\n            request.setAttribute(\"nameErr\", \"Name is blank!\");\r\n            successful = false;\r\n        } else {\r\n            if (name.length() > 50) {\r\n                successful = false;\r\n                request.setAttribute(\"nameErr\", \"Name can not exceed 50 characters!\");\r\n            }\r\n        }\r\n        Part filePart = request.getPart(\"newAvatar\");\r\n        if (filePart != null && filePart.getSize() != 0) {\r\n            String workingDir = getWorkingDir();\r\n            String workingFolder = \"assets\\\\img\";\r\n            try {\r\n                avatarHandler.changeAvatar(userId, workingFolder, workingDir, filePart);\r\n            } catch (SQLException | IOException e) {\r\n                successful = false;\r\n                request.setAttribute(\"avtErr\", \"Upload image failed!\");\r\n            }\r\n        }\r\n\r\n        user.setName(name);\r\n        user.setRole(Integer.parseInt(request.getParameter(\"roleId\")));\r\n        if (successful) {\r\n            try {\r\n                userDAO.updateUser(user);\r\n            } catch (SQLException e) {\r\n                request.setAttribute(\"updateErr\", \"Update failed! Please try again later!\");\r\n                successful = false;\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../user\");\r\n        } else {\r\n            request.setAttribute(\"user\", user);\r\n            request.setAttribute(\"roleList\", getRoleList());\r\n            request.getRequestDispatcher(\"/WEB-INF/views/user/userdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void assignSubject(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        boolean successful = true;\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        int subjectId = Integer.parseInt(request.getParameter(\"subjectId\"));\r\n\r\n        try {\r\n            userDAO.assignSubject(userId, subjectId);\r\n        } catch (SQLException e) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Assign subject failed!\");\r\n        }\r\n\r\n        if (successful) {\r\n            String contextPath = request.getServletContext().getContextPath();\r\n            String redirectPage = contextPath + \"/user/details\";\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"userId\", userId);\r\n            session.setAttribute(\"currentPage\", \"assignSubject\");\r\n            response.sendRedirect(redirectPage);\r\n        } else {\r\n            request.setAttribute(\"user\", userDAO.getUserById(userId));\r\n            request.setAttribute(\"roleList\", getRoleList());\r\n            ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);\r\n            request.setAttribute(\"subjectList\", subjectList);\r\n            request.setAttribute(\"unassignedSubjectList\", getAllSubjectsNotInCharged(subjectList));\r\n            request.setAttribute(\"currentPage\", \"assignSubject\");\r\n            request.getRequestDispatcher(\"/WEB-INF/views/user/userdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void removeSubject(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        boolean successful = true;\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        int subjectId = Integer.parseInt(request.getParameter(\"subjectId\"));\r\n\r\n        try {\r\n            userDAO.removeAssignedSubject(userId, subjectId);\r\n        } catch (SQLException e) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Remove subject failed!\");\r\n        }\r\n\r\n        if (successful) {\r\n            String contextPath = request.getServletContext().getContextPath();\r\n            String redirectPage = contextPath + \"/user/details\";\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"userId\", userId);\r\n            session.setAttribute(\"currentPage\", \"assignSubject\");\r\n            response.sendRedirect(redirectPage);\r\n        } else {\r\n            request.setAttribute(\"user\", userDAO.getUserById(userId));\r\n            request.setAttribute(\"roleList\", getRoleList());\r\n            ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);\r\n            request.setAttribute(\"subjectList\", subjectList);\r\n            request.setAttribute(\"unassignedSubjectList\", getAllSubjectsNotInCharged(subjectList));\r\n            request.setAttribute(\"currentPage\", \"assignSubject\");\r\n            request.getRequestDispatcher(\"/WEB-INF/views/user/userdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void updateUser(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"changeStatus\":\r\n                changeUserStatus(request, response);\r\n                break;\r\n            case \"saveChanges\":\r\n                saveChanges(request, response);\r\n                break;\r\n            case \"assignSubject\":\r\n                assignSubject(request, response);\r\n                break;\r\n            case \"removeSubject\":\r\n                removeSubject(request, response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private boolean isSubjectAssigned(ArrayList<Subject> subjectList, Subject s) {\r\n        for (Subject subject : subjectList) {\r\n            if (subject.getId() == s.getId()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private ArrayList<Subject> getAllSubjectsNotInCharged(ArrayList<Subject> subjectList) {\r\n        SubjectDAO subjectDAO = new SubjectDAO();\r\n        ArrayList<Subject> allSubject = subjectDAO.getAllSubject();\r\n        ArrayList<Subject> ret = new ArrayList<>();\r\n        for (Subject s : allSubject) {\r\n            if (!isSubjectAssigned(subjectList, s)) {\r\n                ret.add(s);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private void viewUserDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        int userId;\r\n        HttpSession session = request.getSession();\r\n        if (session.getAttribute(\"userId\") != null) {\r\n            userId = (int) session.getAttribute(\"userId\");\r\n            session.removeAttribute(\"userId\");\r\n        } else {\r\n            userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        }\r\n        User user = userDAO.getUserById(userId);\r\n\r\n        request.setAttribute(\"currentPage\", session.getAttribute(\"currentPage\"));\r\n        session.removeAttribute(\"currentPage\");\r\n\r\n        request.setAttribute(\"user\", user);\r\n        request.setAttribute(\"roleList\", getRoleList());\r\n        ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);\r\n        request.setAttribute(\"subjectList\", subjectList);\r\n        request.setAttribute(\"unassignedSubjectList\", getAllSubjectsNotInCharged(subjectList));\r\n        request.getRequestDispatcher(\"/WEB-INF/views/user/userdetails.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void goToPage(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        request.setAttribute(\"roleList\", getRoleList());\r\n        request.getRequestDispatcher(\"/WEB-INF/views/user/newuser.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void addUser(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        boolean successful = true;\r\n        User user = new User();\r\n        String name = request.getParameter(\"name\");\r\n        if (name == null || name.isEmpty()) {\r\n            request.setAttribute(\"nameErr\", \"Name is blank!\");\r\n            successful = false;\r\n        } else {\r\n            if (name.length() > 50) {\r\n                successful = false;\r\n                request.setAttribute(\"nameErr\", \"Name can not exceed 50 characters!\");\r\n            }\r\n        }\r\n        user.setName(name);\r\n        user.setRole(Integer.parseInt(request.getParameter(\"roleId\")));\r\n        String avt = request.getParameter(\"avt\");\r\n        Part filePart = request.getPart(\"avatar\");\r\n        if (filePart == null || filePart.getSize() == 0) {\r\n            if (avt == null || avt.isEmpty()) {\r\n                user.setAvatar(\"assets/img/default_avt.jpg\");\r\n            } else {\r\n                user.setAvatar(avt);\r\n            }\r\n        } else {\r\n            String workingDir = getWorkingDir();\r\n            String workingFolder = \"assets\\\\img\";\r\n            user.setAvatar(avatarHandler.uploadAvatar(workingFolder, workingDir, filePart, avt));\r\n        }\r\n        String email = request.getParameter(\"email\");\r\n        user.setEmail(email);\r\n        if (email == null || email.isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"emailErr\", \"Email is blank!\");\r\n        } else {\r\n            if (email.length() > 35) {\r\n                successful = false;\r\n                request.setAttribute(\"emailErr\", \"Email can not exceed 35 characters!\");\r\n            } else {\r\n                if (!EmailValidator.validate(email)) {\r\n                    successful = false;\r\n                    request.setAttribute(\"emailErr\", \"Please enter a valid email!\");\r\n                } else {\r\n                    if (userDAO.checkEmailExist(email)) {\r\n                        successful = false;\r\n                        request.setAttribute(\"emailErr\", \"Email has already been registered, please head to login!\");\r\n                    } else {\r\n                        try {\r\n                            user.setStatus(2);\r\n                            String password = PasswordGenerator.generateRandomPassword();\r\n                            userDAO.addUser(user, password);\r\n                            String receiver = user.getEmail();\r\n                            String subject = \"Password for Knowledge Revising System\";\r\n                            String content = \"Hi, you have been invited to join our Knowledge Revising System website \\n\\n\";\r\n                            content += \"Please login by your email with password \" + password + \" to access our system.\";\r\n                            SendMail.sendMail(receiver, subject, content);\r\n                        } catch (SQLException e) {\r\n                            successful = false;\r\n                            request.setAttribute(\"err\", \"Failed to add user, please try again later!\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../user\");\r\n        } else {\r\n            request.setAttribute(\"user\", user);\r\n            request.setAttribute(\"roleList\", getRoleList());\r\n            request.getRequestDispatcher(\"/WEB-INF/views/user/newuser.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void newUser(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"goToPage\":\r\n                goToPage(request, response);\r\n                break;\r\n            case \"addUser\":\r\n                addUser(request, response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/UserServlet.java b/src/java/controller/UserServlet.java
---- a/src/java/controller/UserServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/UserServlet.java	(date 1721423113105)
-@@ -1,8 +1,11 @@
- package controller;
- 
-+import model.User;
-+import model.Role;
- import common.AvatarHandler;
- import common.EmailValidator;
- import common.PasswordGenerator;
-+import common.StringFormatter;
- import dal.SubjectDAO;
- import dal.UserDAO;
- import java.io.IOException;
-@@ -20,7 +23,6 @@
- import java.util.Collections;
- import mail.SendMail;
- import model.subject.Subject;
--import model.user.*;
- 
- @MultipartConfig
- @WebServlet(name = "UserServlet", urlPatterns = {"/user", "/user/update", "/user/details", "/user/new"})
-@@ -44,6 +46,7 @@
-     }
- 
-     UserDAO userDAO = new UserDAO();
-+    SubjectDAO subjectDAO = new SubjectDAO();
-     AvatarHandler avatarHandler = new AvatarHandler();
-     private final int rowPerPage = 6;
- 
-@@ -56,13 +59,11 @@
-     protected void doGet(HttpServletRequest request, HttpServletResponse response)
-             throws ServletException, IOException {
-         doPost(request, response);
--
-     }
- 
-     @Override
-     protected void doPost(HttpServletRequest request, HttpServletResponse response)
-             throws ServletException, IOException {
--
-         String contextPath = request.getServletContext().getContextPath();
-         String loginPage = contextPath + "/login.jsp";
-         String homePage = contextPath + "/home";
-@@ -257,6 +258,15 @@
-         int currentPage = getPage(request, noOfPages);
-         list = getAllUsersOfPage(currentPage, list);
- 
-+        HttpSession session = request.getSession();
-+        if (session.getAttribute("successful") != null) {
-+            request.setAttribute("successful", session.getAttribute("successful"));
-+            session.removeAttribute("successful");
-+        } else if (session.getAttribute("err") != null) {
-+            request.setAttribute("err", session.getAttribute("err"));
-+            session.removeAttribute("err");
-+        }
-+
-         request.setAttribute("list", list);
-         request.setAttribute("roleList", getRoleList());
-         request.setAttribute("keyWord", keyWord);
-@@ -269,9 +279,23 @@
- 
-     private void changeUserStatus(HttpServletRequest request, HttpServletResponse response)
-             throws IOException {
-+        HttpSession session = request.getSession();
-         int userId = Integer.parseInt(request.getParameter("userId"));
--        System.out.println(userId);
--        userDAO.changeUserStatus(userId);
-+        String action;
-+        User user = userDAO.getUserById(userId);
-+        if (user.getStatus() == 0) {
-+            action = "Activated";
-+        } else {
-+            action = "Deactivated";
-+        }
-+        try {
-+            userDAO.changeUserStatus(userId);
-+            session.setAttribute("successful", action + " account "
-+                    + user.getEmail() + " successfully!");
-+        } catch (SQLException e) {
-+            session.setAttribute("err", action + " account "
-+                    + user.getEmail() + " failed!");
-+        }
-         response.sendRedirect("../user");
-     }
- 
-@@ -280,7 +304,7 @@
-         boolean successful = true;
-         int userId = Integer.parseInt(request.getParameter("userId"));
-         User user = userDAO.getUserById(userId);
--        String name = request.getParameter("name");
-+        String name = StringFormatter.removeDoubleSpaces(request.getParameter("name").trim());
-         if (name == null || name.isEmpty()) {
-             request.setAttribute("nameErr", "Name is blank!");
-             successful = false;
-@@ -314,6 +338,8 @@
-         }
- 
-         if (successful) {
-+            HttpSession session = request.getSession();
-+            session.setAttribute("successful", "Updated account " + user.getEmail() + " successfully!");
-             response.sendRedirect("../user");
-         } else {
-             request.setAttribute("user", user);
-@@ -341,6 +367,9 @@
-             HttpSession session = request.getSession();
-             session.setAttribute("userId", userId);
-             session.setAttribute("currentPage", "assignSubject");
-+            session.setAttribute("successful", "Assign subject "
-+                    + subjectDAO.getSubjectMatchId(subjectId).getCode()
-+                    + " successfully!");
-             response.sendRedirect(redirectPage);
-         } else {
-             request.setAttribute("user", userDAO.getUserById(userId));
-@@ -372,6 +401,9 @@
-             HttpSession session = request.getSession();
-             session.setAttribute("userId", userId);
-             session.setAttribute("currentPage", "assignSubject");
-+            session.setAttribute("successful", "Deleted subject "
-+                    + subjectDAO.getSubjectMatchId(subjectId).getCode()
-+                    + " successfully!");
-             response.sendRedirect(redirectPage);
-         } else {
-             request.setAttribute("user", userDAO.getUserById(userId));
-@@ -435,14 +467,21 @@
-         }
-         User user = userDAO.getUserById(userId);
- 
-+        request.setAttribute("successful", session.getAttribute("successful"));
-+        session.removeAttribute("successful");
-+
-         request.setAttribute("currentPage", session.getAttribute("currentPage"));
-         session.removeAttribute("currentPage");
- 
-         request.setAttribute("user", user);
-         request.setAttribute("roleList", getRoleList());
--        ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);
--        request.setAttribute("subjectList", subjectList);
--        request.setAttribute("unassignedSubjectList", getAllSubjectsNotInCharged(subjectList));
-+
-+        if (user.getRole() < 3) {
-+            ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);
-+            request.setAttribute("subjectList", subjectList);
-+            request.setAttribute("unassignedSubjectList", getAllSubjectsNotInCharged(subjectList));
-+        }
-+
-         request.getRequestDispatcher("/WEB-INF/views/user/userdetails.jsp").forward(request, response);
-     }
- 
-@@ -456,7 +495,7 @@
-             throws IOException, ServletException {
-         boolean successful = true;
-         User user = new User();
--        String name = request.getParameter("name");
-+        String name = StringFormatter.removeDoubleSpaces(request.getParameter("name").trim());
-         if (name == null || name.isEmpty()) {
-             request.setAttribute("nameErr", "Name is blank!");
-             successful = false;
-@@ -481,7 +520,7 @@
-             String workingFolder = "assets\\img";
-             user.setAvatar(avatarHandler.uploadAvatar(workingFolder, workingDir, filePart, avt));
-         }
--        String email = request.getParameter("email");
-+        String email = request.getParameter("email").trim();
-         user.setEmail(email);
-         if (email == null || email.isEmpty()) {
-             successful = false;
-@@ -518,6 +557,8 @@
-         }
- 
-         if (successful) {
-+            HttpSession session = request.getSession();
-+            session.setAttribute("successful", "Added account " + email + " successfully!");
-             response.sendRedirect("../user");
-         } else {
-             request.setAttribute("user", user);
-@@ -528,13 +569,18 @@
- 
-     private void newUser(HttpServletRequest request, HttpServletResponse response)
-             throws IOException, ServletException {
--        switch (request.getParameter("action")) {
--            case "goToPage":
--                goToPage(request, response);
--                break;
--            case "addUser":
--                addUser(request, response);
--                break;
-+        String action = request.getParameter("action");
-+        if (action != null) {
-+            switch (request.getParameter("action")) {
-+                case "addUser":
-+                    addUser(request, response);
-+                    break;
-+                default:
-+                    goToPage(request, response);
-+                    break;
-+            }
-+        } else {
-+            goToPage(request, response);
-         }
-     }
- 
-Index: src/java/controller/login/ActivationServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.login;\r\n\r\nimport dal.UserDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\npublic class ActivationServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet ActivationServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet ActivationServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        UserDAO userDAO = new UserDAO();\r\n        boolean successful = true;\r\n\r\n        String enteredCode = request.getParameter(\"code\");\r\n        String activationCode = request.getParameter(\"activationCode\");\r\n\r\n        if (enteredCode == null || enteredCode.isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Please enter your code!\");\r\n        } else {\r\n            if (!enteredCode.equals(activationCode)) {\r\n                successful = false;\r\n                request.setAttribute(\"err\", \"Incorrect code!\");\r\n            }\r\n        }\r\n\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        User user = userDAO.getUserById(userId);\r\n\r\n        if (successful) {\r\n            userDAO.changeUserStatus(userId);\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"user\", user);\r\n            response.sendRedirect(\"dashboard\");\r\n        } else {\r\n            request.setAttribute(\"code\", enteredCode);\r\n            request.setAttribute(\"activationCode\", activationCode);\r\n            request.setAttribute(\"user\", user);\r\n            request.getRequestDispatcher(\"enteractivationcode.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/login/ActivationServlet.java b/src/java/controller/login/ActivationServlet.java
---- a/src/java/controller/login/ActivationServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/login/ActivationServlet.java	(date 1721423113111)
-@@ -8,7 +8,8 @@
- import jakarta.servlet.http.HttpServletRequest;
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
--import model.user.User;
-+import java.sql.SQLException;
-+import model.User;
- 
- public class ActivationServlet extends HttpServlet {
- 
-@@ -57,8 +58,14 @@
-         int userId = Integer.parseInt(request.getParameter("userId"));
-         User user = userDAO.getUserById(userId);
- 
-+        try {
-+            userDAO.changeUserStatus(userId);
-+        } catch (SQLException e) {
-+            successful = false;
-+            request.setAttribute("err", "Fail to activate your account, please try again!");
-+        }
-+
-         if (successful) {
--            userDAO.changeUserStatus(userId);
-             HttpSession session = request.getSession();
-             session.setAttribute("user", user);
-             response.sendRedirect("dashboard");
-Index: src/java/controller/subject/SubjectDetailsServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.subject;\r\n\r\nimport dal.SubjectDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport java.sql.SQLException;\r\nimport model.subject.Subject;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"SubjectDetailsServlet\", urlPatterns = {\"/subjectdetails\"})\r\npublic class SubjectDetailsServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet SubjectDetailsServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet SubjectDetailsServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"viewsubjectdetails\": {\r\n                    if (request.getParameter(\"changestatus\") == null) {\r\n                        viewSubjectDetails(request, response);\r\n                    } else {\r\n                        activateOrDeactivate(request, response);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    void refreshSession(HttpServletRequest request) {\r\n        HttpSession session = request.getSession();\r\n        session.setAttribute(\"user\", session.getAttribute(\"user\"));\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"updatesubject\":\r\n                    updateSubject(request, response);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    void viewSubjectDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n        request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(id));\r\n        request.getRequestDispatcher(\"subjectdetails.jsp\").forward(request, response);\r\n    }\r\n\r\n    void activateOrDeactivate(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n        String status = request.getParameter(\"status\");\r\n\r\n        try {\r\n            subjectDAO.activateOrDeactivateSubject(id, status);\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        response.sendRedirect(\"subjectlist\");\r\n    }\r\n\r\n    void updateSubject(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String code = request.getParameter(\"code\");\r\n        String name = request.getParameter(\"name\");\r\n        String status = request.getParameter(\"status\");\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n        String err = \"\";\r\n        Subject s = new Subject();\r\n\r\n        if ((code.isEmpty()) || (name.isEmpty())) {\r\n            err = \"Input fields cannot be empty!\";\r\n        } else {\r\n            try {\r\n                s = new Subject(id, code, name, status);\r\n                subjectDAO.updateSubject(s);\r\n            } catch (SQLException e) {\r\n                err = \"Code existed!\";\r\n            }\r\n        }\r\n\r\n        if (err.isEmpty()) {\r\n            response.sendRedirect(\"subjectlist\");\r\n        } else {\r\n            request.setAttribute(\"err\", err);\r\n            request.setAttribute(\"subject\", s);\r\n            request.getRequestDispatcher(\"subjectdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/subject/SubjectDetailsServlet.java b/src/java/controller/subject/SubjectDetailsServlet.java
---- a/src/java/controller/subject/SubjectDetailsServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/subject/SubjectDetailsServlet.java	(date 1721423113113)
-@@ -11,7 +11,7 @@
- import jakarta.servlet.http.HttpSession;
- import java.sql.SQLException;
- import model.subject.Subject;
--import model.user.User;
-+import model.User;
- 
- @WebServlet(name = "SubjectDetailsServlet", urlPatterns = {"/subjectdetails"})
- public class SubjectDetailsServlet extends HttpServlet {
-Index: src/java/controller/LessonServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller;\r\n\r\nimport common.MaterialHandler;\r\nimport dal.LessonDAO;\r\nimport dal.MaterialDAO;\r\nimport dal.SubjectDAO;\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletContext;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.MultipartConfig;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport jakarta.servlet.http.Part;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport model.Lesson;\r\nimport model.user.User;\r\n\r\n@MultipartConfig\r\n@WebServlet(urlPatterns = {\"/lesson\", \"/lesson/new\", \"/lesson/insert\", \"/lesson/details\", \"/lesson/update\"})\r\npublic class LessonServlet extends HttpServlet {\r\n\r\n    private final int rowPerPage = 6;\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet LessonListServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet LessonListServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doPost(request, response);\r\n    }\r\n\r\n    private String getWorkingDir() {\r\n        String directory = getServletContext().getRealPath(\"\") + \"\";\r\n        return directory.replace(\"\\\\build\\\\web\\\\\", \"\\\\web\\\\\");\r\n    }\r\n\r\n    LessonDAO lessonDAO = new LessonDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n    MaterialDAO materialDAO = new MaterialDAO();\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n        String contextPath = request.getServletContext().getContextPath();\r\n        String loginPage = contextPath + \"/login.jsp\";\r\n        String homePage = contextPath + \"/home\";\r\n        UserDAO userDAO = new UserDAO();\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(loginPage);\r\n        } else {\r\n            User u = userDAO.getUserById(user.getId());\r\n            if (u != null && u.getEmail() != null) {\r\n                session.setAttribute(\"user\", u);\r\n                if (user.getRole() > 1) {\r\n                    response.sendRedirect(homePage);\r\n                } else {\r\n                    String action = request.getServletPath();\r\n                    switch (action) {\r\n                        case \"/lesson\":\r\n                            viewLessonList(request, response);\r\n                            break;\r\n                        case \"/lesson/new\":\r\n                            newLesson(request, response);\r\n                            break;\r\n                        case \"/lesson/insert\":\r\n                            insertNewLesson(request, response);\r\n                            break;\r\n                        case \"/lesson/details\":\r\n                            viewLessonDetails(request, response);\r\n                            break;\r\n                        case \"/lesson/update\":\r\n                            updateLesson(request, response);\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                response.sendRedirect(loginPage);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private ArrayList<Lesson> getAllLessonsOfSubject(ArrayList<Lesson> lessonList, int subjectId) {\r\n        ArrayList<Lesson> ret = new ArrayList<>();\r\n        for (Lesson lesson : lessonList) {\r\n            if (lesson.getSubjectId() == subjectId) {\r\n                ret.add(lesson);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private ArrayList<Lesson> getAllLessonsMatchKeyWord(ArrayList<Lesson> lessonList, String keyWord) {\r\n        keyWord = keyWord.toLowerCase();\r\n        ArrayList<Lesson> ret = new ArrayList<>();\r\n        for (Lesson lesson : lessonList) {\r\n            if (lesson.getName().toLowerCase().contains(keyWord)) {\r\n                ret.add(lesson);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private int getNoOfPages(ArrayList<Lesson> list) {\r\n        int length = list.size();\r\n        if (length == 0) {\r\n            return 1;\r\n        }\r\n        int noOfPages = length / rowPerPage;\r\n        if (length % rowPerPage == 0) {\r\n            return noOfPages;\r\n        }\r\n        return noOfPages + 1;\r\n    }\r\n\r\n    private int getPage(HttpServletRequest request, int noOfPages) {\r\n        String cur = request.getParameter(\"currentPage\");\r\n        if ((cur == null) || (cur.isEmpty())) {\r\n            return 1;\r\n        }\r\n\r\n        int currentPage = Integer.parseInt(cur);\r\n        switch (request.getParameter(\"pageAction\")) {\r\n            case \"firstPage\":\r\n                return 1;\r\n            case \"prevPage\": {\r\n                currentPage--;\r\n                if (currentPage < 1) {\r\n                    return 1;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"nextPage\": {\r\n                currentPage++;\r\n                if (currentPage > noOfPages) {\r\n                    return noOfPages;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"lastPage\":\r\n                return noOfPages;\r\n        }\r\n\r\n        String newpage = request.getParameter(\"newPage\");\r\n        if ((newpage != null) && (!newpage.isEmpty())) {\r\n            int newPage = Integer.parseInt(newpage);\r\n            return newPage;\r\n        }\r\n        return currentPage;\r\n\r\n    }\r\n\r\n    private ArrayList<Lesson> getAllLessonsOfPage(int page, ArrayList<Lesson> list) {\r\n        ArrayList<Lesson> ret = new ArrayList<>();\r\n        int start = rowPerPage * (page - 1) + 1;\r\n        int end = rowPerPage * page;\r\n        if (start < 1) {\r\n            start = 1;\r\n        }\r\n        if (end > list.size()) {\r\n            end = list.size();\r\n        }\r\n\r\n        for (int i = start - 1; i < end; i++) {\r\n            ret.add(list.get(i));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private ArrayList<String> getSortOptions() {\r\n        ArrayList<String> ret = new ArrayList<>();\r\n        ret.add(\"Order\");\r\n        ret.add(\"Name\");\r\n        ret.add(\"Status\");\r\n        ret.add(\"Subject\");\r\n        return ret;\r\n    }\r\n\r\n    private void viewLessonList(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        ArrayList<Lesson> lessonList = lessonDAO.getAllLessons();\r\n\r\n        String sid = request.getParameter(\"subjectId\");\r\n        if (sid != null && !sid.isEmpty() && !sid.equals(\"all\")) {\r\n            int subjectId = Integer.parseInt(sid);\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            lessonList = getAllLessonsOfSubject(lessonList, subjectId);\r\n        }\r\n\r\n        String sortBy = request.getParameter(\"sortBy\");\r\n        if (sortBy != null) {\r\n            switch (sortBy) {\r\n                case \"Name\":\r\n                    Collections.sort(lessonList, new Lesson.SortByName());\r\n                    break;\r\n                case \"Status\":\r\n                    Collections.sort(lessonList, new Lesson.SortByStatus());\r\n                    break;\r\n                case \"Subject\":\r\n                    Collections.sort(lessonList, new Lesson.SortBySubject());\r\n                    break;\r\n                default:\r\n                    Collections.sort(lessonList, new Lesson.SortByOrder());\r\n                    break;\r\n            }\r\n        } else {\r\n            Collections.sort(lessonList, new Lesson.SortByOrder());\r\n        }\r\n        request.setAttribute(\"sortBy\", sortBy);\r\n\r\n        String keyWord = request.getParameter(\"keyWord\");\r\n        if (keyWord != null && !keyWord.isEmpty()) {\r\n            lessonList = getAllLessonsMatchKeyWord(lessonList, keyWord);\r\n        }\r\n        request.setAttribute(\"keyWord\", keyWord);\r\n\r\n        int noOfPages = getNoOfPages(lessonList);\r\n        int currentPage = getPage(request, noOfPages);\r\n        lessonList = getAllLessonsOfPage(currentPage, lessonList);\r\n        request.setAttribute(\"currentPage\", currentPage);\r\n        request.setAttribute(\"noOfPages\", noOfPages);\r\n\r\n        request.setAttribute(\"latestOrder\", lessonDAO.getLatestOrder());\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n        request.setAttribute(\"sortOptions\", getSortOptions());\r\n        request.setAttribute(\"list\", lessonList);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessonlist.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void goToPage(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n        request.getRequestDispatcher(\"/WEB-INF/views/lesson/newlesson.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void newLesson(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"goToPage\":\r\n                goToPage(request, response);\r\n                break;\r\n            case \"addNew\":\r\n                insertNewLesson(request, response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void insertNewLesson(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String name = request.getParameter(\"name\");\r\n        int subjectId = Integer.parseInt(request.getParameter(\"subjectId\"));\r\n        boolean successful = true;\r\n\r\n        if (name.isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Input is empty!\");\r\n        } else if (name.length() > 100) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Lesson name can not exceed 100 characters!\");\r\n        }\r\n\r\n        if (successful) {\r\n            try {\r\n                lessonDAO.addLesson(name, subjectId);\r\n            } catch (SQLException e) {\r\n                successful = false;\r\n                request.setAttribute(\"err\", \"Lesson name already exist!\");\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../lesson\");\r\n        } else {\r\n            request.setAttribute(\"name\", name);\r\n            request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.getRequestDispatcher(\"/WEB-INF/views/lesson/newlesson.jsp\").forward(request, response);\r\n        }\r\n\r\n    }\r\n\r\n    private void viewLessonDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int lessonId;\r\n        HttpSession session = request.getSession();\r\n\r\n        if (session.getAttribute(\"lessonId\") != null) {\r\n            lessonId = (int) session.getAttribute(\"lessonId\");\r\n            session.removeAttribute(\"lessonId\");\r\n        } else {\r\n            lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        }\r\n        request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n\r\n        request.setAttribute(\"currentPage\", session.getAttribute(\"currentPage\"));\r\n        session.removeAttribute(\"currentPage\");\r\n        request.setAttribute(\"materialList\", materialDAO.getAllMaterialOfALesson(lessonId));\r\n        request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessondetails.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void changeLessonStatus(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException {\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        try {\r\n            lessonDAO.changeStatus(lessonId);\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        response.sendRedirect(\"../lesson\");\r\n    }\r\n\r\n    private void update(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        boolean successful = true;\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        Lesson lesson = lessonDAO.getLessonMatchId(lessonId);\r\n        String name = request.getParameter(\"name\");\r\n        lesson.setName(name);\r\n        if (name.isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Input is empty!\");\r\n        } else if (name.length() > 100) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Lesson name can not exceed 100 characters!\");\r\n        }\r\n\r\n        if (successful) {\r\n            try {\r\n                lessonDAO.updateLesson(lesson);\r\n            } catch (SQLException e) {\r\n                successful = false;\r\n                request.setAttribute(\"err\", \"Lesson name already exist!\");\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../lesson\");\r\n        } else {\r\n            request.setAttribute(\"lesson\", lesson);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void changeOrder(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        String action = request.getParameter(\"orderAction\");\r\n        try {\r\n            lessonDAO.changeOrder(lessonId, action);\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        response.sendRedirect(\"../lesson\");\r\n    }\r\n\r\n    private void insertMaterial(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        boolean successful = true;\r\n        Part filePart = request.getPart(\"file\");\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n\r\n        if (filePart == null || filePart.getSize() == 0) {\r\n            successful = false;\r\n            request.setAttribute(\"fileErr\", \"Please choose a file\");\r\n        } else {\r\n            String workingDir = getWorkingDir();\r\n            String workingFolder = \"assets\\\\material\";\r\n            try {\r\n                MaterialHandler.addMaterial(lessonId, workingFolder, workingDir, filePart);\r\n            } catch (SQLException | IOException e) {\r\n                successful = false;\r\n                request.setAttribute(\"fileErr\", \"Import material failed\");\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"lessonId\", lessonId);\r\n            session.setAttribute(\"currentPage\", \"material\");\r\n            String contextPath = request.getServletContext().getContextPath();\r\n            String detailsPage = contextPath + \"/lesson/details\";\r\n            response.sendRedirect(detailsPage);\r\n        } else {\r\n            request.setAttribute(\"currentPage\", \"material\");\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n            request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void removeMaterial(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        boolean successful = true;\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        int materialId = Integer.parseInt(request.getParameter(\"materialId\"));\r\n        String workingDir = getWorkingDir();\r\n\r\n        try {\r\n            MaterialHandler.removeMaterial(lessonId, materialId, workingDir);\r\n        } catch (SQLException e) {\r\n            successful = false;\r\n            request.setAttribute(\"fileErr\", \"Delete file failed!\");\r\n        }\r\n\r\n        if (successful) {\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"lessonId\", lessonId);\r\n            session.setAttribute(\"currentPage\", \"material\");\r\n            String contextPath = request.getServletContext().getContextPath();\r\n            String detailsPage = contextPath + \"/lesson/details\";\r\n            response.sendRedirect(detailsPage);\r\n        } else {\r\n            request.setAttribute(\"currentPage\", \"material\");\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n            request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void updateLesson(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"changeStatus\":\r\n                changeLessonStatus(request, response);\r\n                break;\r\n            case \"changeOrder\":\r\n                changeOrder(request, response);\r\n                break;\r\n            case \"updateLesson\":\r\n                update(request, response);\r\n                break;\r\n            case \"insertMaterial\":\r\n                insertMaterial(request, response);\r\n                break;\r\n            case \"removeMaterial\":\r\n                removeMaterial(request, response);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/LessonServlet.java b/src/java/controller/LessonServlet.java
---- a/src/java/controller/LessonServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/LessonServlet.java	(date 1721423113103)
-@@ -1,11 +1,11 @@
- package controller;
- 
- import common.MaterialHandler;
-+import common.StringFormatter;
- import dal.LessonDAO;
- import dal.MaterialDAO;
- import dal.SubjectDAO;
- import dal.UserDAO;
--import jakarta.servlet.ServletContext;
- import java.io.IOException;
- import java.io.PrintWriter;
- import jakarta.servlet.ServletException;
-@@ -20,7 +20,8 @@
- import java.util.ArrayList;
- import java.util.Collections;
- import model.Lesson;
--import model.user.User;
-+import model.User;
-+import model.subject.Subject;
- 
- @MultipartConfig
- @WebServlet(urlPatterns = {"/lesson", "/lesson/new", "/lesson/insert", "/lesson/details", "/lesson/update"})
-@@ -63,7 +64,6 @@
-     @Override
-     protected void doPost(HttpServletRequest request, HttpServletResponse response)
-             throws ServletException, IOException {
--
-         String contextPath = request.getServletContext().getContextPath();
-         String loginPage = contextPath + "/login.jsp";
-         String homePage = contextPath + "/home";
-@@ -199,7 +199,6 @@
-         ret.add("Order");
-         ret.add("Name");
-         ret.add("Status");
--        ret.add("Subject");
-         return ret;
-     }
- 
-@@ -207,12 +206,21 @@
-             throws ServletException, IOException {
-         ArrayList<Lesson> lessonList = lessonDAO.getAllLessons();
- 
--        String sid = request.getParameter("subjectId");
--        if (sid != null && !sid.isEmpty() && !sid.equals("all")) {
--            int subjectId = Integer.parseInt(sid);
--            request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
--            lessonList = getAllLessonsOfSubject(lessonList, subjectId);
--        }
-+        int subjectId;
-+        HttpSession session = request.getSession();
-+        if (session.getAttribute("subjectId") != null) {
-+            subjectId = (int) session.getAttribute("subjectId");
-+            session.removeAttribute("subjectId");
-+        } else {
-+            String sid = request.getParameter("subjectId");
-+            if (sid != null && !sid.isEmpty() && !sid.equals("all")) {
-+                subjectId = Integer.parseInt(sid);
-+            } else {
-+                subjectId = subjectDAO.getAllSubject().get(0).getId();
-+            }
-+        }
-+        request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-+        lessonList = getAllLessonsOfSubject(lessonList, subjectId);
- 
-         String sortBy = request.getParameter("sortBy");
-         if (sortBy != null) {
-@@ -223,15 +231,13 @@
-                 case "Status":
-                     Collections.sort(lessonList, new Lesson.SortByStatus());
-                     break;
--                case "Subject":
--                    Collections.sort(lessonList, new Lesson.SortBySubject());
--                    break;
-                 default:
-                     Collections.sort(lessonList, new Lesson.SortByOrder());
-                     break;
-             }
-         } else {
-             Collections.sort(lessonList, new Lesson.SortByOrder());
-+            sortBy = "Order";
-         }
-         request.setAttribute("sortBy", sortBy);
- 
-@@ -247,7 +253,13 @@
-         request.setAttribute("currentPage", currentPage);
-         request.setAttribute("noOfPages", noOfPages);
- 
--        request.setAttribute("latestOrder", lessonDAO.getLatestOrder());
-+        request.setAttribute("successful", session.getAttribute("successful"));
-+        session.removeAttribute("successful");
-+
-+        request.setAttribute("err", session.getAttribute("err"));
-+        session.removeAttribute("err");
-+
-+        request.setAttribute("latestOrder", lessonDAO.getLatestOrder(subjectId));
-         request.setAttribute("subjectList", subjectDAO.getAllSubject());
-         request.setAttribute("sortOptions", getSortOptions());
-         request.setAttribute("list", lessonList);
-@@ -257,24 +269,32 @@
-     private void goToPage(HttpServletRequest request, HttpServletResponse response)
-             throws ServletException, IOException {
-         request.setAttribute("subjectList", subjectDAO.getAllSubject());
-+        request.setAttribute("subject",
-+                subjectDAO.getSubjectMatchId(Integer.parseInt(request.getParameter("subjectId"))));
-         request.getRequestDispatcher("/WEB-INF/views/lesson/newlesson.jsp").forward(request, response);
-     }
- 
-     private void newLesson(HttpServletRequest request, HttpServletResponse response)
-             throws ServletException, IOException {
--        switch (request.getParameter("action")) {
--            case "goToPage":
--                goToPage(request, response);
--                break;
--            case "addNew":
--                insertNewLesson(request, response);
--                break;
-+        String action = request.getParameter("action");
-+        if (action != null) {
-+            switch (request.getParameter("action")) {
-+                case "addNew":
-+                    insertNewLesson(request, response);
-+                    break;
-+                default:
-+                    goToPage(request, response);
-+                    break;
-+            }
-+        } else {
-+            goToPage(request, response);
-         }
-     }
- 
-     private void insertNewLesson(HttpServletRequest request, HttpServletResponse response)
-             throws ServletException, IOException {
-         String name = request.getParameter("name");
-+        name = StringFormatter.removeDoubleSpaces(name.trim());
-         int subjectId = Integer.parseInt(request.getParameter("subjectId"));
-         boolean successful = true;
- 
-@@ -287,15 +307,23 @@
-         }
- 
-         if (successful) {
--            try {
--                lessonDAO.addLesson(name, subjectId);
--            } catch (SQLException e) {
--                successful = false;
--                request.setAttribute("err", "Lesson name already exist!");
-+            if (lessonDAO.isLessonExist(name, subjectId)) {
-+                successful = false;
-+                request.setAttribute("err", "Lesson name already exist!");
-+            } else {
-+                try {
-+                    lessonDAO.addLesson(name, subjectId);
-+                } catch (SQLException e) {
-+                    successful = false;
-+                    request.setAttribute("err", "Adding lesson failed!");
-+                }
-             }
-         }
- 
-         if (successful) {
-+            HttpSession session = request.getSession();
-+            session.setAttribute("subjectId", subjectId);
-+            session.setAttribute("successful", "Added lesson " + name + " successfully!");
-             response.sendRedirect("../lesson");
-         } else {
-             request.setAttribute("name", name);
-@@ -319,6 +347,9 @@
-         }
-         request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
- 
-+        request.setAttribute("fileSuccessful", session.getAttribute("fileSuccessful"));
-+        session.removeAttribute("fileSuccessful");
-+
-         request.setAttribute("currentPage", session.getAttribute("currentPage"));
-         session.removeAttribute("currentPage");
-         request.setAttribute("materialList", materialDAO.getAllMaterialOfALesson(lessonId));
-@@ -327,11 +358,20 @@
- 
-     private void changeLessonStatus(HttpServletRequest request, HttpServletResponse response)
-             throws IOException {
-+        HttpSession session = request.getSession();
-         int lessonId = Integer.parseInt(request.getParameter("lessonId"));
-+        Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
-+        String action;
-+        if (lesson.isStatus()) {
-+            action = "Deactivated";
-+        } else {
-+            action = "Activated";
-+        }
-         try {
-             lessonDAO.changeStatus(lessonId);
-+            session.setAttribute("successful", action + " lesson " + lesson.getName() + " successfully!");
-         } catch (SQLException e) {
--            System.out.println(e.getMessage());
-+            session.setAttribute("err", action + " lesson " + lesson.getName() + " failed!");
-         }
-         response.sendRedirect("../lesson");
-     }
-@@ -342,25 +382,35 @@
-         int lessonId = Integer.parseInt(request.getParameter("lessonId"));
-         Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
-         String name = request.getParameter("name");
--        lesson.setName(name);
--        if (name.isEmpty()) {
--            successful = false;
--            request.setAttribute("err", "Input is empty!");
--        } else if (name.length() > 100) {
--            successful = false;
--            request.setAttribute("err", "Lesson name can not exceed 100 characters!");
--        }
-+        name = StringFormatter.removeDoubleSpaces(name.trim());
-+        if (!name.equals(lesson.getName())) {
-+            lesson.setName(name);
-+            if (name.isEmpty()) {
-+                successful = false;
-+                request.setAttribute("err", "Input is empty!");
-+            } else if (name.length() > 100) {
-+                successful = false;
-+                request.setAttribute("err", "Lesson name can not exceed 100 characters!");
-+            }
- 
--        if (successful) {
--            try {
--                lessonDAO.updateLesson(lesson);
--            } catch (SQLException e) {
--                successful = false;
--                request.setAttribute("err", "Lesson name already exist!");
-+            if (successful) {
-+                if (lessonDAO.isLessonExist(name, lesson.getSubjectId())) {
-+                    successful = false;
-+                    request.setAttribute("err", "Lesson name already exist!");
-+                } else {
-+                    try {
-+                        lessonDAO.updateLesson(lesson);
-+                    } catch (SQLException e) {
-+                        successful = false;
-+                        request.setAttribute("err", "Update lesson failed!");
-+                    }
-+                }
-             }
-         }
- 
-         if (successful) {
-+            HttpSession session = request.getSession();
-+            session.setAttribute("successful", "Updated lesson successfully!");
-             response.sendRedirect("../lesson");
-         } else {
-             request.setAttribute("lesson", lesson);
-@@ -370,13 +420,22 @@
- 
-     private void changeOrder(HttpServletRequest request, HttpServletResponse response)
-             throws ServletException, IOException {
-+        HttpSession session = request.getSession();
-         int lessonId = Integer.parseInt(request.getParameter("lessonId"));
-         String action = request.getParameter("orderAction");
-         try {
-             lessonDAO.changeOrder(lessonId, action);
-+            session.setAttribute("successful", "Move lesson "
-+                    + lessonDAO.getLessonMatchId(lessonId).getName()
-+                    + " " + action + " successfully!");
-         } catch (SQLException e) {
--            System.out.println(e.getMessage());
-+            session.setAttribute("err", "Move lesson "
-+                    + lessonDAO.getLessonMatchId(lessonId).getName()
-+                    + " " + action + " failed!");
-         }
-+
-+        session.setAttribute("subjectId",
-+                lessonDAO.getLessonMatchId(lessonId).getSubjectId());
-         response.sendRedirect("../lesson");
-     }
- 
-@@ -404,6 +463,7 @@
-             HttpSession session = request.getSession();
-             session.setAttribute("lessonId", lessonId);
-             session.setAttribute("currentPage", "material");
-+            session.setAttribute("fileSuccessful", "Added material successfully!");
-             String contextPath = request.getServletContext().getContextPath();
-             String detailsPage = contextPath + "/lesson/details";
-             response.sendRedirect(detailsPage);
-@@ -432,6 +492,7 @@
-             HttpSession session = request.getSession();
-             session.setAttribute("lessonId", lessonId);
-             session.setAttribute("currentPage", "material");
-+            session.setAttribute("fileSuccessful", "Remove material successfully!");
-             String contextPath = request.getServletContext().getContextPath();
-             String detailsPage = contextPath + "/lesson/details";
-             response.sendRedirect(detailsPage);
-Index: src/java/controller/course/CourseEnroll.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.course;\r\n\r\nimport dal.CourseDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.course.CourseDetail;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\npublic class CourseEnroll extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try {\r\n            int courseId = Integer.parseInt(request.getParameter(\"courseId\"));\r\n            CourseDetail courseDetail = new CourseDetail();\r\n\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n\r\n            if (user == null) {\r\n                // If no user is logged in, redirect to the login page\r\n                session.setAttribute(\"message\", \"Please login\");\r\n                response.sendRedirect(\"login.jsp\");\r\n                return;\r\n            }\r\n\r\n            CourseDAO courseDAO = new CourseDAO();\r\n            courseDetail = courseDAO.getCourseDetailById(courseId);\r\n            if (courseDAO.isUserEnrolledInCourse(courseDetail.getId(), user.getEmail())) {\r\n                response.sendRedirect(request.getContextPath() + \"/my-course?classId=\" + courseDetail.getId());\r\n                return;\r\n\r\n            }\r\n\r\n            boolean enrolled = courseDAO.enrollUserInCourse(user.getEmail(), courseDetail.getClassId(), courseDetail.getSubjectId());\r\n\r\n            if (enrolled) {\r\n                response.sendRedirect(\"course\");\r\n            } else {\r\n                // Handle enrollment failure, if needed\r\n                // For example, set an error message and redirect\r\n                session.setAttribute(\"message\", \"Enrollment failed. Please try again.\");\r\n                response.sendRedirect(\"course.jsp\"); // Redirect to course listing page\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Handles course enrollment for students\";\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/course/CourseEnroll.java b/src/java/controller/course/CourseEnroll.java
---- a/src/java/controller/course/CourseEnroll.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/course/CourseEnroll.java	(date 1721423113108)
-@@ -7,7 +7,7 @@
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
- import model.course.CourseDetail;
--import model.user.User;
-+import model.User;
- 
- import java.io.IOException;
- import java.sql.SQLException;
-Index: web/WEB-INF/views/user/userlist.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>User list</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"assets/js/config.js\"></script>\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n                            <div>\r\n                                <form action=\"${pageContext.request.contextPath}/user/new\">\r\n                                    <input type=\"hidden\" name=\"action\" value=\"goToPage\"/>\r\n                                    <button class=\"btn btn-primary px-3\" \r\n                                            type=\"submit\">\r\n                                        <i class=\"fa fa-plus-square mr-3\"></i>\r\n                                        New user\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">User /</span> User list</h4>\r\n\r\n                            <form id=\"searchBar\" class=\"d-flex\" action=\"${pageContext.request.contextPath}/user\">\r\n                                <div class=\"input-group mr-3\" style=\"overflow: auto;\">\r\n                                    <label for=\"roleSelect\">Role: </label>\r\n                                    <select style=\"height: 38px;\" name=\"roleId\" id=\"roleSelect\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('roleSelect').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;document.getElementById('roleSelect').style.height = '38px';\">\r\n                                        <c:if test=\"${requestScope.roleId == null || requestScope.roleId == 0}\">\r\n                                            <option value=\"0\" selected>All Roles</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.roleId != null && requestScope.roleId != 0}\">\r\n                                            <option value=\"0\">All Roles</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.roleList}\" var=\"role\">\r\n                                            <c:if test=\"${requestScope.roleId == role.id}\">\r\n                                                <option value=\"${role.id}\" selected>${role.name}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.roleId != role.id}\">\r\n                                                <option value=\"${role.id}\">${role.name}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <label for=\"sortBy\">Sort by </label>\r\n                                    <select style=\"height: 38px;\" name=\"sortBy\" id=\"sortBy\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('sortBy').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;document.getElementById('sortBy').style.height = '38px';\">\r\n                                        <c:if test=\"${requestScope.sortBy == null || requestScope.sortBy.isEmpty()\r\n                                                      || requestScope.sortBy.equals('None')}\">\r\n                                              <option value=\"None\" selected>None</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.sortBy != null && !requestScope.sortBy.isEmpty()\r\n                                                      && !requestScope.sortBy.equals('None')}\">\r\n                                              <option value=\"None\">None</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.sortOptions}\" var=\"option\">\r\n                                            <c:if test=\"${requestScope.sortBy.equals(option)}\">\r\n                                                <option value=\"${option}\" selected>${option}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${!requestScope.sortBy.equals(option)}\">\r\n                                                <option value=\"${option}\">${option}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <input type=\"text\" name=\"keyWord\" class=\"form-control\" placeholder=\"Search\" value=\"${requestScope.keyWord}\"\r\n                                           style=\"float: right; width: 10px;\"/>\r\n                                    <button style=\"height: 38px; float: right;\" \r\n                                            class=\"btn btn-outline-primary mr-2\" type=\"submit\">Search</button>\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                            <!-- Basic Bootstrap Table -->\r\n                            <div class=\"card\">\r\n                                <h5 class=\"card-header\">Question list</h5>\r\n                                <div class=\"table-responsive text-nowrap\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Name</th>\r\n                                                <th>Email</th>\r\n                                                <th>Role</th>\r\n                                                <th>Status</th>\r\n                                                <th>Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody class=\"table-border-bottom-0\">\r\n                                            <c:forEach items=\"${requestScope.list}\" var=\"user\">\r\n                                                <tr>\r\n                                                    <c:if test=\"${user.status == 1}\">\r\n                                                        <td style=\"color: #696cff;\">${user.id}</td>\r\n                                                        <td style=\"color: #696cff;\">${user.name}\r\n                                                            <img src=\"${pageContext.request.scheme}://${pageContext.request.serverName}:${pageContext.request.serverPort}${pageContext.request.contextPath}/${user.avatar}\" \r\n                                                                 alt=\"Avatar\" class=\"rounded-circle\" \r\n                                                                 style=\"height: 20px; width: 20px;\"/></td>\r\n                                                        <td style=\"color: #696cff;\">${user.email}</td>\r\n                                                        <td style=\"color: #696cff;\">${user.r.name}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-success\">Active</span>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <form action=\"${pageContext.request.contextPath}/user/details\" method=\"post\">\r\n                                                                <input type=\"hidden\" name=\"userId\" value=\"${user.id}\"/>\r\n                                                                <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-primary mr-1\"\r\n                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\">\r\n                                                                    <i class=\"bx bx-edit\"></i>\r\n                                                                </button>\r\n                                                            </form>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left\" type=\"button\" class=\"btn btn-icon btn-outline-danger\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Deactivate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${user.id}, 'Deactivate', '${user.email}')\">\r\n                                                                <i class=\"bx bx-x\"></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${user.status == 0}\">\r\n                                                        <td style=\"color: gray;\">${user.id}</td>\r\n                                                        <td style=\"color: gray;\">${user.name}</td>\r\n                                                        <td style=\"color: gray;\">${user.email}</td>\r\n                                                        <td style=\"color: gray;\">${user.r.name}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-danger\">Inactive</span>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-secondary mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\" disabled>\r\n                                                                <i class=\"bx bx-edit\"></i>\r\n                                                            </button>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left\" type=\"button\" class=\"btn btn-icon btn-outline-success\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Activate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${user.id}, 'Activate', '${user.email}')\">\r\n                                                                <i class=\"bx bx-check\"></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${user.status == 2}\">\r\n                                                        <td class=\"text-warning\">${user.id}</td>\r\n                                                        <td class=\"text-warning\">${user.name}</td>\r\n                                                        <td class=\"text-warning\">${user.email}</td>\r\n                                                        <td class=\"text-warning\">${user.r.name}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-info\">Unverified</span>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <form action=\"${pageContext.request.contextPath}/user/details\" method=\"post\">\r\n                                                                <input type=\"hidden\" name=\"userId\" value=\"${user.id}\"/>\r\n                                                                <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-primary mr-1\"\r\n                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\">\r\n                                                                    <i class=\"bx bx-edit\"></i>\r\n                                                                </button>\r\n                                                            </form>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                </tr>\r\n                                            </c:forEach>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n                                        <form action=\"${pageContext.request.contextPath}/user/update\">\r\n                                            <input type=\"hidden\" name=\"userId\" id=\"userId\"/>\r\n                                            <input type=\"hidden\" name=\"action\" value=\"changeStatus\"/>\r\n                                            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"modalCenterTitle\"></h5>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            class=\"btn-close\"\r\n                                                            data-bs-dismiss=\"modal\"\r\n                                                            aria-label=\"Close\"></button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        <h6 id=\"modalBodyText\"></h5>\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                                            No\r\n                                                        </button>\r\n                                                        <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!--/ Basic Bootstrap Table -->\r\n\r\n\r\n                            </div>\r\n\r\n                            <!-- / Content -->\r\n\r\n                            <form action=\"${pageContext.request.contextPath}/user\">\r\n                                <input type=\"hidden\" name=\"roleId\" value=\"${requestScope.roleId}\"/>\r\n                                <input type=\"hidden\" name=\"sortBy\" value=\"${requestScope.sortBy}\"/>\r\n                                <input type=\"hidden\" name=\"keyWord\" value=\"${requestScope.keyWord}\"/>\r\n                                <input type=\"hidden\" name=\"pageAction\" id=\"pageAction\"/>\r\n                                <input type=\"hidden\" name=\"newPage\" id=\"newPage\"/>\r\n                                <input type=\"hidden\" name=\"currentPage\" value=\"${requestScope.currentPage}\"/>\r\n                                <div class=\"card mb-4\">\r\n                                    <!-- Basic Pagination -->\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-lg-6\">\r\n                                                <small class=\"text-light fw-medium\">Basic</small>\r\n                                                <div class=\"demo-inline-spacing\">\r\n                                                    <!-- Basic Pagination -->\r\n                                                    <nav aria-label=\"Page navigation\">\r\n                                                        <ul class=\"pagination\">\r\n                                                            <li class=\"page-item first\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'firstPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-left\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            <li class=\"page-item prev\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'prevPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevron-left\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            <c:forEach begin=\"1\" end=\"${requestScope.noOfPages}\" var=\"page\">\r\n                                                                <c:if test=\"${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||\r\n                                                                              (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}\">\r\n                                                                    <c:if test=\"${page == requestScope.currentPage}\">\r\n                                                                        <li class=\"page-item active\">\r\n                                                                            <button class=\"page-link\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${page != requestScope.currentPage}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <input type=\"hidden\" name=\"page\" value=\"${page}\"/>\r\n                                                                            <button class=\"page-link\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${(page == 2) && (page < requestScope.currentPage - 1)}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <button class=\"page-link\">...</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <button class=\"page-link\">...</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                </c:if>\r\n                                                            </c:forEach>\r\n                                                            <li class=\"page-item next\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'nextPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n\r\n                                                            <li class=\"page-item last\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'lastPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </nav>\r\n                                                    <!--/ Basic Pagination -->\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                        </div>\r\n                        <!-- Content wrapper -->\r\n\r\n\r\n                    </div>\r\n                    <!-- / Layout page -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <script>\r\n            function assignValue(userId, action, email) {\r\n                document.getElementById(\"userId\").value = userId;\r\n                document.getElementById(\"modalCenterTitle\").innerHTML = action;\r\n                let text1 = \"Are you sure you want to \";\r\n                let text2 = \" user \";\r\n                let text3 = \" ?\";\r\n                let s = text1 + action.toLowerCase() + text2 + email + text3;\r\n                document.getElementById(\"modalBodyText\").innerHTML = s;\r\n            }\r\n        </script>\r\n\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js assets/vendor/js/core.js -->\r\n\r\n        <script src=\"assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n\r\n        <script src=\"js/sider.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/user/userlist.jsp b/web/WEB-INF/views/user/userlist.jsp
---- a/web/WEB-INF/views/user/userlist.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/user/userlist.jsp	(date 1721423113121)
-@@ -85,7 +85,6 @@
- 
-                             <div>
-                                 <form action="${pageContext.request.contextPath}/user/new">
--                                    <input type="hidden" name="action" value="goToPage"/>
-                                     <button class="btn btn-primary px-3" 
-                                             type="submit">
-                                         <i class="fa fa-plus-square mr-3"></i>
-@@ -154,9 +153,18 @@
- 
-                             </form>
- 
-+                            <div class="row mb-3">
-+                                <c:if test="${requestScope.successful != null && !requestScope.successful.isEmpty()}">
-+                                    <h6 class="text-success">${requestScope.successful}</h6>
-+                                </c:if>
-+                                <c:if test="${requestScope.err != null && !requestScope.err.isEmpty()}">
-+                                    <h6 class="text-danger">${requestScope.err}</h6>
-+                                </c:if>
-+                            </div>
-+
-                             <!-- Basic Bootstrap Table -->
-                             <div class="card">
--                                <h5 class="card-header">Question list</h5>
-+                                <h5 class="card-header">User list</h5>
-                                 <div class="table-responsive text-nowrap">
-                                     <table class="table">
-                                         <thead>
-@@ -174,10 +182,12 @@
-                                                 <tr>
-                                                     <c:if test="${user.status == 1}">
-                                                         <td style="color: #696cff;">${user.id}</td>
--                                                        <td style="color: #696cff;">${user.name}
-+                                                        <td style="color: #696cff;">
-                                                             <img src="${pageContext.request.scheme}://${pageContext.request.serverName}:${pageContext.request.serverPort}${pageContext.request.contextPath}/${user.avatar}" 
-                                                                  alt="Avatar" class="rounded-circle" 
--                                                                 style="height: 20px; width: 20px;"/></td>
-+                                                                 style="height: 20px; width: 20px;"/>
-+                                                            ${user.name}
-+                                                        </td>
-                                                         <td style="color: #696cff;">${user.email}</td>
-                                                         <td style="color: #696cff;">${user.r.name}</td>
-                                                         <td>
-@@ -307,9 +317,10 @@
-                                                                     <i class="tf-icon bx bx-chevron-left"></i>
-                                                                 </button>
-                                                             </li>
-+                                                            <c:set var="noOfPages" value="${requestScope.noOfPages}"></c:set>
-                                                             <c:forEach begin="1" end="${requestScope.noOfPages}" var="page">
--                                                                <c:if test="${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||
--                                                                              (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}">
-+                                                                <c:if test="${(page == 1) || (page == 2) || (Math.abs(page - requestScope.currentPage) <= 1)
-+                                                                              || (page == noOfPages) || (page == noOfPages - 1)}">
-                                                                     <c:if test="${page == requestScope.currentPage}">
-                                                                         <li class="page-item active">
-                                                                             <button class="page-link"
-@@ -325,16 +336,17 @@
-                                                                                     onclick="document.getElementById('newPage').value = ${page}">${page}</button>
-                                                                         </li>
-                                                                     </c:if>
--                                                                    <c:if test="${(page == 2) && (page < requestScope.currentPage - 1)}">
--                                                                        <li class="page-item">
--                                                                            <button class="page-link">...</button>
--                                                                        </li>
--                                                                    </c:if>
--                                                                    <c:if test="${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}">
--                                                                        <li class="page-item">
--                                                                            <button class="page-link">...</button>
--                                                                        </li>
--                                                                    </c:if>
-+                                                                </c:if>
-+                                                                <c:set var="currentPage" value="${requestScope.currentPage}"></c:set>
-+                                                                <c:if test="${(page == currentPage - 2) && (page > 2)}">
-+                                                                    <li class="page-item">
-+                                                                        <button class="page-link">...</button>
-+                                                                    </li>
-+                                                                </c:if>
-+                                                                <c:if test="${(page == currentPage + 2) && (page < noOfPages - 1)}">
-+                                                                    <li class="page-item">
-+                                                                        <button class="page-link">...</button>
-+                                                                    </li>
-                                                                 </c:if>
-                                                             </c:forEach>
-                                                             <li class="page-item next">
-Index: web/WEB-INF/views/user/userdetails.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>User details</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n        <script>\r\n            function setActiveTab(currentPage) {\r\n                if (currentPage === 'enterData' || currentPage === null || currentPage === '') {\r\n                    document.getElementById(\"navs-pills-enter-data\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = true;\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonAssignSubject\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonAssignSubject\").ariaSelected = false;\r\n                } else {\r\n                    document.getElementById(\"navs-pills-assign-subject\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonAssignSubject\").ariaSelected = true;\r\n                    document.getElementById(\"buttonAssignSubject\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = false;\r\n                }\r\n            }\r\n            function getActiveTab() {\r\n                if (document.getElementById(\"buttonAssignSubject\").className === 'nav-link active') {\r\n                    return \"assignSubject\";\r\n                } else {\r\n                    return \"enterData\";\r\n                }\r\n            }\r\n            function setActiveTabForRefresh() {\r\n                document.getElementById('currentPage').value = getActiveTab();\r\n            }\r\n        </script>\r\n\r\n    </head>\r\n\r\n    <body onload=\"setActiveTab('${requestScope.currentPage}');\">\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">User /</span> User details</h4>\r\n                            <form action=\"${pageContext.request.contextPath}/user/update\" method=\"post\"\r\n                                  enctype=\"multipart/form-data\">\r\n                                <input type=\"hidden\" name=\"userId\" value=\"${requestScope.user.id}\"/>\r\n                                <input type=\"hidden\" name=\"action\" id=\"action\"/>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"nav-align-top mb-4\">\r\n                                        <ul class=\"nav nav-pills mb-3\" role=\"tablist\">\r\n                                            <li class=\"nav-item\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    id=\"buttonEnterData\"\r\n                                                    role=\"tab\"\r\n                                                    data-bs-toggle=\"tab\"\r\n                                                    data-bs-target=\"#navs-pills-enter-data\"\r\n                                                    aria-controls=\"navs-pills-enter-data\">\r\n                                                    Update user details\r\n                                                </button>\r\n                                            </li>\r\n                                            <c:if test=\"${requestScope.user.role < 3}\">\r\n                                                <li class=\"nav-item\">\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        id=\"buttonAssignSubject\"\r\n                                                        role=\"tab\"\r\n                                                        data-bs-toggle=\"tab\"\r\n                                                        data-bs-target=\"#navs-pills-assign-subject\"\r\n                                                        aria-controls=\"navs-pills-assign-subject\">\r\n                                                        Assign subjects\r\n                                                    </button>\r\n                                                </li>\r\n                                            </c:if>\r\n                                        </ul>\r\n                                        <div class=\"tab-content\" style=\"width: 100%;\">\r\n                                            <div class=\"tab-pane fade\" id=\"navs-pills-enter-data\" role=\"tabpanel\">\r\n                                                <div class=\"card mb-4\">\r\n                                                    <h5 class=\"card-header mb-3\">User Details for ${requestScope.user.name}</h5>\r\n                                                    <!-- Account -->\r\n                                                    <div class=\"card-body\">\r\n                                                        <div class=\"d-flex align-items-start align-items-sm-center gap-4\">\r\n                                                            <img\r\n                                                                src=\"../${requestScope.user.avatar}\"\r\n                                                                alt=\"user-avatar\"\r\n                                                                class=\"d-block rounded\"\r\n                                                                height=\"100\"\r\n                                                                width=\"100\"\r\n                                                                id=\"uploadedAvatar\"/>\r\n                                                            <div class=\"button-wrapper\">\r\n                                                                <label for=\"upload\" class=\"btn btn-primary me-2 mb-4\" tabindex=\"0\">\r\n                                                                    <span class=\"d-none d-sm-block\">Upload new photo</span>\r\n                                                                    <i class=\"bx bx-upload d-block d-sm-none\"></i>\r\n                                                                    <input\r\n                                                                        type=\"file\"\r\n                                                                        id=\"upload\"\r\n                                                                        class=\"account-file-input\"\r\n                                                                        accept=\"image/png, image/jpeg\"\r\n                                                                        hidden\r\n                                                                        name=\"newAvatar\"/>\r\n                                                                </label>\r\n                                                                <button type=\"button\" class=\"btn btn-outline-secondary account-image-reset mb-4 me-2\">\r\n                                                                    <i class=\"bx bx-reset d-block d-sm-none\"></i>\r\n                                                                    <span class=\"d-none d-sm-block\">Reset</span>\r\n                                                                </button>\r\n\r\n                                                                <p class=\"text-muted mb-0\">Allowed JPG, GIF or PNG. Max size of 800K</p>\r\n                                                                <c:if test=\"${requestScope.avtErr != null && !requestScope.avtErr.isEmpty()}\">\r\n                                                                    <div>\r\n                                                                        <h6 style=\"color: red;\">${requestScope.avtErr}</h6>\r\n                                                                    </div>\r\n                                                                </c:if>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr class=\"my-0\" />\r\n                                                    <div class=\"card-body\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"mb-3 col-md-6\">\r\n                                                                <label for=\"name\" class=\"form-label\">Name</label>\r\n                                                                <input\r\n                                                                    class=\"form-control\"\r\n                                                                    type=\"text\"\r\n                                                                    id=\"name\"\r\n                                                                    name=\"name\"\r\n                                                                    value=\"${requestScope.user.name}\"\r\n                                                                    autofocus />\r\n                                                                <c:if test=\"${requestScope.nameErr != null && !requestScope.nameErr.isEmpty()}\">\r\n                                                                    <h6 style=\"color: red;\">${requestScope.nameErr}</h6>\r\n                                                                </c:if>\r\n                                                            </div>\r\n                                                            <div class=\"mb-3 col-md-6\">\r\n                                                                <label for=\"email\" class=\"form-label\">E-mail</label>\r\n                                                                <input\r\n                                                                    class=\"form-control\"\r\n                                                                    type=\"text\"\r\n                                                                    id=\"email\"\r\n                                                                    name=\"email\"\r\n                                                                    value=\"${requestScope.user.email}\"\r\n                                                                    placeholder=\"john.doe@example.com\" \r\n                                                                    readonly/>\r\n                                                            </div>\r\n                                                            <div class=\"mb-3 col-md-6\">\r\n                                                                <label for=\"roleSelect\" class=\"form-label\">Role</label>\r\n                                                                <select id=\"roleSelect\" class=\"select2 form-select\" name=\"roleId\">\r\n                                                                    <c:forEach items=\"${requestScope.roleList}\" var=\"role\">\r\n                                                                        <c:if test=\"${requestScope.user.role == role.id}\">\r\n                                                                            <option value=\"${role.id}\" selected>${role.name}</option>\r\n                                                                        </c:if>\r\n                                                                        <c:if test=\"${requestScope.user.role != role.id}\">\r\n                                                                            <option value=\"${role.id}\">${role.name}</option>\r\n                                                                        </c:if>\r\n                                                                    </c:forEach>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class=\"mb-3 col-md-6\">\r\n                                                                <label class=\"form-label\" for=\"status\">Status</label>\r\n                                                                <div class=\"form-control\" id=\"status\">\r\n                                                                    <c:if test=\"${requestScope.user.status == 1}\">\r\n                                                                        <span class=\"badge rounded-pill bg-success\" >Active</span>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${requestScope.user.status == 0}\">\r\n                                                                        <span class=\"badge rounded-pill bg-danger\" >Inactive</span>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${requestScope.user.status == 2}\">\r\n                                                                        <span class=\"badge rounded-pill bg-info\" >Unverified</span>\r\n                                                                    </c:if>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"mt-2\">\r\n                                                            <button type=\"submit\" class=\"btn btn-primary me-2\"\r\n                                                                    onclick=\"document.getElementById('action').value = 'saveChanges'\">Save changes</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!-- /Account -->\r\n                                                </div>\r\n                                            </div>\r\n                                            <c:if test=\"${requestScope.user.role < 3}\">\r\n                                                <div class=\"tab-pane fade\" id=\"navs-pills-assign-subject\" role=\"tabpanel\">\r\n                                                    <div class=\"input-group mr-3\" style=\"overflow: auto;\">\r\n                                                        <label for=\"subjectId\">Subject: </label>\r\n                                                        <select style=\"height: 38px;\" name=\"subjectId\" id=\"subjectId\" class=\"mr-3 ml-3\" \r\n                                                                onmousedown=\"if (this.options.length > 5) {\r\n                                                                            this.size = 5;\r\n                                                                            document.getElementById('sortBy').style.height = '115px';\r\n                                                                        }\"  \r\n                                                                onblur=\"this.size = 0;\r\n                                                                        document.getElementById('sortBy').style.height = '38px';\">\r\n                                                            <c:forEach items=\"${requestScope.unassignedSubjectList}\" var=\"subject\">\r\n                                                                <c:if test=\"${requestScope.subject.id == subject.id}\">\r\n                                                                    <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                                                </c:if>\r\n                                                                <c:if test=\"${requestScope.subject.id != subject.id}\">\r\n                                                                    <option value=\"${subject.id}\">${subject.code}</option>\r\n                                                                </c:if>\r\n                                                            </c:forEach>\r\n                                                        </select>\r\n                                                        <button style=\"height: 38px; float: right;\" \r\n                                                                class=\"btn btn-outline-primary mr-2\" type=\"submit\"\r\n                                                                onclick=\"document.getElementById('action').value = 'assignSubject';\">Assign subject</button>\r\n                                                        <c:if test=\"${requestScope.err != null && !requestScope.err.isEmpty()}\">\r\n                                                            <h6 style=\"color: red;\">${requestScope.err}</h6>\r\n                                                        </c:if>\r\n                                                    </div>\r\n                                                    <div class=\"card\">\r\n                                                        <h5 class=\"card-header\">Subject list</h5>\r\n                                                        <div class=\"table-responsive text-nowrap\">\r\n                                                            <table class=\"table\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th>#</th>\r\n                                                                        <th>Code</th>\r\n                                                                        <th>Name</th>\r\n                                                                        <th></th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody class=\"table-border-bottom-0\">\r\n                                                                    <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                                                        <tr>\r\n                                                                            <td class=\"text-primary\">${subject.id}</td>\r\n                                                                            <td class=\"text-primary\">${subject.code}</td>\r\n                                                                            <td class=\"text-primary\">${subject.name}</td>\r\n                                                                            <td>\r\n                                                                                <button class=\"btn btn-icon btn-outline-danger\"\r\n                                                                                        type=\"button\"\r\n                                                                                        style=\"height: 25px; width: 25px; float: left;\"\r\n                                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Remove\"\r\n                                                                                        onclick=\"\r\n                                                                                                document.getElementById('modalSubjectId').value = ${subject.id};\"\r\n                                                                                        data-bs-toggle=\"modal\" data-bs-target=\"#modalAssign\">\r\n                                                                                    <i class=\"bx bx-trash\"></i>\r\n                                                                                </button>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                    </c:forEach>\r\n                                                                </tbody>\r\n                                                            </table>\r\n\r\n                                                        </div>\r\n\r\n                                                        <!--/ Basic Bootstrap Table -->\r\n\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </c:if>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n                            <a class=\"btn btn-primary\" href=\"${pageContext.request.contextPath}/user\">Back</a>\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <div class=\"modal fade\" id=\"modalAssign\" tabindex=\"-1\" aria-hidden=\"true\">\r\n            <form action=\"${pageContext.request.contextPath}/user/update\">\r\n                <input type=\"hidden\" name=\"userId\" value=\"${requestScope.user.id}\"/>\r\n                <input type=\"hidden\" name=\"action\" value=\"removeSubject\"/>\r\n                <input type=\"hidden\" name=\"subjectId\" id=\"modalSubjectId\"/>\r\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"modalCenterTitle\">Remove subject</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <h5 id=\"modalOrderBodyText\">Are you sure you want to remove subject?</h5>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                No\r\n                            </button>\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n        <script src=\"../assets/js/pages-account-settings-account.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/user/userdetails.jsp b/web/WEB-INF/views/user/userdetails.jsp
---- a/web/WEB-INF/views/user/userdetails.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/user/userdetails.jsp	(date 1721423113120)
-@@ -251,7 +251,7 @@
-                                             </div>
-                                             <c:if test="${requestScope.user.role < 3}">
-                                                 <div class="tab-pane fade" id="navs-pills-assign-subject" role="tabpanel">
--                                                    <div class="input-group mr-3" style="overflow: auto;">
-+                                                    <div class="input-group mr-3 mb-3" style="overflow: auto;">
-                                                         <label for="subjectId">Subject: </label>
-                                                         <select style="height: 38px;" name="subjectId" id="subjectId" class="mr-3 ml-3" 
-                                                                 onmousedown="if (this.options.length > 5) {
-@@ -276,6 +276,14 @@
-                                                             <h6 style="color: red;">${requestScope.err}</h6>
-                                                         </c:if>
-                                                     </div>
-+                                                    <div class="row mb-3">
-+                                                        <h5 style="color: black;">${requestScope.user.name}</h5>
-+                                                    </div>
-+                                                    <c:if test="${requestScope.successful != null && !requestScope.successful.isEmpty()}">
-+                                                        <div class="row mb-3">
-+                                                            <h6 class="text-success">${requestScope.successful}</h6>
-+                                                        </div>
-+                                                    </c:if>
-                                                     <div class="card">
-                                                         <h5 class="card-header">Subject list</h5>
-                                                         <div class="table-responsive text-nowrap">
-Index: web/WEB-INF/views/user/newuser.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>New Question</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">User /</span> New user</h4>\r\n\r\n                            <form action=\"${pageContext.request.contextPath}/user/new\" method=\"post\"\r\n                                  enctype=\"multipart/form-data\">\r\n                                <input type=\"hidden\" name=\"action\" value=\"addUser\"/>\r\n                                <input type=\"hidden\" name=\"isAvatarChanged\" id=\"isAvatarChanged\" value=\"false\"/>\r\n                                <input type=\"hidden\" name=\"avt\" value=\"${requestScope.user.avatar}\"/>\r\n\r\n                                <c:if test=\"${requestScope.user != null && requestScope.user.avatar != null \r\n                                              && !requestScope.user.avatar.isEmpty()}\">\r\n                                    <c:set var=\"avtSrc\" value=\"../${requestScope.user.avatar}\"></c:set>\r\n                                </c:if>\r\n                                <c:if test=\"${requestScope.user == null || requestScope.user.avatar == null \r\n                                              || requestScope.user.avatar.isEmpty()}\">\r\n                                    <c:set var=\"avtSrc\" value=\"../assets/img/default_avt.jpg\"></c:set>\r\n                                </c:if>\r\n\r\n                                <div class=\"card mb-4\">\r\n                                    <h5 class=\"card-header mb-3\">New user</h5>\r\n                                    <!-- Account -->\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"d-flex align-items-start align-items-sm-center gap-4\">\r\n                                            <img\r\n                                                src=\"${avtSrc}\"\r\n                                                alt=\"user-avatar\"\r\n                                                class=\"d-block rounded\"\r\n                                                height=\"100\"\r\n                                                width=\"100\"\r\n                                                id=\"uploadedAvatar\"/>\r\n                                            <div class=\"button-wrapper\">\r\n                                                <label for=\"upload\" class=\"btn btn-primary me-2 mb-4\" tabindex=\"0\">\r\n                                                    <span class=\"d-none d-sm-block\">Upload new photo</span>\r\n                                                    <i class=\"bx bx-upload d-block d-sm-none\"></i>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        id=\"upload\"\r\n                                                        class=\"account-file-input\"\r\n                                                        accept=\"image/png, image/jpeg\"\r\n                                                        hidden\r\n                                                        name=\"avatar\"\r\n                                                        onclick=\"document.getElementById('isAvatarChanged').value = 'true';\"/>\r\n                                                </label>\r\n                                                <button type=\"button\" class=\"btn btn-outline-secondary account-image-reset mb-4\"\r\n                                                        onclick=\"document.getElementById('isAvatarChanged').value = 'false';\">\r\n                                                    <i class=\"bx bx-reset d-block d-sm-none\"></i>\r\n                                                    <span class=\"d-none d-sm-block\">Reset</span>\r\n                                                </button>\r\n\r\n                                                <p class=\"text-muted mb-0\">Allowed JPG, GIF or PNG. Max size of 800K</p>\r\n                                                <c:if test=\"${requestScope.avtErr != null && !requestScope.avtErr.isEmpty()}\">\r\n                                                    <div>\r\n                                                        <h6 style=\"color: red;\">${requestScope.avtErr}</h6>\r\n                                                    </div>\r\n                                                </c:if>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr class=\"my-0\" />\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"mb-3 col-md-6\">\r\n                                                <label for=\"name\" class=\"form-label\">Name</label>\r\n                                                <input\r\n                                                    class=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    id=\"name\"\r\n                                                    name=\"name\"\r\n                                                    value=\"${requestScope.user.name}\"\r\n                                                    autofocus />\r\n                                                <c:if test=\"${requestScope.nameErr != null && !requestScope.nameErr.isEmpty()}\">\r\n                                                    <h6 style=\"color: red;\">${requestScope.nameErr}</h6>\r\n                                                </c:if>\r\n                                            </div>\r\n                                            <div class=\"mb-3 col-md-6\">\r\n                                                <label for=\"email\" class=\"form-label\">E-mail</label>\r\n                                                <input\r\n                                                    class=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    id=\"email\"\r\n                                                    name=\"email\"\r\n                                                    value=\"${requestScope.user.email}\"\r\n                                                    placeholder=\"john.doe@example.com\"/>\r\n                                                <c:if test=\"${requestScope.emailErr != null && !requestScope.emailErr.isEmpty()}\">\r\n                                                    <h6 style=\"color: red;\">${requestScope.emailErr}</h6>\r\n                                                </c:if>\r\n                                            </div>\r\n                                            <div class=\"mb-3 col-md-6\">\r\n                                                <label for=\"roleSelect\" class=\"form-label\">Role</label>\r\n                                                <select id=\"roleSelect\" class=\"select2 form-select\" name=\"roleId\">\r\n                                                    <c:forEach items=\"${requestScope.roleList}\" var=\"role\">\r\n                                                        <c:if test=\"${requestScope.user.role == role.id}\">\r\n                                                            <option value=\"${role.id}\" selected>${role.name}</option>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${requestScope.user.role != role.id}\">\r\n                                                            <option value=\"${role.id}\">${role.name}</option>\r\n                                                        </c:if>\r\n                                                    </c:forEach>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class=\"mb-3 col-md-6\">\r\n                                                <label class=\"form-label\" for=\"status\">Status</label>\r\n                                                <div class=\"form-control\" id=\"status\">\r\n                                                    <span class=\"badge rounded-pill bg-info\" >Unverified</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"mt-2\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary me-2\">Add user</button>\r\n                                        </div>\r\n                                        <c:if test=\"${requestScope.err != null && !requestScope.err.isEmpty()}\">\r\n                                            <h5 style=\"color: red;\">${requestScope.err}</h5>\r\n                                        </c:if>\r\n                                    </div>\r\n                                    <!-- /Account -->\r\n                                </div>\r\n                            </form>\r\n\r\n                            <hr class=\"my-5\" />\r\n\r\n\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n        <script src=\"../assets/js/pages-account-settings-account.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/user/newuser.jsp b/web/WEB-INF/views/user/newuser.jsp
---- a/web/WEB-INF/views/user/newuser.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/user/newuser.jsp	(date 1721423113120)
-@@ -204,7 +204,7 @@
- 
-                             <hr class="my-5" />
- 
--
-+                            <a class="btn btn-primary" href="${pageContext.request.contextPath}/user">Back</a>
- 
-                         </div>
-                         <!-- / Content -->
-Index: web/WEB-INF/views/question/questionlist.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>Question list</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"assets/js/config.js\"></script>\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n                            <div>\r\n                                <form action=\"${pageContext.request.contextPath}/question/new\">\r\n                                    <input type=\"hidden\" name=\"subjectId\" value=\"${requestScope.subject.id}\"/>\r\n                                    <input type=\"hidden\" name=\"lessonId\" value=\"${requestScope.lesson.id}\"/>\r\n                                    <input type=\"hidden\" name=\"action\" value=\"newQuestion\"/>\r\n                                    <button class=\"btn btn-primary px-3\">\r\n                                        <i class=\"fa fa-plus-square mr-3\"></i>\r\n                                        New question\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Question /</span> Question list</h4>\r\n\r\n                            <form id=\"searchBar\" class=\"d-flex\" action=\"${pageContext.request.contextPath}/question\">\r\n                                <div class=\"input-group mr-3\" style=\"overflow: auto;\">\r\n                                    <label for=\"subjectselect\">Subject: </label>\r\n                                    <select style=\"height: 38px;\" name=\"subjectid\" id=\"subjectselect\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('subjectselect').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;document.getElementById('subjectselect').style.height = '38px';\">\r\n                                        <c:if test=\"${(requestScope.subject == null)}\">\r\n                                            <option selected>All subjects</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${(requestScope.subject != null)}\">\r\n                                            <option>All subjects</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                            <c:if test=\"${subject.id == requestScope.subject.id}\">\r\n                                                <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${subject.id != requestScope.subject.id}\">\r\n                                                <option value=\"${subject.id}\">${subject.code}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <label for=\"lessonSelect\">Lesson: </label>\r\n                                    <select style=\"height: 38px;\" name=\"lessonId\" id=\"lessonSelect\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('lessonSelect').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;\r\n                                                    document.getElementById('lessonSelect').style.height = '38px';\">\r\n                                        <c:if test=\"${(requestScope.lesson == null)}\">\r\n                                            <option selected>All lessons</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${(requestScope.lesson != null)}\">\r\n                                            <option>All lessons</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.lessonList}\" var=\"lesson\">\r\n                                            <c:if test=\"${lesson.id == requestScope.lesson.id}\">\r\n                                                <option value=\"${lesson.id}\" selected>${lesson.name}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${lesson.id != requestScope.lesson.id}\">\r\n                                                <option value=\"${lesson.id}\">${lesson.name}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <span style=\"height: 38px;\" class=\"input-group-text\"><i class=\"tf-icons bx bx-search\"></i></span>\r\n                                    <input type=\"text\" name=\"keyword\" class=\"form-control\" placeholder=\"Search\" value=\"${requestScope.keyword}\"/>\r\n                                    <button style=\"height: 38px;\" class=\"btn btn-outline-primary mr-2\" type=\"submit\">Search</button>\r\n                                    <label for=\"sortBy\">Sort by: </label>\r\n                                    <select style=\"height: 38px;\" name=\"sortBy\" id=\"sortBy\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('sortBy').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;\r\n                                                    document.getElementById('sortBy').style.height = '38px';\">\r\n                                        <c:if test=\"${(requestScope.sortBy == null)}\">\r\n                                            <option value=\"none\" selected>None</option>\r\n                                            <option value=\"content\">Content</option>\r\n                                            <option value=\"Subject\">Subject</option>\r\n                                            <option value=\"lesson\">Lesson</option>\r\n                                            <option value=\"status\">Status</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.sortBy != null}\">\r\n                                            <c:if test=\"${requestScope.sortBy == 'none'}\">\r\n                                                <option value=\"none\" selected>None</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'none'}\">\r\n                                                <option value=\"none\">None</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy == 'content'}\">\r\n                                                <option value=\"content\" selected>Content</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'content'}\">\r\n                                                <option value=\"content\">Content</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy == 'subject'}\">\r\n                                                <option value=\"subject\" selected>Subject</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'subject'}\">\r\n                                                <option value=\"subject\">Subject</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy == 'lesson'}\">\r\n                                                <option value=\"lesson\" selected>Lesson</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'lesson'}\">\r\n                                                <option value=\"lesson\">Lesson</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy == 'status'}\">\r\n                                                <option value=\"status\" selected>Status</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'status'}\">\r\n                                                <option value=\"status\">Status</option>\r\n                                            </c:if>\r\n                                        </c:if>\r\n                                    </select>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n\r\n                            <!-- Basic Bootstrap Table -->\r\n\r\n                            <div class=\"card\">\r\n                                <h5 class=\"card-header\">Question list</h5>\r\n                                <div class=\"table-responsive text-nowrap\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Content</th>\r\n                                                <th>Subject</th>\r\n                                                <th>Lesson</th>\r\n                                                <th>Status</th>\r\n                                                <th>Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody class=\"table-border-bottom-0\">\r\n                                            <c:forEach items=\"${requestScope.list}\" var=\"question\">\r\n                                                <tr>\r\n                                                    <c:if test=\"${question.status}\">\r\n                                                        <td style=\"color: #696cff;\">${question.id}</td>\r\n                                                        <td style=\"color: #696cff;\">${question.content}</td>\r\n                                                        <td style=\"color: #696cff;\">${question.lesson.subject.code}</td>\r\n                                                        <td style=\"color: #696cff;\">${question.lesson.name}</td>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${!question.status}\">\r\n                                                        <td>${question.id}</td>\r\n                                                        <td>${question.content}</td>\r\n                                                        <td>${question.lesson.subject.code}</td>\r\n                                                        <td>${question.lesson.name}</td>\r\n                                                    </c:if>\r\n                                                    <td>\r\n                                                        <c:if test=\"${question.status}\">\r\n                                                            <span class=\"badge rounded-pill bg-success\">Active</span>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${!question.status}\">\r\n                                                            <span class=\"badge rounded-pill bg-danger\">Inactive</span>\r\n                                                        </c:if>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <c:if test=\"${question.status}\">\r\n                                                            <form action=\"${pageContext.request.contextPath}/question/details\" id=\"questionDetails\">\r\n                                                                <input type=\"hidden\" name=\"questionId\" value=\"${question.id}\"/>\r\n                                                                <button style=\"height: 25px; width: 25px; float: left;\" type=\"submit\" class=\"btn btn-icon btn-outline-primary mr-1\"\r\n                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\">\r\n                                                                    <i class=\"bx bx-edit\"></i>\r\n                                                                </button>\r\n                                                            </form>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" type=\"button\" class=\"btn btn-icon btn-outline-danger\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Deactivate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${question.id}, 'deactivate')\">\r\n                                                                <i class=\"bx bx-x\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${!question.status}\">\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-secondary mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\" disabled>\r\n                                                                <i class=\"bx bx-edit\"></i>\r\n                                                            </button>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left\" type=\"button\" class=\"btn btn-icon btn-outline-success\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Activate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${question.id}, 'activate')\">\r\n                                                                <i class=\"bx bx-check me-1\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </c:forEach>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n                                        <form action=\"${pageContext.request.contextPath}/question/update\">\r\n                                            <input type=\"hidden\" name=\"questionId\" id=\"questionId\"/>\r\n                                            <input type=\"hidden\" name=\"action\" value=\"changeStatus\"/>\r\n                                            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"modalCenterTitle\">Activate / Deactivate</h5>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            class=\"btn-close\"\r\n                                                            data-bs-dismiss=\"modal\"\r\n                                                            aria-label=\"Close\"></button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        <h5 id=\"modalBodyText\"></h5>\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                                            No\r\n                                                        </button>\r\n                                                        <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!--/ Basic Bootstrap Table -->\r\n\r\n\r\n                            </div>\r\n                            <!-- / Content -->\r\n\r\n                            <form action=\"${pageContext.request.contextPath}/question\">\r\n                                <input type=\"hidden\" name=\"subjectId\" value=\"${requestScope.subject.id}\"/>\r\n                                <input type=\"hidden\" name=\"lessonId\" value=\"${requestScope.lesson.id}\"/>\r\n                                <input type=\"hidden\" name=\"sortBy\" value=\"${requestScope.sortBy}\"/>\r\n                                <input type=\"hidden\" name=\"keyword\" value=\"${requestScope.keyword}\"/>\r\n                                <input type=\"hidden\" name=\"pageAction\" id=\"pageAction\"/>\r\n                                <input type=\"hidden\" name=\"newPage\" id=\"newPage\"/>\r\n                                <input type=\"hidden\" name=\"currentPage\" value=\"${requestScope.currentPage}\"/>\r\n                                <div class=\"card mb-4\">\r\n                                    <!-- Basic Pagination -->\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-lg-6\">\r\n                                                <small class=\"text-light fw-medium\">Basic</small>\r\n                                                <div class=\"demo-inline-spacing\">\r\n                                                    <!-- Basic Pagination -->\r\n                                                    <nav aria-label=\"Page navigation\">\r\n                                                        <ul class=\"pagination\">\r\n                                                            <li class=\"page-item first\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'firstPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-left\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            <li class=\"page-item prev\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'prevPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevron-left\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            <c:forEach begin=\"1\" end=\"${requestScope.noOfPages}\" var=\"page\">\r\n                                                                <c:if test=\"${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||\r\n                                                                              (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}\">\r\n                                                                    <c:if test=\"${page == requestScope.currentPage}\">\r\n                                                                        <li class=\"page-item active\">\r\n                                                                            <button class=\"page-link\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${page != requestScope.currentPage}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <input type=\"hidden\" name=\"page\" value=\"${page}\"/>\r\n                                                                            <button class=\"page-link\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${(page == 2) && (page < requestScope.currentPage - 1)}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <button class=\"page-link\">...</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <button class=\"page-link\">...</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                </c:if>\r\n                                                            </c:forEach>\r\n                                                            <li class=\"page-item next\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'nextPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n\r\n                                                            <li class=\"page-item last\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'lastPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </nav>\r\n                                                    <!--/ Basic Pagination -->\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                        </div>\r\n                        <!-- Content wrapper -->\r\n\r\n\r\n                    </div>\r\n                    <!-- / Layout page -->\r\n                </div>\r\n            </div>\r\n            <!-- / Layout wrapper -->\r\n\r\n            <script>\r\n                function assignValue(questionId, action) {\r\n                    document.getElementById(\"questionId\").value = questionId;\r\n                    let text1 = \"Are you sure you want to \";\r\n                    let text2 = \" question?\";\r\n                    let s = text1 + action + text2;\r\n                    document.getElementById(\"modalBodyText\").innerHTML = s;\r\n                }\r\n            </script>\r\n\r\n            <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n            <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n            <script src=\"../lib/easing/easing.min.js\"></script>\r\n            <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n            <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n            <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n            <!-- Template Javascript -->\r\n            <script src=\"../js/main.js\"></script>\r\n\r\n            <!-- Core JS -->\r\n            <!-- build:js assets/vendor/js/core.js -->\r\n\r\n            <script src=\"assets/vendor/libs/jquery/jquery.js\"></script>\r\n            <script src=\"assets/vendor/libs/popper/popper.js\"></script>\r\n            <script src=\"assets/vendor/js/bootstrap.js\"></script>\r\n            <script src=\"assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n            <script src=\"assets/vendor/js/menu.js\"></script>\r\n\r\n            <!-- endbuild -->\r\n\r\n            <!-- Vendors JS -->\r\n            <script src=\"assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n            <!-- Main JS -->\r\n            <script src=\"assets/js/main.js\"></script>\r\n\r\n            <!-- Page JS -->\r\n            <script src=\"assets/js/dashboards-analytics.js\"></script>\r\n\r\n            <!-- Place this tag in your head or just before your close body tag. -->\r\n            <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n            \r\n            <script src=\"js/sider.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/question/questionlist.jsp b/web/WEB-INF/views/question/questionlist.jsp
---- a/web/WEB-INF/views/question/questionlist.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/question/questionlist.jsp	(date 1721423113119)
-@@ -87,7 +87,6 @@
-                                 <form action="${pageContext.request.contextPath}/question/new">
-                                     <input type="hidden" name="subjectId" value="${requestScope.subject.id}"/>
-                                     <input type="hidden" name="lessonId" value="${requestScope.lesson.id}"/>
--                                    <input type="hidden" name="action" value="newQuestion"/>
-                                     <button class="btn btn-primary px-3">
-                                         <i class="fa fa-plus-square mr-3"></i>
-                                         New question
-@@ -98,10 +97,12 @@
-                             <h4 class="py-3 mb-4"><span class="text-muted fw-light">Question /</span> Question list</h4>
- 
-                             <form id="searchBar" class="d-flex" action="${pageContext.request.contextPath}/question">
-+                                <input type="hidden" name="change" id="change"/>
-                                 <div class="input-group mr-3" style="overflow: auto;">
-                                     <label for="subjectselect">Subject: </label>
--                                    <select style="height: 38px;" name="subjectid" id="subjectselect" class="mr-3 ml-3" 
--                                            onchange="document.getElementById('searchBar').submit();"
-+                                    <select style="height: 38px;" name="subjectId" id="subjectselect" class="mr-3 ml-3" 
-+                                            onchange="document.getElementById('change').value = 'subject';
-+                                                    document.getElementById('searchBar').submit();"
-                                             onmousedown="if (this.options.length > 5) {
-                                                         this.size = 5;
-                                                         document.getElementById('subjectselect').style.height = '115px';
-@@ -124,7 +125,8 @@
-                                     </select>
-                                     <label for="lessonSelect">Lesson: </label>
-                                     <select style="height: 38px;" name="lessonId" id="lessonSelect" class="mr-3 ml-3" 
--                                            onchange="document.getElementById('searchBar').submit();"
-+                                            onchange="document.getElementById('change').value = 'lesson';
-+                                                    document.getElementById('searchBar').submit();"
-                                             onmousedown="if (this.options.length > 5) {
-                                                         this.size = 5;
-                                                         document.getElementById('lessonSelect').style.height = '115px';
-@@ -158,51 +160,29 @@
-                                                     }"  
-                                             onblur="this.size = 0;
-                                                     document.getElementById('sortBy').style.height = '38px';">
--                                        <c:if test="${(requestScope.sortBy == null)}">
--                                            <option value="none" selected>None</option>
--                                            <option value="content">Content</option>
--                                            <option value="Subject">Subject</option>
--                                            <option value="lesson">Lesson</option>
--                                            <option value="status">Status</option>
--                                        </c:if>
--                                        <c:if test="${requestScope.sortBy != null}">
--                                            <c:if test="${requestScope.sortBy == 'none'}">
--                                                <option value="none" selected>None</option>
--                                            </c:if>
--                                            <c:if test="${requestScope.sortBy != 'none'}">
--                                                <option value="none">None</option>
--                                            </c:if>
--                                            <c:if test="${requestScope.sortBy == 'content'}">
--                                                <option value="content" selected>Content</option>
-+                                        <c:forEach items="${requestScope.sortOptions}" var="option">
-+                                            <c:if test="${requestScope.sortBy == option}">
-+                                                <option value="${option}" selected>${option}</option>
-                                             </c:if>
--                                            <c:if test="${requestScope.sortBy != 'content'}">
--                                                <option value="content">Content</option>
-+                                            <c:if test="${requestScope.sortBy != option}">
-+                                                <option value="${option}">${option}</option>
-                                             </c:if>
--                                            <c:if test="${requestScope.sortBy == 'subject'}">
--                                                <option value="subject" selected>Subject</option>
--                                            </c:if>
--                                            <c:if test="${requestScope.sortBy != 'subject'}">
--                                                <option value="subject">Subject</option>
--                                            </c:if>
--                                            <c:if test="${requestScope.sortBy == 'lesson'}">
--                                                <option value="lesson" selected>Lesson</option>
--                                            </c:if>
--                                            <c:if test="${requestScope.sortBy != 'lesson'}">
--                                                <option value="lesson">Lesson</option>
--                                            </c:if>
--                                            <c:if test="${requestScope.sortBy == 'status'}">
--                                                <option value="status" selected>Status</option>
--                                            </c:if>
--                                            <c:if test="${requestScope.sortBy != 'status'}">
--                                                <option value="status">Status</option>
--                                            </c:if>
--                                        </c:if>
--                                    </select>
--                                </div>
-+                                        </c:forEach>
-+                                    </select>
-+                                </div>
-+
-+
-+                            </form>
-+
-+                            <div class="row mb-3">
-+                                <c:if test="${requestScope.successful != null && !requestScope.successful.isEmpty()}">
-+                                    <h6 class="text-success">${requestScope.successful}</h6>
-+                                </c:if>
-+                                <c:if test="${requestScope.err != null && !requestScope.err.isEmpty()}">
-+                                    <h6 class="text-danger">${requestScope.err}</h6>
-+                                </c:if>
-+                            </div>
- 
--
--                            </form>
--
-                             <!-- Basic Bootstrap Table -->
- 
-                             <div class="card">
-@@ -340,9 +320,10 @@
-                                                                     <i class="tf-icon bx bx-chevron-left"></i>
-                                                                 </button>
-                                                             </li>
-+                                                            <c:set var="noOfPages" value="${requestScope.noOfPages}"></c:set>
-                                                             <c:forEach begin="1" end="${requestScope.noOfPages}" var="page">
--                                                                <c:if test="${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||
--                                                                              (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}">
-+                                                                <c:if test="${(page == 1) || (page == 2) || (Math.abs(page - requestScope.currentPage) <= 1)
-+                                                                              || (page == noOfPages) || (page == noOfPages - 1)}">
-                                                                     <c:if test="${page == requestScope.currentPage}">
-                                                                         <li class="page-item active">
-                                                                             <button class="page-link"
-@@ -358,16 +339,17 @@
-                                                                                     onclick="document.getElementById('newPage').value = ${page}">${page}</button>
-                                                                         </li>
-                                                                     </c:if>
--                                                                    <c:if test="${(page == 2) && (page < requestScope.currentPage - 1)}">
--                                                                        <li class="page-item">
--                                                                            <button class="page-link">...</button>
--                                                                        </li>
--                                                                    </c:if>
--                                                                    <c:if test="${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}">
--                                                                        <li class="page-item">
--                                                                            <button class="page-link">...</button>
--                                                                        </li>
--                                                                    </c:if>
-+                                                                </c:if>
-+                                                                <c:set var="currentPage" value="${requestScope.currentPage}"></c:set>
-+                                                                <c:if test="${(page == currentPage - 2) && (page > 2)}">
-+                                                                    <li class="page-item">
-+                                                                        <button class="page-link">...</button>
-+                                                                    </li>
-+                                                                </c:if>
-+                                                                <c:if test="${(page == currentPage + 2) && (page < noOfPages - 1)}">
-+                                                                    <li class="page-item">
-+                                                                        <button class="page-link">...</button>
-+                                                                    </li>
-                                                                 </c:if>
-                                                             </c:forEach>
-                                                             <li class="page-item next">
-@@ -405,50 +387,51 @@
-                 </div>
-             </div>
-             <!-- / Layout wrapper -->
-+        </div>
- 
--            <script>
--                function assignValue(questionId, action) {
--                    document.getElementById("questionId").value = questionId;
--                    let text1 = "Are you sure you want to ";
--                    let text2 = " question?";
--                    let s = text1 + action + text2;
--                    document.getElementById("modalBodyText").innerHTML = s;
--                }
--            </script>
-+        <script>
-+            function assignValue(questionId, action) {
-+                document.getElementById("questionId").value = questionId;
-+                let text1 = "Are you sure you want to ";
-+                let text2 = " question?";
-+                let s = text1 + action + text2;
-+                document.getElementById("modalBodyText").innerHTML = s;
-+            }
-+        </script>
- 
--            <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
--            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
--            <script src="../lib/easing/easing.min.js"></script>
--            <script src="../lib/waypoints/waypoints.min.js"></script>
--            <script src="../lib/counterup/counterup.min.js"></script>
--            <script src="../lib/owlcarousel/owl.carousel.min.js"></script>
-+        <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
-+        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
-+        <script src="../lib/easing/easing.min.js"></script>
-+        <script src="../lib/waypoints/waypoints.min.js"></script>
-+        <script src="../lib/counterup/counterup.min.js"></script>
-+        <script src="../lib/owlcarousel/owl.carousel.min.js"></script>
- 
--            <!-- Template Javascript -->
--            <script src="../js/main.js"></script>
-+        <!-- Template Javascript -->
-+        <script src="../js/main.js"></script>
- 
--            <!-- Core JS -->
--            <!-- build:js assets/vendor/js/core.js -->
-+        <!-- Core JS -->
-+        <!-- build:js assets/vendor/js/core.js -->
- 
--            <script src="assets/vendor/libs/jquery/jquery.js"></script>
--            <script src="assets/vendor/libs/popper/popper.js"></script>
--            <script src="assets/vendor/js/bootstrap.js"></script>
--            <script src="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
--            <script src="assets/vendor/js/menu.js"></script>
-+        <script src="assets/vendor/libs/jquery/jquery.js"></script>
-+        <script src="assets/vendor/libs/popper/popper.js"></script>
-+        <script src="assets/vendor/js/bootstrap.js"></script>
-+        <script src="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
-+        <script src="assets/vendor/js/menu.js"></script>
- 
--            <!-- endbuild -->
-+        <!-- endbuild -->
- 
--            <!-- Vendors JS -->
--            <script src="assets/vendor/libs/apex-charts/apexcharts.js"></script>
-+        <!-- Vendors JS -->
-+        <script src="assets/vendor/libs/apex-charts/apexcharts.js"></script>
- 
--            <!-- Main JS -->
--            <script src="assets/js/main.js"></script>
-+        <!-- Main JS -->
-+        <script src="assets/js/main.js"></script>
- 
--            <!-- Page JS -->
--            <script src="assets/js/dashboards-analytics.js"></script>
-+        <!-- Page JS -->
-+        <script src="assets/js/dashboards-analytics.js"></script>
- 
--            <!-- Place this tag in your head or just before your close body tag. -->
--            <script async defer src="https://buttons.github.io/buttons.js"></script>
--            
--            <script src="js/sider.js"></script>
-+        <!-- Place this tag in your head or just before your close body tag. -->
-+        <script async defer src="https://buttons.github.io/buttons.js"></script>
-+
-+        <script src="js/sider.js"></script>
-     </body>
- </html>
-Index: web/WEB-INF/views/question/questiondetails.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>Question details</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/../assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Question /</span> Question details</h4>\r\n                            <form action=\"${pageContext.request.contextPath}/question/update\" method=\"post\">\r\n                                <div class=\"col-xxl\">\r\n                                    <div class=\"card mb-4\">\r\n                                        <div class=\"card-header d-flex align-items-center justify-content-between mb-3\">\r\n                                            <small class=\"text-muted float-end\">Input question and answers content</small>\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <input type=\"hidden\" name=\"questionId\" value=\"${requestScope.question.id}\"/>\r\n                                            <input type=\"hidden\" name=\"action\" value=\"answerChange\"/>\r\n\r\n                                            <div class=\"row mb-5\">\r\n                                                <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname2\">Question</label>\r\n                                                <div class=\"col-sm-10\">\r\n                                                    <textarea name=\"question\" id=\"basic-icon-default-fullname2\"\r\n                                                              class=\"form-control border-top-0 border-right-0 border-left-0 p-0\" \r\n                                                              rows=\"5\" placeholder=\"Question content\" readonly>${requestScope.question.content}</textarea>\r\n                                                </div>\r\n                                            </div>\r\n                                            <c:forEach items=\"${requestScope.answers}\" var=\"answer\">\r\n                                                <div class=\"row mb-3\">\r\n                                                    <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname\">Answer</label>\r\n\r\n                                                    <div class=\"col-sm-10\">\r\n                                                        <div class=\"input-group\">\r\n                                                            <c:if test=\"${answer.isCorrect}\">\r\n                                                                <span style=\"height: 38px; width: 38px;\" class=\"input-group-text\"></span>\r\n                                                                <input\r\n                                                                    class=\"form-check-input mt-0 ml-2\"\r\n                                                                    type=\"checkbox\" style=\"align-self: center; \"\r\n                                                                    name=\"${answer.id}isCorrect\"\r\n                                                                    disabled\r\n                                                                    checked/>\r\n                                                            </c:if>\r\n                                                            <c:if test=\"${!answer.isCorrect}\">\r\n                                                                <span style=\"height: 38px; width: 38px;\" class=\"input-group-text\"></span>\r\n                                                                <input\r\n                                                                    class=\"form-check-input mt-0 ml-2\"\r\n                                                                    name=\"${answer.id}isCorrect\"\r\n                                                                    type=\"checkbox\" style=\"align-self: center; \"\r\n                                                                    disabled/>\r\n                                                            </c:if>\r\n\r\n                                                            <input type=\"text\" class=\"form-control\" id=\"basic-icon-default-fullname\"\r\n                                                                   name=\"${answer.id}\"\r\n                                                                   value=\"${answer.content}\"\r\n                                                                   readonly/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </c:forEach>\r\n                                            <div class=\"row mb-3\">\r\n                                                <div class=\"row justify-content-end\">\r\n                                                    <div class=\"col-sm-10\">\r\n                                                        <button type=\"submit\" class=\"btn btn-primary\" disabled>Update answer</button>\r\n                                                        <h3>${requestScope.err}</h3>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/question/questiondetails.jsp b/web/WEB-INF/views/question/questiondetails.jsp
---- a/web/WEB-INF/views/question/questiondetails.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/question/questiondetails.jsp	(date 1721423113119)
-@@ -87,7 +87,15 @@
- 
- 
-                             <h4 class="py-3 mb-4"><span class="text-muted fw-light">Question /</span> Question details</h4>
--                            <form action="${pageContext.request.contextPath}/question/update" method="post">
-+                            <div class="mb-3">
-+                                <label for="subject">Subject: </label>
-+                                <input type="text" style="width: 100px;"
-+                                       value="${requestScope.question.lesson.subject.code}" readonly id="subject"/>
-+                                <label for="lesson">Lesson: </label>
-+                                <input type="text" style="width: 500px;" 
-+                                       value="${requestScope.question.lesson.name}" readonly id="lesson"/>
-+                            </div>
-+                            <form action="${pageContext.request.contextPath}/question/update">
-                                 <div class="col-xxl">
-                                     <div class="card mb-4">
-                                         <div class="card-header d-flex align-items-center justify-content-between mb-3">
-@@ -95,21 +103,37 @@
-                                         </div>
-                                         <div class="card-body">
-                                             <input type="hidden" name="questionId" value="${requestScope.question.id}"/>
--                                            <input type="hidden" name="action" value="answerChange"/>
--
-+                                            <input type="hidden" name="action" id="action"/>
-+                                            <input type="hidden" name="deletedId" id="deletedId"/>
-                                             <div class="row mb-5">
-                                                 <label class="col-sm-2 col-form-label" for="basic-icon-default-fullname2">Question</label>
-                                                 <div class="col-sm-10">
-                                                     <textarea name="question" id="basic-icon-default-fullname2"
-                                                               class="form-control border-top-0 border-right-0 border-left-0 p-0" 
--                                                              rows="5" placeholder="Question content" readonly>${requestScope.question.content}</textarea>
-+                                                              rows="5" placeholder="Question content">${requestScope.question.content}</textarea>
-                                                 </div>
-                                             </div>
--                                            <c:forEach items="${requestScope.answers}" var="answer">
-+                                            <c:if test="${requestScope.questionErr != null}">
-                                                 <div class="row mb-3">
--                                                    <label class="col-sm-2 col-form-label" for="basic-icon-default-fullname">Answer</label>
--
-+                                                    <div class="col-sm-2"></div>
-+                                                    <div class="col-sm-10">
-+                                                        <h5 style="color: red;">${requestScope.questionErr}</h5>
-+                                                    </div>
-+                                                </div>
-+                                            </c:if>
-+                                            <c:if test="${requestScope.answerErr != null}">
-+                                                <div class="row mb-3">
-+                                                    <div class="col-sm-2"></div>
-                                                     <div class="col-sm-10">
-+                                                        <h5 style="color: red;">${requestScope.answerErr}</h5>
-+                                                    </div>
-+                                                </div>
-+                                            </c:if>
-+                                            <c:forEach items="${requestScope.answerList}" var="answer">
-+                                                <div class="row mb-3">
-+                                                    <label class="col-sm-2 col-form-label" for="basic-icon-default-fullname">Answer</label>
-+
-+                                                    <div class="col-sm-9">
-                                                         <div class="input-group">
-                                                             <c:if test="${answer.isCorrect}">
-                                                                 <span style="height: 38px; width: 38px;" class="input-group-text"></span>
-@@ -117,7 +141,6 @@
-                                                                     class="form-check-input mt-0 ml-2"
-                                                                     type="checkbox" style="align-self: center; "
-                                                                     name="${answer.id}isCorrect"
--                                                                    disabled
-                                                                     checked/>
-                                                             </c:if>
-                                                             <c:if test="${!answer.isCorrect}">
-@@ -125,24 +148,41 @@
-                                                                 <input
-                                                                     class="form-check-input mt-0 ml-2"
-                                                                     name="${answer.id}isCorrect"
--                                                                    type="checkbox" style="align-self: center; "
--                                                                    disabled/>
-+                                                                    type="checkbox" style="align-self: center;"/>
-                                                             </c:if>
- 
-                                                             <input type="text" class="form-control" id="basic-icon-default-fullname"
-                                                                    name="${answer.id}"
--                                                                   value="${answer.content}"
--                                                                   readonly/>
-+                                                                   value="${answer.content}"/>
-                                                         </div>
-                                                     </div>
-+                                                    <c:if test="${requestScope.answerList.size() > 2}">
-+                                                        <div class="col-sm-1">
-+                                                            <button style="height: 38px; width: 38px;" class="btn btn-icon"
-+                                                                    type="submit"
-+                                                                    onclick="document.getElementById('action').value = 'deleteAnswer';
-+                                                                            document.getElementById('deletedId').value = ${answer.id};">
-+                                                                <i style="color: red;" class="bx bx-trash"></i>
-+                                                            </button>
-+                                                        </div>
-+                                                    </c:if>
-                                                 </div>
-                                             </c:forEach>
-                                             <div class="row mb-3">
--                                                <div class="row justify-content-end">
--                                                    <div class="col-sm-10">
--                                                        <button type="submit" class="btn btn-primary" disabled>Update answer</button>
--                                                        <h3>${requestScope.err}</h3>
--                                                    </div>
-+                                                <div class="col-sm-2"></div>
-+                                                <div class="col-sm-10">
-+                                                    <button type="submit" style="height: 38px; width: 38px;" 
-+                                                            class="btn btn-icon btn-primary"
-+                                                            onclick="document.getElementById('action').value = 'addAnswer';">
-+                                                        <i class="bx bx-plus"></i>
-+                                                    </button>
-+                                                </div>
-+                                            </div>
-+                                            <div class="row mb-3">
-+                                                <div class="col-sm-2"></div>
-+                                                <div class="col-sm-10">
-+                                                    <button type="submit" class="btn btn-primary">Update answer</button>
-+                                                    <h3>${requestScope.err}</h3>
-                                                 </div>
-                                             </div>
-                                         </div>
-@@ -151,6 +191,8 @@
-                             </form>
-                             <hr class="my-5" />
- 
-+                            <a class="btn btn-primary" href="${pageContext.request.contextPath}/question">Back</a>
-+
-                         </div>
-                         <!-- / Content -->
- 
-Index: src/java/controller/google/SignUpGoogle.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.google;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n@WebServlet(\"/signup-google\")\r\npublic class SignUpGoogle extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, SQLException {\r\n        // Retrieve form data\r\n        String fullName = request.getParameter(\"fullName\");\r\n        String email = request.getParameter(\"email\");\r\n        String password = request.getParameter(\"password\");\r\n        String repassword = request.getParameter(\"repassword\");\r\n        String avt = \"assets/img/default_avt.jpg\";\r\n        int role = 3;\r\n        int status = 1;\r\n        HttpSession session = request.getSession();\r\n        UserDAO dao = new UserDAO();\r\n        if (fullName == null || email == null || password == null || repassword == null) {\r\n            session.setAttribute(\"message\", \"Please fill in all fields.\");\r\n            response.sendRedirect(\"set-password.jsp\");\r\n        } else if (dao.checkEmailExist(email)) {\r\n            session.setAttribute(\"message\", \"Email already exists.\");\r\n            response.sendRedirect(\"set-password.jsp\");\r\n        } else if (!password.equals(repassword)) {\r\n            session.setAttribute(\"message\", \"Passwords do not match.\");\r\n            response.sendRedirect(\"set-password.jsp\");\r\n        } else {\r\n            User user = new User();\r\n            user.setName(fullName);\r\n            user.setEmail(email);\r\n            user.setRole(role);\r\n            user.setAvatar(avt);\r\n            user.setStatus(status);\r\n            try {\r\n                dao.userSignUp(user, password);\r\n                session.setAttribute(\"message\", \"Sign-up successful.\");\r\n                response.sendRedirect(\"login.jsp\");\r\n            } catch (SQLException ex) {\r\n\r\n                session.setAttribute(\"message\", ex.getMessage());\r\n                response.sendRedirect(\"set-password.jsp\");\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            processRequest(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            processRequest(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/google/SignUpGoogle.java b/src/java/controller/google/SignUpGoogle.java
---- a/src/java/controller/google/SignUpGoogle.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/google/SignUpGoogle.java	(date 1721423113110)
-@@ -7,7 +7,7 @@
- import jakarta.servlet.http.HttpServletRequest;
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
--import model.user.User;
-+import model.User;
- 
- import java.io.IOException;
- import java.sql.SQLException;
-Index: database/database design.sql
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>-- Create the database\r\ncreate DATABASE `KMS-G6-SE1808`;\r\nUSE `KMS-G6-SE1808`;\r\n\r\ncreate table `role`\r\n(\r\n    id   int(1) primary key,\r\n    name varchar(7)\r\n);\r\n-- Create the 'user' table\r\nCREATE TABLE user\r\n(\r\n    id           INT AUTO_INCREMENT PRIMARY KEY,\r\n    name         VARCHAR(50),\r\n    email        VARCHAR(35) UNIQUE,\r\n    avt          VARCHAR(100) default 'assets/img/default_avt.jpg',\r\n    password     VARCHAR(60),\r\n    role         INT(1),\r\n    status       int(1),\r\n    date_created date         default (curdate()),\r\n\r\n    foreign key (role) references `role` (id)\r\n);\r\n\r\nCREATE TABLE contact\r\n(\r\n    email   VARCHAR(35),\r\n    name    VARCHAR(255),\r\n    subject VARCHAR(255),\r\n    message TEXT\r\n);\r\n\r\n-- Create the 'subject' table\r\nCREATE TABLE subject\r\n(\r\n    id                   INT AUTO_INCREMENT PRIMARY KEY,\r\n    code                 VARCHAR(7) UNIQUE,\r\n    name                 VARCHAR(255),\r\n    status               BIT DEFAULT 0,\r\n    exam_no_of_questions tinyint\r\n);\r\n\r\n-- Create the 'subject_in_charged' table\r\nCREATE TABLE subject_in_charged\r\n(\r\n    user_id    INT,\r\n    subject_id INT,\r\n    PRIMARY KEY (user_id, subject_id),\r\n    FOREIGN KEY (user_id) REFERENCES user (id),\r\n    FOREIGN KEY (subject_id) REFERENCES subject (id)\r\n);\r\n\r\n-- Create the 'class' table\r\nCREATE TABLE class\r\n(\r\n    id   INT AUTO_INCREMENT PRIMARY KEY,\r\n    code VARCHAR(40) UNIQUE\r\n);\r\n\r\n-- Create the 'group' table\r\nCREATE TABLE `group`\r\n(\r\n    id            INT AUTO_INCREMENT PRIMARY KEY,\r\n    class_id      INT,\r\n    subject_id    INT,\r\n    instructor_id INT,\r\n    FOREIGN KEY (class_id) REFERENCES class (id),\r\n    FOREIGN KEY (subject_id) REFERENCES subject (id),\r\n    FOREIGN KEY (instructor_id) REFERENCES user (id)\r\n);\r\n\r\n-- Create the 'student_group' table\r\nCREATE TABLE student_group\r\n(\r\n    student_id INT,\r\n    group_id   INT,\r\n    PRIMARY KEY (student_id, group_id),\r\n    FOREIGN KEY (student_id) REFERENCES user (id),\r\n    FOREIGN KEY (group_id) REFERENCES `group` (id)\r\n);\r\n\r\n-- Create the 'group_announcement' table\r\nCREATE TABLE group_announcement\r\n(\r\n    id           INT AUTO_INCREMENT PRIMARY KEY,\r\n    group_id     INT,\r\n    announcement TEXT,\r\n    FOREIGN KEY (group_id) REFERENCES `group` (id)\r\n);\r\n\r\n-- Create the 'flashcard_set' table\r\nCREATE TABLE flashcard_set\r\n(\r\n    id         INT AUTO_INCREMENT PRIMARY KEY,\r\n    name       VARCHAR(255),\r\n    subject_id INT,\r\n    created_by INT,\r\n    FOREIGN KEY (created_by) REFERENCES user (id),\r\n    FOREIGN KEY (subject_id) REFERENCES subject (id)\r\n);\r\n\r\n-- Create the 'flashcard_question' table\r\nCREATE TABLE flashcard_question\r\n(\r\n    id               INT AUTO_INCREMENT PRIMARY KEY,\r\n    term             text,\r\n    definition       text,\r\n    flashcard_set_id INT,\r\n    FOREIGN KEY (flashcard_set_id) REFERENCES flashcard_set (id)\r\n);\r\n\r\n-- Create the 'lesson' table\r\ncreate table lesson\r\n(\r\n    id         int auto_increment primary key,\r\n    name       varchar(100) unique not null,\r\n    `order`    int                 not null,\r\n    subject_id int                 not null,\r\n    status     bit default 1,\r\n\r\n    foreign key (subject_id) references subject (id)\r\n);\r\n\r\ncreate table material\r\n(\r\n    id  int auto_increment primary key,\r\n    uri varchar(100)\r\n);\r\n\r\ncreate table material_lesson\r\n(\r\n    material_id int,\r\n    lesson_id   int,\r\n\r\n    primary key (material_id, lesson_id),\r\n    foreign key (material_id) references material (id),\r\n    foreign key (lesson_id) references lesson (id)\r\n);\r\n\r\ncreate table question\r\n(\r\n    id        int auto_increment primary key,\r\n    content   varchar(255) not null,\r\n    lesson_id int default null,\r\n    status    bit          not null,\r\n\r\n    foreign key (lesson_id) references lesson (id)\r\n);\r\n\r\ncreate table answer\r\n(\r\n    id          int auto_increment primary key,\r\n    content     varchar(255) not null,\r\n    is_correct  bit          not null,\r\n    question_id int          not null,\r\n\r\n    foreign key (question_id) references question (id)\r\n);\r\n\r\ncreate table test\r\n(\r\n    id             int primary key,\r\n    name           varchar(255),\r\n    no_of_question smallint\r\n);\r\n\r\ncreate table test_group\r\n(\r\n    test_id  int,\r\n    group_id int,\r\n\r\n    foreign key (test_id) references test (id),\r\n    foreign key (group_id) references `group` (id)\r\n);\r\n\r\ncreate table test_lesson\r\n(\r\n    test_id   int,\r\n    lesson_id int,\r\n\r\n    foreign key (test_id) references test (id),\r\n    foreign key (lesson_id) references `lesson` (id)\r\n);\r\n\r\ncreate table result\r\n(\r\n    id              int auto_increment primary key,\r\n    correct_answers int,\r\n    score           tinyint,\r\n    date_taken      date,\r\n    attempt         int,\r\n    user_id         int,\r\n    exam_subject_id int,\r\n    test_id         int,\r\n\r\n    foreign key (user_id) references user (id),\r\n    foreign key (exam_subject_id) references subject (id),\r\n    foreign key (test_id) references test (id)\r\n);\r\n\r\ncreate table result_details\r\n(\r\n    id          int primary key auto_increment,\r\n    result_id   int,\r\n    question_id int,\r\n    is_scored   bit,\r\n    content     varchar(255),\r\n\r\n    foreign key (result_id) references result (id)\r\n);\r\n\r\ncreate table result_answer_selected\r\n(\r\n    id                int auto_increment primary key,\r\n    result_details_id int,\r\n    answer_id         int,\r\n    content           varchar(100),\r\n    is_correct        bit,\r\n    is_selected       bit,\r\n\r\n    foreign key (result_details_id) references result_details (id)\r\n);\r\n\r\ninsert into role(id, name)\r\nvalues (0, 'Admin'),\r\n       (1, 'Manager'),\r\n       (2, 'Teacher'),\r\n       (3, 'Student');\r\n\r\n-- Insert users\r\nINSERT INTO user (name, email, password, role, status)\r\nVALUES ('ThuyBT02', 'thuybt02@fpt.edu.vn', 'password', 2, 1),\r\n       ('KienNT', 'kiennt@fpt.edu.vn', 'password', 2, 1),\r\n       ('HungNM142', 'hungnm142@fpt.edu.vn', 'password', 2, 1),\r\n       ('LinhDTT43', 'linhdtt43@fpt.edu.vn', 'password', 2, 1),\r\n       ('Hoannn6', 'hoannn6@fpt.edu.vn', 'password', 2, 1),\r\n       ('Doan Binh An', 'ExampleEmail@fpt.edu.vn', 'password', 3, 1),\r\n       ('admin', 'admin1@email.com', 'a', 0, 1),\r\n       ('manager', 'manager1@email.com', 'a', 1, 1),\r\n       ('teacher', 'teacher1@email.com', 'a', 2, 1),\r\n       ('student', 'student1@email.com', 'a', 3, 1),\r\n       ('Duong Quan Hao', 'ngunguoi123ys@gmail.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6',\r\n        0, 1);\r\n\r\nupdate user\r\nset avt = 'assets/img/annandmaryann.png'\r\nwhere email = 'ngunguoi123ys@gmail.com';\r\n\r\n-- Insert subjects\r\nINSERT INTO subject (code, name, status, exam_no_of_questions)\r\nVALUES ('PRN212', 'Basis Cross-Platform Application Programming With .NET', 1, 50),\r\n       ('SWP391', 'Application development project', 1, 50),\r\n       ('SWR302', 'Software Requirement', 1, 50),\r\n       ('SWT301', 'Software Testing', 1, 50),\r\n       ('FER202', 'Front-End web development with React', 1, 50);\r\n\r\n-- Insert classes\r\nINSERT INTO class (code)\r\nVALUES ('SE1808-NET'),\r\n       ('SE1840-KS'),\r\n       ('SE1827-NJ');\r\n\r\n-- Insert groups\r\nINSERT INTO `group` (class_id, subject_id, instructor_id)\r\nVALUES ((SELECT id FROM class WHERE code = 'SE1808-NET'), (SELECT id FROM subject WHERE code = 'PRN212'),\r\n        (SELECT id FROM user WHERE email = 'thuybt02@fpt.edu.vn')),\r\n       ((SELECT id FROM class WHERE code = 'SE1808-NET'), (SELECT id FROM subject WHERE code = 'SWP391'),\r\n        (SELECT id FROM user WHERE email = 'kiennt@fpt.edu.vn')),\r\n       ((SELECT id FROM class WHERE code = 'SE1840-KS'), (SELECT id FROM subject WHERE code = 'SWR302'),\r\n        (SELECT id FROM user WHERE email = 'hungnm142@fpt.edu.vn')),\r\n       ((SELECT id FROM class WHERE code = 'SE1840-KS'), (SELECT id FROM subject WHERE code = 'SWT301'),\r\n        (SELECT id FROM user WHERE email = 'linhdtt43@fpt.edu.vn')),\r\n       ((SELECT id FROM class WHERE code = 'SE1827-NJ'), (SELECT id FROM subject WHERE code = 'FER202'),\r\n        (SELECT id FROM user WHERE email = 'hoannn6@fpt.edu.vn'));\r\n\r\n-- Insert student groups without duplicates\r\nINSERT INTO student_group (student_id, group_id)\r\nVALUES ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1827-NJ')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'FER202'))),\r\n       ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1808-NET')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'PRN212'))),\r\n       ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1808-NET')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'SWP391'))),\r\n       ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1840-KS')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'SWR302'))),\r\n       ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1840-KS')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'SWT301')));\r\n\r\n-- Insert subject in charged\r\nINSERT INTO subject_in_charged (user_id, subject_id)\r\nVALUES ((SELECT id FROM user WHERE email = 'thuybt02@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'PRN212')),\r\n       ((SELECT id FROM user WHERE email = 'kiennt@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'SWP391')),\r\n       ((SELECT id FROM user WHERE email = 'hungnm142@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'SWR302')),\r\n       ((SELECT id FROM user WHERE email = 'linhdtt43@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'SWT301')),\r\n       ((SELECT id FROM user WHERE email = 'hoannn6@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'FER202'));\r\n\r\ninsert into lesson(name, `order`, subject_id)\r\nvalues ('Introduction to .NET Platform - Visual Studio.NET', 1, (select id from subject where code = 'PRN212')),\r\n       ('C# Programming', 2, (select id from subject where code = 'PRN212')),\r\n       ('Object-Oriented Programming', 3, (select id from subject where code = 'PRN212')),\r\n       ('Collections and Generics', 4, (select id from subject where code = 'PRN212')),\r\n       ('Design Pattern in .NET', 5, (select id from subject where code = 'PRN212')),\r\n       ('Delegate ,Event_LINQ', 6, (select id from subject where code = 'PRN212')),\r\n       ('Building Windows Presentation Foundation (WPF) Application', 7,\r\n        (select id from subject where code = 'PRN212')),\r\n       ('Working with Databases Using Entity Framework Core', 8, (select id from subject where code = 'PRN212')),\r\n       ('Working with Files and System.IO', 9, (select id from subject where code = 'PRN212')),\r\n       ('Working with XML and JSON Serializing', 10, (select id from subject where code = 'PRN212')),\r\n       ('Concurrency Programming', 11, (select id from subject where code = 'PRN212'));\r\n\r\nINSERT INTO question(content, lesson_id, status)\r\nVALUES ('What is the difference between `String` and `string` in C#?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('Can ASP.NET Core work with the .NET Framework?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('What are the components of MVC (Model-View-Controller)?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('What is inheritance in .NET?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('What’s the difference between a class and an object?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('What is managed code in .NET?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1);\r\n\r\nINSERT INTO answer(content, is_correct, question_id)\r\nVALUES ('`String` is an alias for `System.String`.', 1,\r\n        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),\r\n       ('`string` is an alias for `System.String`.', 0,\r\n        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),\r\n       ('There is no difference; they are interchangeable.', 0,\r\n        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),\r\n       ('`String` is a value type, and `string` is a reference type.', 0,\r\n        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),\r\n\r\n       ('No, ASP.NET Core only works with .NET Core.', 0,\r\n        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),\r\n       ('Yes, ASP.NET Core can work with both .NET Core and .NET Framework.', 1,\r\n        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),\r\n       ('ASP.NET Core is independent of any framework.', 0,\r\n        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),\r\n       ('ASP.NET Core is deprecated.', 0,\r\n        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),\r\n\r\n       ('Model, View, and Controller', 1,\r\n        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),\r\n       ('Model, ViewModel, and Controller', 0,\r\n        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),\r\n       ('Model, View, and Service', 0,\r\n        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),\r\n       ('Model, View, and Middleware', 0,\r\n        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),\r\n\r\n       ('It allows a class to inherit properties from an interface.', 0,\r\n        (select id from question where content = 'What is inheritance in .NET?')),\r\n       ('It promotes code reusability by allowing a class to inherit properties and behaviors from another class.', 1,\r\n        (select id from question where content = 'What is inheritance in .NET?')),\r\n       ('It is a way to create new classes from existing classes.', 0,\r\n        (select id from question where content = 'What is inheritance in .NET?')),\r\n       ('It is used to implement multiple inheritance.', 0,\r\n        (select id from question where content = 'What is inheritance in .NET?')),\r\n\r\n       ('A class is an instance of an object.', 0,\r\n        (select id from question where content = 'What’s the difference between a class and an object?')),\r\n       ('A class is a blueprint for creating objects.', 1,\r\n        (select id from question where content = 'What’s the difference between a class and an object?')),\r\n       ('An object is a blueprint for creating classes.', 0,\r\n        (select id from question where content = 'What’s the difference between a class and an object?')),\r\n       ('There is no difference; they are synonyms.', 0,\r\n        (select id from question where content = 'What’s the difference between a class and an object?')),\r\n\r\n       ('Code that runs outside the .NET runtime environment.', 0,\r\n        (select id from question where content = 'What is managed code in .NET?')),\r\n       ('Code that directly interacts with the operating system.', 0,\r\n        (select id from question where content = 'What is managed code in .NET?')),\r\n       ('Code that runs within the .NET runtime environment.', 1,\r\n        (select id from question where content = 'What is managed code in .NET?')),\r\n       ('Code that is written in unmanaged languages.', 0,\r\n        (select id from question where content = 'What is managed code in .NET?'));\r\n\r\ninsert into material(uri)\r\nvalues ('assets\\\\material\\\\Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),\r\n       ('assets\\\\material\\\\Chapter 02 - C# Programming.pptx');\r\n\r\ninsert into material_lesson (material_id, lesson_id)\r\nvalues ((select id\r\n         from material\r\n         where uri = 'assets\\\\material\\\\Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),\r\n        (SELECT id FROM lesson WHERE name = 'Introduction to .NET Platform - Visual Studio.NET')),\r\n\r\n       ((select id from material where uri = 'assets\\\\material\\\\Chapter 02 - C# Programming.pptx'),\r\n        (SELECT id FROM lesson WHERE name = 'C# Programming'));\r\n\r\nupdate user\r\nset avt = '../assets/img/admin1.png'\r\nwhere email = 'admin1@email.com';\r\n\r\n-- Insert sample flashcard sets with created_by column\r\nINSERT INTO flashcard_set (name, subject_id, created_by)\r\nVALUES ('PRN: OOP Basics', (SELECT id FROM subject WHERE code = 'PRN212'),\r\n        (SELECT id FROM user WHERE email = 'admin1@email.com')),\r\n       ('SWR: Agile Principles', (SELECT id FROM subject WHERE code = 'SWR302'),\r\n        (SELECT id FROM user WHERE email = 'admin1@email.com'));\r\n\r\n-- Insert sample flashcard questions\r\nINSERT INTO flashcard_question (term, definition, flashcard_set_id)\r\nVALUES ('Inheritance', 'A mechanism where a new class can inherit properties and methods of an existing class.',\r\n        (SELECT id FROM flashcard_set WHERE name = 'PRN: OOP Basics')),\r\n       ('Encapsulation', 'A principle of wrapping data and code as a single unit.',\r\n        (SELECT id FROM flashcard_set WHERE name = 'PRN: OOP Basics')),\r\n       ('Scrum', 'An agile process framework for managing complex knowledge work.',\r\n        (SELECT id FROM flashcard_set WHERE name = 'SWR: Agile Principles')),\r\n       ('Kanban',\r\n        'A method for managing the creation of products with an emphasis on continual delivery while not overburdening the development team.',\r\n        (SELECT id FROM flashcard_set WHERE name = 'SWR: Agile Principles'));\r\n\r\nselect *\r\nfrom flashcard_question;\r\nselect *\r\nfrom subject;\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/database/database design.sql b/database/database design.sql
---- a/database/database design.sql	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/database/database design.sql	(date 1721423119552)
-@@ -113,10 +113,10 @@
- create table lesson
- (
-     id         int auto_increment primary key,
--    name       varchar(100) unique not null,
--    `order`    int                 not null,
--    subject_id int                 not null,
--    status     bit default 1,
-+    name       varchar(100),
-+    `order`    int,
-+    subject_id int,
-+    status		bit default 1,
- 
-     foreign key (subject_id) references subject (id)
- );
-@@ -140,46 +140,43 @@
- create table question
- (
-     id        int auto_increment primary key,
--    content   varchar(255) not null,
--    lesson_id int default null,
--    status    bit          not null,
--
--    foreign key (lesson_id) references lesson (id)
-+    content   varchar(255),
-+    lesson_id int,
-+    status    bit,
-+    
-+    foreign key (lesson_id) references lesson(id)
- );
- 
- create table answer
- (
-     id          int auto_increment primary key,
--    content     varchar(255) not null,
--    is_correct  bit          not null,
--    question_id int          not null,
-+    content     varchar(255),
-+    is_correct  bit,
-+    question_id int,
- 
-     foreign key (question_id) references question (id)
- );
- 
--create table test
--(
--    id             int primary key,
--    name           varchar(255),
--    no_of_question smallint
-+create table test(
-+	id				int primary key,
-+    name			varchar(255),
-+	no_of_question 	smallint
- );
- 
--create table test_group
--(
--    test_id  int,
--    group_id int,
--
--    foreign key (test_id) references test (id),
--    foreign key (group_id) references `group` (id)
-+create table test_group(
-+	test_id		int,
-+    group_id 	int,
-+    
-+    foreign key (test_id) references test(id),
-+    foreign key (group_id) references `group`(id)
- );
- 
--create table test_lesson
--(
--    test_id   int,
--    lesson_id int,
--
--    foreign key (test_id) references test (id),
--    foreign key (lesson_id) references `lesson` (id)
-+create table test_lesson(
-+	test_id		int,
-+    lesson_id 	int,
-+    
-+    foreign key (test_id) references test(id),
-+    foreign key (lesson_id) references `lesson`(id)
- );
- 
- create table result
-@@ -191,11 +188,11 @@
-     attempt         int,
-     user_id         int,
-     exam_subject_id int,
--    test_id         int,
-+    test_id 		int,
- 
-     foreign key (user_id) references user (id),
-     foreign key (exam_subject_id) references subject (id),
--    foreign key (test_id) references test (id)
-+    foreign key (test_id) references test(id)
- );
- 
- create table result_details
-@@ -203,22 +200,22 @@
-     id          int primary key auto_increment,
-     result_id   int,
-     question_id int,
--    is_scored   bit,
--    content     varchar(255),
-+    is_scored	bit,
-+    content		varchar(255),
- 
--    foreign key (result_id) references result (id)
-+    foreign key (result_id) references result(id)
- );
- 
- create table result_answer_selected
- (
--    id                int auto_increment primary key,
--    result_details_id int,
--    answer_id         int,
--    content           varchar(100),
--    is_correct        bit,
--    is_selected       bit,
-+    id                	int auto_increment primary key,
-+    result_details_id 	int,
-+    answer_id         	int,
-+    content				varchar(100),
-+    is_correct			bit,
-+    is_selected       	bit,
- 
--    foreign key (result_details_id) references result_details (id)
-+    foreign key (result_details_id) references result_details(id)
- );
- 
- insert into role(id, name)
-@@ -229,22 +226,21 @@
- 
- -- Insert users
- INSERT INTO user (name, email, password, role, status)
--VALUES ('ThuyBT02', 'thuybt02@fpt.edu.vn', 'password', 2, 1),
--       ('KienNT', 'kiennt@fpt.edu.vn', 'password', 2, 1),
--       ('HungNM142', 'hungnm142@fpt.edu.vn', 'password', 2, 1),
--       ('LinhDTT43', 'linhdtt43@fpt.edu.vn', 'password', 2, 1),
--       ('Hoannn6', 'hoannn6@fpt.edu.vn', 'password', 2, 1),
--       ('Doan Binh An', 'ExampleEmail@fpt.edu.vn', 'password', 3, 1),
--       ('admin', 'admin1@email.com', 'a', 0, 1),
--       ('manager', 'manager1@email.com', 'a', 1, 1),
--       ('teacher', 'teacher1@email.com', 'a', 2, 1),
--       ('student', 'student1@email.com', 'a', 3, 1),
-+VALUES ('ThuyBT02', 'thuybt02@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
-+       ('KienNT', 'kiennt@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
-+       ('HungNM142', 'hungnm142@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
-+       ('LinhDTT43', 'linhdtt43@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
-+       ('Hoannn6', 'hoannn6@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
-+       ('Doan Binh An', 'ExampleEmail@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 3, 1),
-+       ('admin', 'admin1@email.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 0, 1),
-+       ('manager', 'manager1@email.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 1, 1),
-+       ('teacher', 'teacher1@email.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
-+       ('student', 'student1@email.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 3, 1),
-        ('Duong Quan Hao', 'ngunguoi123ys@gmail.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6',
--        0, 1);
--
--update user
--set avt = 'assets/img/annandmaryann.png'
--where email = 'ngunguoi123ys@gmail.com';
-+			0, 1);
-+	
-+update user set avt = 'assets/img/annandmaryann.png' where email = 'ngunguoi123ys@gmail.com';
-+update user set avt = 'assets/img/admin1.png' where email = 'admin1@email.com';
- 
- -- Insert subjects
- INSERT INTO subject (code, name, status, exam_no_of_questions)
-@@ -311,99 +307,256 @@
-        ('Collections and Generics', 4, (select id from subject where code = 'PRN212')),
-        ('Design Pattern in .NET', 5, (select id from subject where code = 'PRN212')),
-        ('Delegate ,Event_LINQ', 6, (select id from subject where code = 'PRN212')),
--       ('Building Windows Presentation Foundation (WPF) Application', 7,
--        (select id from subject where code = 'PRN212')),
-+       ('Building Windows Presentation Foundation (WPF) Application', 7, (select id from subject where code = 'PRN212')),
-        ('Working with Databases Using Entity Framework Core', 8, (select id from subject where code = 'PRN212')),
-        ('Working with Files and System.IO', 9, (select id from subject where code = 'PRN212')),
-        ('Working with XML and JSON Serializing', 10, (select id from subject where code = 'PRN212')),
--       ('Concurrency Programming', 11, (select id from subject where code = 'PRN212'));
-+       ('Concurrency Programming', 11, (select id from subject where code = 'PRN212')),
-+       ('Introduction to the course', 1, (select id from subject where code = 'SWT301')),
-+       ('Fundamentals of testing', 2, (select id from subject where code = 'SWT301')),
-+       ('Testing throughout the software life cycle', 3, (select id from subject where code = 'SWT301')),
-+       ('Static techniques', 4, (select id from subject where code = 'SWT301')),
-+       ('Test techniques', 5, (select id from subject where code = 'SWT301')),
-+       ('Test management', 6, (select id from subject where code = 'SWT301')),
-+       ('Test management tools', 7,(select id from subject where code = 'SWT301'));
- 
--INSERT INTO question(content, lesson_id, status)
--VALUES ('What is the difference between `String` and `string` in C#?',
--        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
--       ('Can ASP.NET Core work with the .NET Framework?',
--        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
--       ('What are the components of MVC (Model-View-Controller)?',
--        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
--       ('What is inheritance in .NET?',
--        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
--       ('What’s the difference between a class and an object?',
--        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
--       ('What is managed code in .NET?',
--        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1);
-+set @lesson_id = (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'
-+        and subject_id = (select id from subject where code = 'PRN212'));
-+INSERT INTO question(content, status, lesson_id)
-+VALUES ('What is the difference between `String` and `string` in C#?', 1, @lesson_id),
-+       ('Can ASP.NET Core work with the .NET Framework?', 1, @lesson_id),
-+       ('What are the components of MVC (Model-View-Controller)?', 1, @lesson_id),
-+       ('What is inheritance in .NET?', 1, @lesson_id),
-+       ('What’s the difference between a class and an object?', 1, @lesson_id),
-+       ('What is managed code in .NET?', 1, @lesson_id);
- 
-+set @question_id = (select id from question where content = 'What is the difference between `String` and `string` in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer(content, is_correct, question_id)
-+VALUES ('`String` is an alias for `System.String`.', 1, @question_id),
-+       ('`string` is an alias for `System.String`.', 0, @question_id),
-+       ('There is no difference; they are interchangeable.', 0, @question_id),
-+       ('`String` is a value type, and `string` is a reference type.', 0, @question_id);
-+
-+set @question_id = (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?'
-+					and lesson_id = @lesson_id);
- INSERT INTO answer(content, is_correct, question_id)
--VALUES ('`String` is an alias for `System.String`.', 1,
--        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),
--       ('`string` is an alias for `System.String`.', 0,
--        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),
--       ('There is no difference; they are interchangeable.', 0,
--        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),
--       ('`String` is a value type, and `string` is a reference type.', 0,
--        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),
-+VALUES ('No, ASP.NET Core only works with .NET Core.', 0, @question_id),
-+       ('Yes, ASP.NET Core can work with both .NET Core and .NET Framework.', 1, @question_id),
-+       ('ASP.NET Core is independent of any framework.', 0, @question_id),
-+       ('ASP.NET Core is deprecated.', 0, @question_id);
-+       
-+set @question_id = (select id from question where content = 'What are the components of MVC (Model-View-Controller)?'
-+					and lesson_id = @lesson_id);       
-+INSERT INTO answer(content, is_correct, question_id)
-+VALUES ('Model, View, and Controller', 1, @question_id),
-+       ('Model, ViewModel, and Controller', 0, @question_id),
-+       ('Model, View, and Service', 0, @question_id),
-+       ('Model, View, and Middleware', 0, @question_id);
-+       
-+set @question_id = (select id from question where content = 'What is inheritance in .NET?'
-+					and lesson_id = @lesson_id);           
-+INSERT INTO answer(content, is_correct, question_id)
-+VALUES ('It allows a class to inherit properties from an interface.', 0, @question_id),
-+       ('It promotes code reusability by allowing a class to inherit properties and behaviors from another class.', 1, @question_id),
-+       ('It is a way to create new classes from existing classes.', 0, @question_id),
-+       ('It is used to implement multiple inheritance.', 0, @question_id);
-+       
-+set @question_id = (select id from question where content = 'What’s the difference between a class and an object?'
-+					and lesson_id = @lesson_id);      
-+INSERT INTO answer(content, is_correct, question_id)
-+VALUES ('A class is an instance of an object.', 0, @question_id),
-+       ('A class is a blueprint for creating objects.', 1, @question_id),
-+       ('An object is a blueprint for creating classes.', 0, @question_id),
-+       ('There is no difference; they are synonyms.', 0, @question_id);
-+       
-+set @question_id = (select id from question where content = 'What is managed code in .NET?'
-+					and lesson_id = @lesson_id);  
-+INSERT INTO answer(content, is_correct, question_id)
-+VALUES ('Code that runs outside the .NET runtime environment.', 0, @question_id),
-+       ('Code that directly interacts with the operating system.', 0, @question_id),
-+       ('Code that runs within the .NET runtime environment.', 1, @question_id),
-+       ('Code that is written in unmanaged languages.', 0, @question_id);
-+       
-+set @lesson_id = (select id from lesson where name = 'Object-Oriented Programming'
-+        and subject_id = (select id from subject where code = 'PRN212'));
-+INSERT INTO question (content, status, lesson_id) VALUES
-+('What is Object-Oriented Programming (OOP)?', 1, @lesson_id),
-+('What are the four fundamental principles of OOP?', 1, @lesson_id),
-+('Explain the concept of a class and an object in C#.', 1, @lesson_id),
-+('What is encapsulation and how is it implemented in C#?', 1, @lesson_id),
-+('Describe inheritance and provide an example in C#.', 1, @lesson_id),
-+('What is polymorphism and how is it achieved in C#?', 1, @lesson_id),
-+('Explain abstraction with an example in C#.', 1, @lesson_id),
-+('What are access modifiers in C# and what are their types?', 1, @lesson_id),
-+('How do you create a constructor in C# and what is its purpose?', 1, @lesson_id),
-+('What is the difference between a class and an interface in C#?', 1, @lesson_id),
-+('How can you implement multiple inheritance in C#?', 1, @lesson_id),
-+('What is method overloading and method overriding in C#?', 1, @lesson_id),
-+('Explain the concept of properties in C#.', 1, @lesson_id),
-+('What is the difference between a field and a property in C#?', 1, @lesson_id),
-+('How do you implement an abstract class in C#?', 1, @lesson_id),
-+('What is the purpose of the `virtual` keyword in C#?', 1, @lesson_id),
-+('Explain the use of the `sealed` keyword in C#.', 1, @lesson_id),
-+('What is the difference between `public`, `private`, `protected`, and `internal` access modifiers?', 1, @lesson_id);
-+
-+set @question_id = (select id from question where content = 'What is Object-Oriented Programming (OOP)?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A programming paradigm based on functions', 0),
-+(@question_id, 'A programming paradigm based on objects and classes', 1),
-+(@question_id, 'A programming paradigm based on data structures', 0),
-+(@question_id, 'A programming paradigm based on algorithms', 0);
-+
-+set @question_id = (select id from question where content = 'What are the four fundamental principles of OOP?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) Encapsulation, Inheritance, Polymorphism, Abstraction', 1),
-+(@question_id, 'B) Encapsulation, Inheritance, Polymorphism, Aggregation', 0),
-+(@question_id, 'C) Encapsulation, Inheritance, Polymorphism, Composition', 0),
-+(@question_id, 'D) Encapsulation, Inheritance, Polymorphism, Association', 0);
-+
-+set @question_id = (select id from question where content = 'Explain the concept of a class and an object in C#.'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) A class is an instance of an object', 0),
-+(@question_id, 'B) An object is a blueprint of a class', 0),
-+(@question_id, 'C) A class is a blueprint for creating objects', 1),
-+(@question_id, 'D) An object is a method in a class', 0);
-+
-+set @question_id = (select id from question where content = 'What is encapsulation and how is it implemented in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) Encapsulation is the process of inheriting properties', 0),
-+(@question_id, 'B) Encapsulation is the process of hiding implementation details', 1),
-+(@question_id, 'C) Encapsulation is the process of overloading methods', 0),
-+(@question_id, 'D) Encapsulation is the process of overriding methods', 0);
-+
-+set @question_id = (select id from question where content = 'Describe inheritance and provide an example in C#.'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) Inheritance is when a class contains another class', 0),
-+(@question_id, 'B) Inheritance is when a class is derived from another class', 1),
-+(@question_id, 'C) Inheritance is when a class implements an interface', 0),
-+(@question_id, 'D) Inheritance is when a class has multiple constructors', 0);
- 
--       ('No, ASP.NET Core only works with .NET Core.', 0,
--        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),
--       ('Yes, ASP.NET Core can work with both .NET Core and .NET Framework.', 1,
--        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),
--       ('ASP.NET Core is independent of any framework.', 0,
--        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),
--       ('ASP.NET Core is deprecated.', 0,
--        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),
-+set @question_id = (select id from question where content = 'What is polymorphism and how is it achieved in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) Polymorphism is the ability to take multiple forms', 1),
-+(@question_id, 'B) Polymorphism is the ability to inherit multiple classes', 0),
-+(@question_id, 'C) Polymorphism is the ability to override methods', 0),
-+(@question_id, 'D) Polymorphism is the ability to overload methods', 0);
- 
--       ('Model, View, and Controller', 1,
--        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),
--       ('Model, ViewModel, and Controller', 0,
--        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),
--       ('Model, View, and Service', 0,
--        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),
--       ('Model, View, and Middleware', 0,
--        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),
-+set @question_id = (select id from question where content = 'Explain abstraction with an example in C#.'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) Abstraction is the process of hiding implementation details', 1),
-+(@question_id, 'B) Abstraction is the process of inheriting properties', 0),
-+(@question_id, 'C) Abstraction is the process of overloading methods', 0),
-+(@question_id, 'D) Abstraction is the process of overriding methods', 0);
- 
--       ('It allows a class to inherit properties from an interface.', 0,
--        (select id from question where content = 'What is inheritance in .NET?')),
--       ('It promotes code reusability by allowing a class to inherit properties and behaviors from another class.', 1,
--        (select id from question where content = 'What is inheritance in .NET?')),
--       ('It is a way to create new classes from existing classes.', 0,
--        (select id from question where content = 'What is inheritance in .NET?')),
--       ('It is used to implement multiple inheritance.', 0,
--        (select id from question where content = 'What is inheritance in .NET?')),
-+set @question_id = (select id from question where content = 'What are access modifiers in C# and what are their types?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) Public, Private, Protected, Internal', 1),
-+(@question_id, 'B) Public, Private, Protected, External', 0),
-+(@question_id, 'C) Public, Private, Protected, Static', 0),
-+(@question_id, 'D) Public, Private, Protected, Final', 0);
- 
--       ('A class is an instance of an object.', 0,
--        (select id from question where content = 'What’s the difference between a class and an object?')),
--       ('A class is a blueprint for creating objects.', 1,
--        (select id from question where content = 'What’s the difference between a class and an object?')),
--       ('An object is a blueprint for creating classes.', 0,
--        (select id from question where content = 'What’s the difference between a class and an object?')),
--       ('There is no difference; they are synonyms.', 0,
--        (select id from question where content = 'What’s the difference between a class and an object?')),
-+set @question_id = (select id from question where content = 'How do you create a constructor in C# and what is its purpose?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) A constructor is created using the `new` keyword and initializes objects', 0),
-+(@question_id, 'B) A constructor is created using the `class` keyword and initializes objects', 0),
-+(@question_id, 'C) A constructor is created using the `void` keyword and initializes objects', 0),
-+(@question_id, 'D) A constructor is created using the class name and initializes objects', 1);
- 
--       ('Code that runs outside the .NET runtime environment.', 0,
--        (select id from question where content = 'What is managed code in .NET?')),
--       ('Code that directly interacts with the operating system.', 0,
--        (select id from question where content = 'What is managed code in .NET?')),
--       ('Code that runs within the .NET runtime environment.', 1,
--        (select id from question where content = 'What is managed code in .NET?')),
--       ('Code that is written in unmanaged languages.', 0,
--        (select id from question where content = 'What is managed code in .NET?'));
-+set @question_id = (select id from question where content = 'What is the difference between a class and an interface in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) A class can inherit multiple interfaces, but an interface cannot inherit classes', 0),
-+(@question_id, 'B) A class can have implementations, but an interface cannot', 0),
-+(@question_id, 'C) A class can be instantiated, but an interface cannot', 0),
-+(@question_id, 'D) All of the above', 1);
-+
-+set @question_id = (select id from question where content = 'How can you implement multiple inheritance in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) By using multiple classes', 0),
-+(@question_id, 'B) By using multiple interfaces', 1),
-+(@question_id, 'C) By using a single class and multiple interfaces', 0),
-+(@question_id, 'D) By using multiple classes and interfaces', 0);
-+
-+set @question_id = (select id from question where content = 'What is method overloading and method overriding in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) Overloading is defining multiple methods with the same name but different parameters; Overriding is redefining a base class method in a derived class', 1),
-+(@question_id, 'B) Overloading is redefining a base class method in a derived class; Overriding is defining multiple methods with the same name but different parameters', 0),
-+(@question_id, 'C) Overloading is defining multiple methods with the same name and parameters; Overriding is redefining a base class method in a derived class', 0),
-+(@question_id, 'D) Overloading is redefining a base class method in a derived class; Overriding is defining multiple methods with the same name and parameters', 0);
-+
-+set @question_id = (select id from question where content = 'Explain the concept of properties in C#.'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) Properties are methods that provide access to class fields', 0),
-+(@question_id, 'B) Properties are variables that store data', 0),
-+(@question_id, 'C) Properties are special methods that provide a flexible mechanism to read, write, or compute the value of a private field', 1),
-+(@question_id, 'D) Properties are classes that contain methods', 0);
-+
-+set @question_id = (select id from question where content = 'What is the difference between a field and a property in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) A field is a variable of any type that is declared directly in a class; A property is a member that provides a flexible mechanism to read, write, or compute the value of a private field', 1),
-+(@question_id, 'B) A field is a method that provides access to class data; A property is a variable that stores data', 0),
-+(@question_id, 'C) A field is a class that contains methods; A property is a method that provides access to class data', 0),
-+(@question_id, 'D) A field is a variable that stores data; A property is a method that provides access to class data', 0);
-+
-+set @question_id = (select id from question where content = 'How do you implement an abstract class in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) By using the `abstract` keyword and providing implementations for all methods', 0),
-+(@question_id, 'B) By using the `abstract` keyword and providing implementations for some methods', 1),
-+(@question_id, 'C) By using the `abstract` keyword and not providing implementations for any methods', 0),
-+(@question_id, 'D) By using the `abstract` keyword and providing implementations for at least one method', 0);
-+
-+set @question_id = (select id from question where content = 'What is the purpose of the `virtual` keyword in C#?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) To define a method that can be overridden in a derived class', 1),
-+(@question_id, 'B) To define a method that cannot be overridden in a derived class', 0),
-+(@question_id, 'C) To define a method that must be overridden in a derived class', 0),
-+(@question_id, 'D) To define a method that is static', 0);
-+
-+set @question_id = (select id from question where content = 'Explain the use of the `sealed` keyword in C#.'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) To prevent a class from being inherited', 0),
-+(@question_id, 'B) To prevent a method from being overridden', 0),
-+(@question_id, 'C) To prevent a class from being instantiated', 0),
-+(@question_id, 'D) Both A and B', 1);
-+
-+set @question_id = (select id from question where content = 'What is the difference between `public`, `private`, `protected`, and `internal` access modifiers?'
-+					and lesson_id = @lesson_id);
-+INSERT INTO answer (question_id, content, is_correct) VALUES
-+(@question_id, 'A) `public` allows access from anywhere; `private` restricts access to the containing class; `protected` allows access within the containing class and derived classes; `internal` allows access within the same assembly', 1),
-+(@question_id, 'B) `public` allows access from anywhere; `private` restricts access to the containing class; `protected` allows access within the containing class and derived classes; `internal` allows access within the same namespace', 0),
-+(@question_id, 'C) `public` allows access from anywhere; `private` restricts access to the containing class; `protected` allows access within the containing class and derived classes; `internal` allows access within the same project', 0),
-+(@question_id, 'D) `public` allows access from anywhere; `private` restricts access to the containing class; `protected` allows access within the containing class and derived classes; `internal` allows access within the same solution', 0);
- 
- insert into material(uri)
--values ('assets\\material\\Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),
--       ('assets\\material\\Chapter 02 - C# Programming.pptx');
-+values ('assets/material/Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),
-+       ('assets/material/Chapter 02 - C# Programming.pptx');
- 
- insert into material_lesson (material_id, lesson_id)
- values ((select id
-          from material
--         where uri = 'assets\\material\\Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),
-+         where uri = 'assets/material/Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),
-         (SELECT id FROM lesson WHERE name = 'Introduction to .NET Platform - Visual Studio.NET')),
- 
--       ((select id from material where uri = 'assets\\material\\Chapter 02 - C# Programming.pptx'),
-+       ((select id from material where uri = 'assets/material/Chapter 02 - C# Programming.pptx'),
-         (SELECT id FROM lesson WHERE name = 'C# Programming'));
- 
--update user
--set avt = '../assets/img/admin1.png'
--where email = 'admin1@email.com';
--
- -- Insert sample flashcard sets with created_by column
- INSERT INTO flashcard_set (name, subject_id, created_by)
- VALUES ('PRN: OOP Basics', (SELECT id FROM subject WHERE code = 'PRN212'),
-@@ -426,4 +579,4 @@
- select *
- from flashcard_question;
- select *
--from subject;
-+from subject;
-\ No newline at end of file
-Index: web/WEB-INF/views/question/newquestion.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>New Question</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n        <script>\r\n            function setActiveTab(currentPage) {\r\n                if (currentPage === 'enterData') {\r\n                    document.getElementById(\"navs-pills-enter-data\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = true;\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonImportFile\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonImportFile\").ariaSelected = false;\r\n                } else {\r\n                    document.getElementById(\"navs-pills-import-file\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonImportFile\").ariaSelected = true;\r\n                    document.getElementById(\"buttonImportFile\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = false;\r\n                }\r\n            }\r\n            function getActiveTab() {\r\n                if (document.getElementById(\"buttonImportFile\").className === 'nav-link active') {\r\n                    return \"inportFile\";\r\n                } else {\r\n                    return \"enterData\";\r\n                }\r\n            }\r\n            function setActiveTabForRefresh() {\r\n                document.getElementById('currentPage').value = getActiveTab();\r\n            }\r\n        </script>\r\n\r\n    </head>\r\n\r\n    <body onload=\"setActiveTab('${requestScope.currentPage}');\">\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Question /</span> New question</h4>\r\n\r\n                            <form id=\"newQuestionForm\" method=\"post\" action=\"${pageContext.request.contextPath}/question/new\" enctype=\"multipart/form-data\">\r\n                                <div style=\"width: 100%;\">\r\n                                    <input type=\"hidden\" name=\"action\" id=\"action\"/>\r\n                                    <input type=\"hidden\" name=\"deletedId\" id=\"deletedId\"/>\r\n                                    <input type=\"hidden\" name=\"currentPage\" id=\"currentPage\"/>\r\n                                    <div class=\"row\" style=\"width: 100%\">\r\n                                        <div class=\"input-group mr-3 mb-4\">\r\n                                            <label for=\"subjectselect\">Subject: </label>\r\n                                            <select style=\"height: 38px;\" name=\"subjectId\" id=\"subjectselect\" class=\"mr-3 ml-3\" \r\n                                                    onchange=\"document.getElementById('action').value = 'changeSubjectAndLesson';\r\n                                                            setActiveTabForRefresh();\r\n                                                            document.getElementById('newQuestionForm').submit();\"\r\n                                                    onmousedown=\"if (this.options.length > 5) {\r\n                                                                this.size = 5;\r\n                                                                document.getElementById('subjectselect').style.height = '115px';\r\n                                                            }\"  \r\n                                                    onblur=\"this.size = 0;\r\n                                                            document.getElementById('subjectselect').style.height = '38px';\">\r\n                                                <c:if test=\"${(requestScope.subject == null)}\">\r\n                                                    <option selected>All subjects</option>\r\n                                                </c:if>\r\n                                                <c:if test=\"${(requestScope.subject != null)}\">\r\n                                                    <option>All subjects</option>\r\n                                                </c:if>\r\n                                                <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                                    <c:if test=\"${subject.id == requestScope.subject.id}\">\r\n                                                        <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${subject.id != requestScope.subject.id}\">\r\n                                                        <option value=\"${subject.id}\">${subject.code}</option>\r\n                                                    </c:if>\r\n                                                </c:forEach>\r\n                                            </select>\r\n                                            <label for=\"lessonSelect\">Lesson: </label>\r\n                                            <select style=\"height: 38px;\" name=\"lessonId\" id=\"lessonSelect\" class=\"mr-3 ml-3\" \r\n                                                    onchange=\"document.getElementById('action').value = 'changeSubjectAndLesson';\r\n                                                            setActiveTabForRefresh();\r\n                                                            document.getElementById('newQuestionForm').submit();\"\r\n                                                    onmousedown=\"if (this.options.length > 5) {\r\n                                                                this.size = 5;\r\n                                                                document.getElementById('lessonSelect').style.height = '115px';\r\n                                                            }\"  \r\n                                                    onblur=\"this.size = 0;\r\n                                                            document.getElementById('lessonSelect').style.height = '38px';\">\r\n                                                <c:if test=\"${(requestScope.lesson == null)}\">\r\n                                                    <option selected>All lessons</option>\r\n                                                </c:if>\r\n                                                <c:if test=\"${(requestScope.lesson != null)}\">\r\n                                                    <option>All lessons</option>\r\n                                                </c:if>\r\n                                                <c:forEach items=\"${requestScope.lessonList}\" var=\"lesson\">\r\n                                                    <c:if test=\"${lesson.id == requestScope.lesson.id}\">\r\n                                                        <option value=\"${lesson.id}\" selected>${lesson.name}</option>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${lesson.id != requestScope.lesson.id}\">\r\n                                                        <option value=\"${lesson.id}\">${lesson.name}</option>\r\n                                                    </c:if>\r\n                                                </c:forEach>\r\n                                            </select>\r\n                                            <c:if test=\"${requestScope.lessonErr != null}\">\r\n                                                <h5 style=\"color: red;\">${requestScope.lessonErr}</h5>\r\n                                            </c:if>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"nav-align-top mb-4\">\r\n                                                <ul class=\"nav nav-pills mb-3\" role=\"tablist\">\r\n                                                    <li class=\"nav-item\">\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            id=\"buttonEnterData\"\r\n                                                            role=\"tab\"\r\n                                                            data-bs-toggle=\"tab\"\r\n                                                            data-bs-target=\"#navs-pills-enter-data\"\r\n                                                            aria-controls=\"navs-pills-enter-data\">\r\n                                                            Enter question data\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li class=\"nav-item\">\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            id=\"buttonImportFile\"\r\n                                                            role=\"tab\"\r\n                                                            data-bs-toggle=\"tab\"\r\n                                                            data-bs-target=\"#navs-pills-import-file\"\r\n                                                            aria-controls=\"navs-pills-import-file\">\r\n                                                            Import with .xls file\r\n                                                        </button>\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <div class=\"tab-content\" style=\"width: 100%;\">\r\n                                                    <div class=\"tab-pane fade\" id=\"navs-pills-enter-data\" role=\"tabpanel\">\r\n                                                        <div class=\"col-xxl\">\r\n                                                            <div class=\"card mb-4\">\r\n                                                                <div class=\"card-header d-flex align-items-center justify-content-between mb-3\">\r\n                                                                    <small class=\"text-muted float-end\">Input question and answers content</small>\r\n                                                                </div>\r\n                                                                <div class=\"card-body\">\r\n                                                                    <div class=\"row mb-3\">\r\n                                                                        <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname2\">Question</label>\r\n                                                                        <div class=\"col-sm-10\">\r\n                                                                            <textarea name=\"question\" id=\"basic-icon-default-fullname2\"\r\n                                                                                      class=\"form-control border-top-0 border-right-0 border-left-0 p-0\" \r\n                                                                                      rows=\"5\" placeholder=\"Question content\">${requestScope.question.content}</textarea>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <c:if test=\"${requestScope.questionErr != null}\">\r\n                                                                        <div class=\"row mb-3\">\r\n                                                                            <div class=\"col-sm-2\"></div>\r\n                                                                            <div class=\"col-sm-10\">\r\n                                                                                <h5 style=\"color: red;\">${requestScope.questionErr}</h5>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${requestScope.answerErr != null}\">\r\n                                                                        <div class=\"row mb-3\">\r\n                                                                            <div class=\"col-sm-2\"></div>\r\n                                                                            <div class=\"col-sm-10\">\r\n                                                                                <h5 style=\"color: red;\">${requestScope.answerErr}</h5>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </c:if>\r\n                                                                    <c:forEach items=\"${requestScope.answerList}\" var=\"answer\">\r\n                                                                        <div class=\"row mb-3\">\r\n                                                                            <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname\">Answer</label>\r\n\r\n                                                                            <div class=\"col-sm-9\">\r\n                                                                                <div class=\"input-group\">\r\n\r\n                                                                                    <c:if test=\"${answer.isCorrect}\">\r\n                                                                                        <span style=\"height: 38px; width: 38px;\" class=\"input-group-text\"></span>\r\n                                                                                        <input\r\n                                                                                            class=\"form-check-input mt-0 ml-2\"\r\n                                                                                            type=\"checkbox\" style=\"align-self: center; \"\r\n                                                                                            name=\"${answer.id}isCorrect\"\r\n                                                                                            checked/>\r\n                                                                                    </c:if>\r\n                                                                                    <c:if test=\"${!answer.isCorrect}\">\r\n                                                                                        <span style=\"height: 38px; width: 38px;\" class=\"input-group-text\"></span>\r\n                                                                                        <input\r\n                                                                                            class=\"form-check-input mt-0 ml-2\"\r\n                                                                                            name=\"${answer.id}isCorrect\"\r\n                                                                                            type=\"checkbox\" style=\"align-self: center; \"/>\r\n                                                                                    </c:if>\r\n\r\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"basic-icon-default-fullname\"\r\n                                                                                           name=\"${answer.id}\"\r\n                                                                                           value=\"${answer.content}\"/>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <c:if test=\"${requestScope.answerList.size() > 2}\">\r\n                                                                                <div class=\"col-sm-1\">\r\n                                                                                    <button style=\"height: 38px; width: 38px;\" class=\"btn btn-icon\"\r\n                                                                                            type=\"submit\"\r\n                                                                                            onclick=\"document.getElementById('action').value = 'deleteAnswer';\r\n                                                                                                    document.getElementById('deletedId').value = ${answer.id};\">\r\n                                                                                        <i style=\"color: red;\" class=\"bx bx-trash\"></i>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                            </c:if>\r\n                                                                        </div>\r\n                                                                    </c:forEach>\r\n                                                                    <div class=\"row mb-3\">\r\n                                                                        <div class=\"col-sm-2\"></div>\r\n                                                                        <div class=\"col-sm-10\">\r\n                                                                            <button type=\"submit\" style=\"height: 38px; width: 38px;\" \r\n                                                                                    class=\"btn btn-icon btn-primary\"\r\n                                                                                    onclick=\"document.getElementById('action').value = 'addAnswer';\">\r\n                                                                                <i class=\"bx bx-plus\"></i>\r\n                                                                            </button>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"row mb-3\">\r\n                                                                        <div class=\"col-sm-2\"></div>\r\n                                                                        <div class=\"col-sm-10\">\r\n                                                                            <button style=\"height: 38px;\" class=\"btn btn-primary\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('action').value = 'insertQuestion'\">\r\n                                                                                Add question\r\n                                                                            </button>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"tab-pane fade\" id=\"navs-pills-import-file\" role=\"tabpanel\">\r\n                                                        <div class=\"row mb-3\">\r\n                                                            <label for=\"formFile\" class=\"form-label\">Choose an excel file</label>\r\n                                                            <div class=\"col-sm-9\">\r\n                                                                <input class=\"form-control\" type=\"file\" id=\"formFile\"\r\n                                                                       accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\"\r\n                                                                       name=\"file\"\r\n                                                                       style=\"width: 100%;\"/>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-3\">\r\n                                                                <button\r\n                                                                    style=\"height: 38px;\" class=\"btn btn-primary ml-3\"\r\n                                                                    type=\"submit\"\r\n                                                                    onclick=\"document.getElementById('action').value = 'insertQuestionByFile'\">\r\n                                                                    Import file\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <c:if test=\"${(requestScope.fileErr != null) && (!requestScope.fileErr.isEmpty())}\">\r\n                                                            <div class=\"row mb-3\">\r\n                                                                <h5 style=\"color: red;\">Import file failed</h5>\r\n                                                            </div>\r\n                                                        </c:if>\r\n                                                        <p>\r\n                                                            Please follow this template to import question with Excel file\r\n                                                            <a class=\"btn btn-info\" href=\"template.xlsx\"\r\n                                                               style=\"color: white; text-decoration: none; height: 38px;\" download>Download template</a>\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/web/WEB-INF/views/question/newquestion.jsp b/web/WEB-INF/views/question/newquestion.jsp
---- a/web/WEB-INF/views/question/newquestion.jsp	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/web/WEB-INF/views/question/newquestion.jsp	(date 1721423113118)
-@@ -114,16 +114,19 @@
- 
-                             <h4 class="py-3 mb-4"><span class="text-muted fw-light">Question /</span> New question</h4>
- 
--                            <form id="newQuestionForm" method="post" action="${pageContext.request.contextPath}/question/new" enctype="multipart/form-data">
-+                            <form id="newQuestionForm" method="post" action="${pageContext.request.contextPath}/question/new" 
-+                                  enctype="multipart/form-data">
-                                 <div style="width: 100%;">
-                                     <input type="hidden" name="action" id="action"/>
-                                     <input type="hidden" name="deletedId" id="deletedId"/>
-                                     <input type="hidden" name="currentPage" id="currentPage"/>
-+                                    <input type="hidden" name="change" id="change"/>
-                                     <div class="row" style="width: 100%">
-                                         <div class="input-group mr-3 mb-4">
-                                             <label for="subjectselect">Subject: </label>
-                                             <select style="height: 38px;" name="subjectId" id="subjectselect" class="mr-3 ml-3" 
--                                                    onchange="document.getElementById('action').value = 'changeSubjectAndLesson';
-+                                                    onchange="document.getElementById('change').value = 'subject';
-+                                                            document.getElementById('action').value = 'changeSubjectAndLesson';
-                                                             setActiveTabForRefresh();
-                                                             document.getElementById('newQuestionForm').submit();"
-                                                     onmousedown="if (this.options.length > 5) {
-@@ -149,7 +152,8 @@
-                                             </select>
-                                             <label for="lessonSelect">Lesson: </label>
-                                             <select style="height: 38px;" name="lessonId" id="lessonSelect" class="mr-3 ml-3" 
--                                                    onchange="document.getElementById('action').value = 'changeSubjectAndLesson';
-+                                                    onchange="document.getElementById('change').value = 'lesson';
-+                                                            document.getElementById('action').value = 'changeSubjectAndLesson';
-                                                             setActiveTabForRefresh();
-                                                             document.getElementById('newQuestionForm').submit();"
-                                                     onmousedown="if (this.options.length > 5) {
-@@ -337,7 +341,7 @@
-                             </form>
-                             <hr class="my-5" />
- 
--
-+                            <a class="btn btn-primary" href="${pageContext.request.contextPath}/question">Back</a>
- 
-                         </div>
-                         <!-- / Content -->
-Index: nbproject/private/private.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><<<<<<< HEAD\r\ndeploy.ant.properties.file=C:\\\\Users\\\\janec\\\\AppData\\\\Roaming\\\\NetBeans\\\\17\\\\tomcat101.properties\r\nj2ee.server.home=C:/Program Files/Apache Software Foundation/Tomcat 10.1\r\nj2ee.server.instance=tomcat101:home=C:\\\\Program Files\\\\Apache Software Foundation\\\\Tomcat 10.1\r\njavac.debug=true\r\njavadoc.preview=true\r\nselected.browser=SL[/Browsers/MicrosoftEdgeBrowser\r\nuser.properties.file=C:\\\\Users\\\\PC\\\\AppData\\\\Roaming\\\\NetBeans\\\\17\\\\build.properties\r\n=======\r\ndeploy.ant.properties.file=C:\\\\Users\\\\PC\\\\AppData\\\\Roaming\\\\NetBeans\\\\17\\\\tomcat101.properties\r\nj2ee.server.home=C:/Program Files/Apache Software Foundation/Tomcat 10.1\r\nj2ee.server.instance=tomcat101:home=C:\\\\Program Files\\\\Apache Software Foundation\\\\Tomcat 10.1\r\n>>>>>>> 3e5956e5bfb70681caef0e0eb378d018bb808990\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>ISO-8859-1
-===================================================================
-diff --git a/nbproject/private/private.properties b/nbproject/private/private.properties
---- a/nbproject/private/private.properties	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/nbproject/private/private.properties	(date 1721423113096)
-@@ -5,9 +5,9 @@
- javac.debug=true
- javadoc.preview=true
- selected.browser=SL[/Browsers/MicrosoftEdgeBrowser
--user.properties.file=C:\\Users\\PC\\AppData\\Roaming\\NetBeans\\17\\build.properties
-+user.properties.file=C:\\Users\\DELL\\AppData\\Roaming\\NetBeans\\17\\build.properties
- =======
--deploy.ant.properties.file=C:\\Users\\PC\\AppData\\Roaming\\NetBeans\\17\\tomcat101.properties
-+deploy.ant.properties.file=C:\\Users\\DELL\\AppData\\Roaming\\NetBeans\\17\\tomcat101.properties
- j2ee.server.home=C:/Program Files/Apache Software Foundation/Tomcat 10.1
- j2ee.server.instance=tomcat101:home=C:\\Program Files\\Apache Software Foundation\\Tomcat 10.1
- >>>>>>> 3e5956e5bfb70681caef0e0eb378d018bb808990
-Index: src/java/controller/classes/ClassListServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.classes;\r\n\r\nimport dal.ClassDAO;\r\nimport dal.SubjectDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport java.sql.SQLException;\r\nimport model.classes.Classes;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"ClassListServlet\", urlPatterns = {\"/classlist\"})\r\npublic class ClassListServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet ClassServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet ClassServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    ClassDAO classDAO = new ClassDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    void refreshSession(HttpServletRequest request) {\r\n        HttpSession session = request.getSession();\r\n        session.setAttribute(\"user\", session.getAttribute(\"user\"));\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            request.setAttribute(\"list\", classDAO.getAllClasses());\r\n            request.getRequestDispatcher(\"classlist.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"addnewclass\":\r\n                    addNewClass(request, response);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n    void addNewClass(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String code = request.getParameter(\"code\");\r\n        String err = \"\";\r\n\r\n        if (code.isEmpty()) {\r\n            err = \"Code cannot be empty!\";\r\n        } else {\r\n            try {\r\n                classDAO.addNewClass(code);\r\n            } catch (SQLException e) {\r\n                err = e.getMessage();\r\n            }\r\n        }\r\n\r\n        if (!err.isEmpty()) {\r\n            request.setAttribute(\"err\", err);\r\n            request.setAttribute(\"code\", code);\r\n        }\r\n\r\n        request.setAttribute(\"list\", classDAO.getAllClasses());\r\n        request.getRequestDispatcher(\"classlist.jsp\").forward(request, response);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/classes/ClassListServlet.java b/src/java/controller/classes/ClassListServlet.java
---- a/src/java/controller/classes/ClassListServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/classes/ClassListServlet.java	(date 1721423113107)
-@@ -12,7 +12,7 @@
- import jakarta.servlet.http.HttpSession;
- import java.sql.SQLException;
- import model.classes.Classes;
--import model.user.User;
-+import model.User;
- 
- @WebServlet(name = "ClassListServlet", urlPatterns = {"/classlist"})
- public class ClassListServlet extends HttpServlet {
-Index: src/java/dal/MaterialDAO.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dal;\r\n\r\nimport model.Material;\r\nimport java.io.Serializable;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\n\r\npublic class MaterialDAO extends DBContext implements Serializable {\r\n\r\n    public MaterialDAO() {\r\n    }\r\n\r\n    private Material getMaterialInfo(ResultSet rs) throws SQLException {\r\n        Material m = new Material();\r\n\r\n        m.setId(rs.getInt(\"id\"));\r\n        String uri = rs.getString(\"uri\");\r\n        m.setUri(uri);\r\n\r\n        String[] parts = uri.split(\"/\");\r\n        m.setName(parts[parts.length - 1]);\r\n\r\n        return m;\r\n    }\r\n\r\n    public ArrayList<Material> getAllMaterialOfALesson(int lessonId) {\r\n        ArrayList<Material> ret = new ArrayList<>();\r\n        String sql = \"select * from material where id in (\"\r\n                + \"select material_id from material_lesson where lesson_id = ?);\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, lessonId);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Material m = getMaterialInfo(rs);\r\n                ret.add(m);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public boolean isMaterialExist(int lessonId, String uri)\r\n            throws SQLException {\r\n        String sql = \"select m.uri as uri \"\r\n                + \"from material m join material_lesson ml where \"\r\n                + \"m.id = ml.material_id \"\r\n                + \"and uri = ? \"\r\n                + \"and ml.lesson_id = ?; \";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, uri);\r\n        st.setInt(2, lessonId);\r\n        ResultSet rs = st.executeQuery();\r\n        if (rs.next()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private void insertIntoMaterial(String uri) throws SQLException {\r\n        String sql = \"insert into material(uri) values (?);\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, uri);\r\n        st.execute();\r\n    }\r\n\r\n    private void insertIntoMaterial_Lesson(int lessonId, String uri) throws SQLException {\r\n        String sql = \"insert into material_lesson(lesson_id, material_id)\"\r\n                + \"values (?,\"\r\n                + \"(select id from material where uri = ?))\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, lessonId);\r\n        st.setString(2, uri);\r\n        st.execute();\r\n    }\r\n\r\n    public void insertMaterial(int lessonId, String uri) throws SQLException {\r\n        insertIntoMaterial(uri);\r\n        insertIntoMaterial_Lesson(lessonId, uri);\r\n    }\r\n\r\n    public void removeFromMaterial_Lesson(int lessonId, int materialId) throws SQLException {\r\n        String sql = \"delete from material_lesson where\"\r\n                + \" lesson_id = ? and material_id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, lessonId);\r\n        st.setInt(2, materialId);\r\n        st.execute();\r\n    }\r\n\r\n    public boolean isMaterialUsed(int materialId) throws SQLException {\r\n        String sql = \"select * from material_lesson where material_id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, materialId);\r\n        ResultSet rs = st.executeQuery();\r\n        return rs.next();\r\n    }\r\n\r\n    public Material getMaterialMatchId(int materialId) throws SQLException {\r\n        String sql = \"select * from material where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, materialId);\r\n        ResultSet rs = st.executeQuery();\r\n        if (rs.next()) {\r\n            return getMaterialInfo(rs);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void removeMaterial(Material m) throws SQLException {\r\n        String sql = \"delete from material where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        \r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/dal/MaterialDAO.java b/src/java/dal/MaterialDAO.java
---- a/src/java/dal/MaterialDAO.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/dal/MaterialDAO.java	(date 1721423113114)
-@@ -113,7 +113,8 @@
-     public void removeMaterial(Material m) throws SQLException {
-         String sql = "delete from material where id = ?;";
-         PreparedStatement st = connection.prepareStatement(sql);
--        
-+        st.setInt(1, m.getId());
-+        st.execute();
-     }
- 
- }
-Index: src/java/controller/classes/ClassDetailsServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.classes;\r\n\r\nimport dal.ClassDAO;\r\nimport dal.SubjectDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport java.sql.SQLException;\r\nimport model.classes.Classes;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"ClassDetailsServlet\", urlPatterns = {\"/classdetails\"})\r\npublic class ClassDetailsServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet ClassDetailsServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet ClassDetailsServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    ClassDAO classDAO = new ClassDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    void refreshSession(HttpServletRequest request) {\r\n        HttpSession session = request.getSession();\r\n        session.setAttribute(\"user\", session.getAttribute(\"user\"));\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"viewclassdetails\":\r\n                    viewClassDetails(request, response);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"updateclass\":\r\n                    updateClass(request, response);\r\n            }\r\n        }\r\n    }\r\n\r\n    void viewClassDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n\r\n        request.setAttribute(\"classes\", classDAO.getClassMatchId(id));\r\n        request.setAttribute(\"list\", classDAO.getAllClasses());\r\n        request.setAttribute(\"action\", \"viewclassdetails\");\r\n        request.setAttribute(\"subjectlist\", subjectDAO.getAllSubjectNotAssigned(id));\r\n        request.getRequestDispatcher(\"classdetails.jsp\").forward(request, response);\r\n    }\r\n\r\n    void updateClass(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n        String code = request.getParameter(\"code\");\r\n        String err = \"\";\r\n        Classes c = new Classes();\r\n\r\n        if (code.isEmpty()) {\r\n            err = \"Code cannot be blank!\";\r\n        } else {\r\n            c = new Classes(id, code);\r\n            try {\r\n                classDAO.updateClass(c);\r\n            } catch (SQLException e) {\r\n                err = \"Code already exist!\";\r\n            }\r\n        }\r\n\r\n        if (err.isEmpty()) {\r\n            response.sendRedirect(\"classlist\");\r\n        } else {\r\n            request.setAttribute(\"classes\", c);\r\n            request.setAttribute(\"err\", err);\r\n            request.setAttribute(\"subjectlist\", subjectDAO.getAllSubjectNotAssigned(id));\r\n            request.getRequestDispatcher(\"classdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/classes/ClassDetailsServlet.java b/src/java/controller/classes/ClassDetailsServlet.java
---- a/src/java/controller/classes/ClassDetailsServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/classes/ClassDetailsServlet.java	(date 1721423113107)
-@@ -12,7 +12,7 @@
- import jakarta.servlet.http.HttpSession;
- import java.sql.SQLException;
- import model.classes.Classes;
--import model.user.User;
-+import model.User;
- 
- @WebServlet(name = "ClassDetailsServlet", urlPatterns = {"/classdetails"})
- public class ClassDetailsServlet extends HttpServlet {
-Index: nbproject/project.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>annotation.processing.enabled=true\r\nannotation.processing.enabled.in.editor=true\r\nannotation.processing.processors.list=\r\nannotation.processing.run.all.processors=true\r\nannotation.processing.source.output=${build.generated.sources.dir}/ap-source-output\r\nbuild.classes.dir=${build.web.dir}/WEB-INF/classes\r\nbuild.classes.excludes=**/*.java,**/*.form\r\nbuild.dir=build\r\nbuild.generated.dir=${build.dir}/generated\r\nbuild.generated.sources.dir=${build.dir}/generated-sources\r\nbuild.test.classes.dir=${build.dir}/test/classes\r\nbuild.test.results.dir=${build.dir}/test/results\r\nbuild.web.dir=${build.dir}/web\r\nbuild.web.excludes=${build.classes.excludes}\r\nclient.urlPart=\r\ncompile.jsps=false\r\nconf.dir=${source.root}/conf\r\ndebug.classpath=${build.classes.dir}:${javac.classpath}\r\ndebug.test.classpath=\\\r\n    ${run.test.classpath}\r\ndisplay.browser=true\r\n# Files to be excluded from distribution war\r\ndist.archive.excludes=\r\ndist.dir=dist\r\ndist.ear.war=${dist.dir}/${war.ear.name}\r\ndist.javadoc.dir=${dist.dir}/javadoc\r\ndist.war=${dist.dir}/${war.name}\r\nendorsed.classpath=\r\nexcludes=\r\nfile.reference.activation-1.1.1.jar=lib\\\\activation-1.1.1.jar\r\nfile.reference.commons-codec-1.15.jar=lib\\\\xls\\\\commons-codec-1.15.jar\r\nfile.reference.commons-collections4-4.4.jar=lib\\\\xls\\\\commons-collections4-4.4.jar\r\nfile.reference.commons-compress-1.21.jar=lib\\\\xls\\\\commons-compress-1.21.jar\r\nfile.reference.commons-io-2.11.0.jar=lib\\\\xls\\\\commons-io-2.11.0.jar\r\nfile.reference.commons-logging-1.2.jar=lib/commons-logging-1.2.jar\r\nfile.reference.commons-logging-1.2.jar-1=lib\\\\xls\\\\commons-logging-1.2.jar\r\nfile.reference.commons-math3-3.6.1.jar=lib\\\\xls\\\\commons-math3-3.6.1.jar\r\nfile.reference.curvesapi-1.07.jar=lib\\\\xls\\\\curvesapi-1.07.jar\r\nfile.reference.fluent-hc-4.5.5.jar=lib/fluent-hc-4.5.5.jar\r\nfile.reference.gson-2.8.2.jar=lib/gson-2.8.2.jar\r\nfile.reference.httpclient-4.5.5.jar=lib/httpclient-4.5.5.jar\r\nfile.reference.httpcore-4.4.9.jar=lib/httpcore-4.4.9.jar\r\nfile.reference.jakarta.activation-2.0.1.jar=lib\\\\xls\\\\jakarta.activation-2.0.1.jar\r\nfile.reference.jakarta.xml.bind-api-3.0.1.jar=lib\\\\xls\\\\jakarta.xml.bind-api-3.0.1.jar\r\nfile.reference.javax.activation-1.2.0.jar=lib//javax.activation-1.2.0.jar\r\nfile.reference.javax.mail.jar=lib/javax.mail.jar\r\nfile.reference.log4j-api-2.18.0.jar=lib\\\\xls\\\\log4j-api-2.18.0.jar\r\nfile.reference.mysql-connector-j-8.4.0.jar=lib/mysql-connector-j-8.4.0.jar\r\nfile.reference.jakarta.servlet.jsp.jstl-2.0.0.jar=lib/jakarta.servlet.jsp.jstl-2.0.0.jar\r\nfile.reference.jakarta.servlet.jsp.jstl-api-2.0.0.jar=lib/jakarta.servlet.jsp.jstl-api-2.0.0.jar\r\nfile.reference.json-20240303.jar=lib/json-20240303.jar\r\nfile.reference.mysql-connector-j-8.4.0.jar=lib/mysql-connector-j-8.4.0.jar\r\nfile.reference.poi-5.2.3.jar=lib\\\\xls\\\\poi-5.2.3.jar\r\nfile.reference.poi-examples-5.2.3.jar=lib\\\\xls\\\\poi-examples-5.2.3.jar\r\nfile.reference.poi-excelant-5.2.3.jar=lib\\\\xls\\\\poi-excelant-5.2.3.jar\r\nfile.reference.poi-javadoc-5.2.3.jar=lib\\\\xls\\\\poi-javadoc-5.2.3.jar\r\nfile.reference.poi-ooxml-5.2.3.jar=lib\\\\xls\\\\poi-ooxml-5.2.3.jar\r\nfile.reference.poi-ooxml-full-5.2.3.jar=lib\\\\xls\\\\poi-ooxml-full-5.2.3.jar\r\nfile.reference.poi-ooxml-lite-5.2.3.jar=lib\\\\xls\\\\poi-ooxml-lite-5.2.3.jar\r\nfile.reference.poi-scratchpad-5.2.3.jar=lib\\\\xls\\\\poi-scratchpad-5.2.3.jar\r\nfile.reference.restfb-2.3.0.jar=lib/restfb-2.3.0.jar\r\nfile.reference.slf4j-api-1.7.36.jar=lib\\\\xls\\\\slf4j-api-1.7.36.jar\r\nfile.reference.SparseBitSet-1.2.jar=lib\\\\xls\\\\SparseBitSet-1.2.jar\r\nfile.reference.xmlbeans-5.1.1.jar=lib\\\\xls\\\\xmlbeans-5.1.1.jar\r\nincludes=**\r\nj2ee.compile.on.save=true\r\nj2ee.copy.static.files.on.save=true\r\nj2ee.deploy.on.save=true\r\nj2ee.platform=10-web\r\nj2ee.platform.classpath=${j2ee.server.home}/bin/tomcat-juli.jar:${j2ee.server.home}/lib/annotations-api.jar:${j2ee.server.home}/lib/catalina-ant.jar:${j2ee.server.home}/lib/catalina-ha.jar:${j2ee.server.home}/lib/catalina-ssi.jar:${j2ee.server.home}/lib/catalina-storeconfig.jar:${j2ee.server.home}/lib/catalina-tribes.jar:${j2ee.server.home}/lib/catalina.jar:${j2ee.server.home}/lib/ecj-4.27.jar:${j2ee.server.home}/lib/el-api.jar:${j2ee.server.home}/lib/jakartaee-migration-1.0.8-shaded.jar:${j2ee.server.home}/lib/jasper-el.jar:${j2ee.server.home}/lib/jasper.jar:${j2ee.server.home}/lib/jaspic-api.jar:${j2ee.server.home}/lib/jsp-api.jar:${j2ee.server.home}/lib/servlet-api.jar:${j2ee.server.home}/lib/tomcat-api.jar:${j2ee.server.home}/lib/tomcat-coyote.jar:${j2ee.server.home}/lib/tomcat-dbcp.jar:${j2ee.server.home}/lib/tomcat-i18n-cs.jar:${j2ee.server.home}/lib/tomcat-i18n-de.jar:${j2ee.server.home}/lib/tomcat-i18n-es.jar:${j2ee.server.home}/lib/tomcat-i18n-fr.jar:${j2ee.server.home}/lib/tomcat-i18n-ja.jar:${j2ee.server.home}/lib/tomcat-i18n-ko.jar:${j2ee.server.home}/lib/tomcat-i18n-pt-BR.jar:${j2ee.server.home}/lib/tomcat-i18n-ru.jar:${j2ee.server.home}/lib/tomcat-i18n-zh-CN.jar:${j2ee.server.home}/lib/tomcat-jdbc.jar:${j2ee.server.home}/lib/tomcat-jni.jar:${j2ee.server.home}/lib/tomcat-util-scan.jar:${j2ee.server.home}/lib/tomcat-util.jar:${j2ee.server.home}/lib/tomcat-websocket.jar:${j2ee.server.home}/lib/websocket-api.jar:${j2ee.server.home}/lib/websocket-client-api.jar\r\nj2ee.server.type=Tomcat\r\njar.compress=false\r\njavac.classpath=\\\r\n    ${file.reference.commons-logging-1.2.jar}:\\\r\n    ${file.reference.fluent-hc-4.5.5.jar}:\\\r\n    ${file.reference.gson-2.8.2.jar}:\\\r\n    ${file.reference.httpclient-4.5.5.jar}:\\\r\n    ${file.reference.httpcore-4.4.9.jar}:\\\r\n    ${file.reference.mysql-connector-j-8.4.0.jar}:\\\r\n    ${file.reference.jakarta.servlet.jsp.jstl-2.0.0.jar}:\\\r\n    ${file.reference.jakarta.servlet.jsp.jstl-api-2.0.0.jar}:\\\r\n    ${file.reference.json-20240303.jar}:\\\r\n    ${file.reference.restfb-2.3.0.jar}:\\\r\n    ${file.reference.javax.mail.jar}:\\\r\n    ${file.reference.activation-1.1.1.jar}:\\\r\n    ${file.reference.javax.activation-1.2.0.jar}:\\\r\n    ${file.reference.SparseBitSet-1.2.jar}:\\\r\n    ${file.reference.commons-codec-1.15.jar}:\\\r\n    ${file.reference.commons-collections4-4.4.jar}:\\\r\n    ${file.reference.commons-compress-1.21.jar}:\\\r\n    ${file.reference.commons-io-2.11.0.jar}:\\\r\n    ${file.reference.commons-logging-1.2.jar-1}:\\\r\n    ${file.reference.commons-math3-3.6.1.jar}:\\\r\n    ${file.reference.curvesapi-1.07.jar}:\\\r\n    ${file.reference.jakarta.activation-2.0.1.jar}:\\\r\n    ${file.reference.jakarta.xml.bind-api-3.0.1.jar}:\\\r\n    ${file.reference.log4j-api-2.18.0.jar}:\\\r\n    ${file.reference.poi-5.2.3.jar}:\\\r\n    ${file.reference.poi-examples-5.2.3.jar}:\\\r\n    ${file.reference.poi-excelant-5.2.3.jar}:\\\r\n    ${file.reference.poi-javadoc-5.2.3.jar}:\\\r\n    ${file.reference.poi-ooxml-5.2.3.jar}:\\\r\n    ${file.reference.poi-ooxml-full-5.2.3.jar}:\\\r\n    ${file.reference.poi-ooxml-lite-5.2.3.jar}:\\\r\n    ${file.reference.poi-scratchpad-5.2.3.jar}:\\\r\n    ${file.reference.slf4j-api-1.7.36.jar}:\\\r\n    ${file.reference.xmlbeans-5.1.1.jar}\r\n    ${file.reference.mysql-connector-j-8.4.0.jar}:\\\r\n    ${file.reference.json-20240303.jar}:\\\r\n    ${file.reference.restfb-2.3.0.jar}:\\\r\n    ${file.reference.jakarta.servlet.jsp.jstl-2.0.0.jar}:\\\r\n    ${file.reference.jakarta.servlet.jsp.jstl-api-2.0.0.jar}\r\n# Space-separated list of extra javac options\r\njavac.compilerargs=\r\njavac.debug=true\r\njavac.deprecation=false\r\njavac.processorpath=\\\r\n    ${javac.classpath}\r\njavac.source=17\r\njavac.target=17\r\njavac.test.classpath=\\\r\n    ${javac.classpath}:\\\r\n    ${build.classes.dir}\r\njavac.test.processorpath=\\\r\n    ${javac.test.classpath}\r\njavadoc.additionalparam=\r\njavadoc.author=false\r\njavadoc.encoding=${source.encoding}\r\njavadoc.noindex=false\r\njavadoc.nonavbar=false\r\njavadoc.notree=false\r\njavadoc.preview=true\r\njavadoc.private=false\r\njavadoc.splitindex=true\r\njavadoc.use=true\r\njavadoc.version=false\r\njavadoc.windowtitle=\r\nlib.dir=${web.docbase.dir}/WEB-INF/lib\r\npersistence.xml.dir=${conf.dir}\r\nplatform.active=default_platform\r\nresource.dir=setup\r\nrun.test.classpath=\\\r\n    ${javac.test.classpath}:\\\r\n    ${build.test.classes.dir}\r\n# Space-separated list of JVM arguments used when running a class with a main method or a unit test\r\n# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value):\r\nrunmain.jvmargs=\r\nsource.encoding=UTF-8\r\nsource.root=src\r\nsrc.dir=${source.root}/java\r\ntest.src.dir=test\r\nwar.content.additional=\r\nwar.ear.name=${war.name}\r\nwar.name=se1808-g6.war\r\nweb.docbase.dir=web\r\nwebinf.dir=web/WEB-INF\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>ISO-8859-1
-===================================================================
-diff --git a/nbproject/project.properties b/nbproject/project.properties
---- a/nbproject/project.properties	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/nbproject/project.properties	(date 1721423113097)
-@@ -67,7 +67,7 @@
- j2ee.copy.static.files.on.save=true
- j2ee.deploy.on.save=true
- j2ee.platform=10-web
--j2ee.platform.classpath=${j2ee.server.home}/bin/tomcat-juli.jar:${j2ee.server.home}/lib/annotations-api.jar:${j2ee.server.home}/lib/catalina-ant.jar:${j2ee.server.home}/lib/catalina-ha.jar:${j2ee.server.home}/lib/catalina-ssi.jar:${j2ee.server.home}/lib/catalina-storeconfig.jar:${j2ee.server.home}/lib/catalina-tribes.jar:${j2ee.server.home}/lib/catalina.jar:${j2ee.server.home}/lib/ecj-4.27.jar:${j2ee.server.home}/lib/el-api.jar:${j2ee.server.home}/lib/jakartaee-migration-1.0.8-shaded.jar:${j2ee.server.home}/lib/jasper-el.jar:${j2ee.server.home}/lib/jasper.jar:${j2ee.server.home}/lib/jaspic-api.jar:${j2ee.server.home}/lib/jsp-api.jar:${j2ee.server.home}/lib/servlet-api.jar:${j2ee.server.home}/lib/tomcat-api.jar:${j2ee.server.home}/lib/tomcat-coyote.jar:${j2ee.server.home}/lib/tomcat-dbcp.jar:${j2ee.server.home}/lib/tomcat-i18n-cs.jar:${j2ee.server.home}/lib/tomcat-i18n-de.jar:${j2ee.server.home}/lib/tomcat-i18n-es.jar:${j2ee.server.home}/lib/tomcat-i18n-fr.jar:${j2ee.server.home}/lib/tomcat-i18n-ja.jar:${j2ee.server.home}/lib/tomcat-i18n-ko.jar:${j2ee.server.home}/lib/tomcat-i18n-pt-BR.jar:${j2ee.server.home}/lib/tomcat-i18n-ru.jar:${j2ee.server.home}/lib/tomcat-i18n-zh-CN.jar:${j2ee.server.home}/lib/tomcat-jdbc.jar:${j2ee.server.home}/lib/tomcat-jni.jar:${j2ee.server.home}/lib/tomcat-util-scan.jar:${j2ee.server.home}/lib/tomcat-util.jar:${j2ee.server.home}/lib/tomcat-websocket.jar:${j2ee.server.home}/lib/websocket-api.jar:${j2ee.server.home}/lib/websocket-client-api.jar
-+j2ee.platform.classpath=${j2ee.server.home}/bin/tomcat-juli.jar:${j2ee.server.home}/lib/annotations-api.jar:${j2ee.server.home}/lib/catalina-ant.jar:${j2ee.server.home}/lib/catalina-ha.jar:${j2ee.server.home}/lib/catalina-ssi.jar:${j2ee.server.home}/lib/catalina-storeconfig.jar:${j2ee.server.home}/lib/catalina-tribes.jar:${j2ee.server.home}/lib/catalina.jar:${j2ee.server.home}/lib/ecj-4.27.jar:${j2ee.server.home}/lib/el-api.jar:${j2ee.server.home}/lib/jakartaee-migration-1.0.7-shaded.jar:${j2ee.server.home}/lib/jasper-el.jar:${j2ee.server.home}/lib/jasper.jar:${j2ee.server.home}/lib/jaspic-api.jar:${j2ee.server.home}/lib/jsp-api.jar:${j2ee.server.home}/lib/servlet-api.jar:${j2ee.server.home}/lib/tomcat-api.jar:${j2ee.server.home}/lib/tomcat-coyote.jar:${j2ee.server.home}/lib/tomcat-dbcp.jar:${j2ee.server.home}/lib/tomcat-i18n-cs.jar:${j2ee.server.home}/lib/tomcat-i18n-de.jar:${j2ee.server.home}/lib/tomcat-i18n-es.jar:${j2ee.server.home}/lib/tomcat-i18n-fr.jar:${j2ee.server.home}/lib/tomcat-i18n-ja.jar:${j2ee.server.home}/lib/tomcat-i18n-ko.jar:${j2ee.server.home}/lib/tomcat-i18n-pt-BR.jar:${j2ee.server.home}/lib/tomcat-i18n-ru.jar:${j2ee.server.home}/lib/tomcat-i18n-zh-CN.jar:${j2ee.server.home}/lib/tomcat-jdbc.jar:${j2ee.server.home}/lib/tomcat-jni.jar:${j2ee.server.home}/lib/tomcat-util-scan.jar:${j2ee.server.home}/lib/tomcat-util.jar:${j2ee.server.home}/lib/tomcat-websocket.jar:${j2ee.server.home}/lib/websocket-api.jar:${j2ee.server.home}/lib/websocket-client-api.jar
- j2ee.server.type=Tomcat
- jar.compress=false
- javac.classpath=\
-Index: nbproject/private/private.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project-private xmlns=\"http://www.netbeans.org/ns/project-private/1\">\r\n    <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"0\"/>\r\n    <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\r\n        <group>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardTest.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardMatch.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/course/CourseNewAnnouncement.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardLearn.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/user/UserDashboardController.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/web/WEB-INF/common/header.jsp</file>\r\n        </group>\r\n    </open-files>\r\n</project-private>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/nbproject/private/private.xml b/nbproject/private/private.xml
---- a/nbproject/private/private.xml	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/nbproject/private/private.xml	(date 1721423124980)
-@@ -3,12 +3,11 @@
-     <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/2" lastBookmarkId="0"/>
-     <open-files xmlns="http://www.netbeans.org/ns/projectui-open-files/2">
-         <group>
--            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardTest.java</file>
--            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardMatch.java</file>
--            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/course/CourseNewAnnouncement.java</file>
--            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardLearn.java</file>
--            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/user/UserDashboardController.java</file>
--            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/web/WEB-INF/common/header.jsp</file>
-+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/controller/LessonServlet.java</file>
-+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/web/WEB-INF/views/lesson/newlesson.jsp</file>
-+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/web/WEB-INF/views/lesson/lessonlist.jsp</file>
-+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/dal/LessonDAO.java</file>
-+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/web/WEB-INF/views/lesson/lessondetails.jsp</file>
-         </group>
-     </open-files>
- </project-private>
-Index: src/java/controller/course/CourseServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.course;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport dal.CourseDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.course.Course;\r\nimport model.course.CourseStudentCount;\r\nimport model.user.User;\r\n\r\npublic class CourseServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n            if (user == null) {\r\n                response.sendRedirect(\"login.jsp\");\r\n            } else {\r\n                CourseDAO courseDAO = new CourseDAO();\r\n                List<Course> courses = courseDAO.getAllCourse();\r\n                List<Course> myCourses = courseDAO.myCourses(user.getEmail());\r\n                \r\n                List<CourseStudentCount> courseStudentCounts = new ArrayList<>();\r\n                for (Course course : courses) {\r\n                    CourseStudentCount courseStudentCount = courseDAO.getStudentsByGroupId(course.getId());\r\n                    courseStudentCounts.add(courseStudentCount);\r\n                }\r\n\r\n                // Get current page number from request\r\n                String pageParam = request.getParameter(\"page\");\r\n                int currentPage = pageParam != null ? Integer.parseInt(pageParam) : 1;\r\n                int coursesPerPage = 3;\r\n\r\n                // Calculate total pages\r\n                int totalCourses = courses.size();\r\n                int totalPages = (int) Math.ceil((double) totalCourses / coursesPerPage);\r\n\r\n                // Calculate the start and end index for the courses to display\r\n                int startIndex = (currentPage - 1) * coursesPerPage;\r\n                int endIndex = Math.min(startIndex + coursesPerPage, totalCourses);\r\n                List<Course> coursesToDisplay = courses.subList(startIndex, endIndex);\r\n\r\n                // Set attributes for the JSP\r\n                session.setAttribute(\"courses\", courses);\r\n                session.setAttribute(\"myCourses\", myCourses);\r\n                session.setAttribute(\"courseStudentCounts\", courseStudentCounts);\r\n                request.setAttribute(\"coursesToDisplay\", coursesToDisplay);\r\n                request.setAttribute(\"currentPage\", currentPage);\r\n                request.setAttribute(\"totalPages\", totalPages);\r\n\r\n                // Forward the request to course.jsp\r\n                RequestDispatcher dispatcher = request.getRequestDispatcher(\"course.jsp\");\r\n                dispatcher.forward(request, response);\r\n            }\r\n        } catch (Exception e) {\r\n            response.sendRedirect(\"home.jsp\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/course/CourseServlet.java b/src/java/controller/course/CourseServlet.java
---- a/src/java/controller/course/CourseServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/course/CourseServlet.java	(date 1721423113108)
-@@ -13,7 +13,7 @@
- import jakarta.servlet.http.HttpSession;
- import model.course.Course;
- import model.course.CourseStudentCount;
--import model.user.User;
-+import model.User;
- 
- public class CourseServlet extends HttpServlet {
- 
-Index: src/java/controller/QuestionServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller;\r\n\r\nimport model.Question;\r\nimport model.Answer;\r\nimport common.ReadQuestionFromXlsFile;\r\nimport dal.*;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport java.sql.SQLException;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.MultipartConfig;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport jakarta.servlet.http.Part;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport model.Lesson;\r\nimport model.user.User;\r\n\r\n@MultipartConfig\r\n@WebServlet(name = \"QuestionServlet\", urlPatterns = {\"/question\", \"/question/details\", \"/question/update\", \"/question/new\"})\r\npublic class QuestionServlet extends HttpServlet {\r\n\r\n    ArrayList<Answer> answerList;\r\n    int lastAnswerId;\r\n    private final int rowPerPage = 6;\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet QuestionServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet QuestionServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    QuestionDAO questionDAO = new QuestionDAO();\r\n    AnswerDAO answerDAO = new AnswerDAO();\r\n    LessonDAO lessonDAO = new LessonDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n    ReadQuestionFromXlsFile reader = new ReadQuestionFromXlsFile();\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doPost(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        UserDAO userDAO = new UserDAO();\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else {\r\n            User u = userDAO.getUserById(user.getId());\r\n            if (u != null && u.getEmail() != null) {\r\n                session.setAttribute(\"user\", u);\r\n                if (user.getRole() > 1) {\r\n                    response.sendRedirect(\"home\");\r\n                } else {\r\n                    String action = request.getServletPath();\r\n                    switch (action) {\r\n                        case \"/question\":\r\n                            viewQuestionList(request, response);\r\n                            break;\r\n                        case \"/question/details\":\r\n                            viewQuestionDetails(request, response);\r\n                            break;\r\n                        case \"/question/update\":\r\n                            updateQuestion(request, response);\r\n                            break;\r\n                        case \"/question/new\":\r\n                            newQuestion(request, response);\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                response.sendRedirect(\"login.jsp\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private ArrayList<Question> getAllMatchKeyWord(ArrayList<Question> list, String keyWord) {\r\n        ArrayList<Question> ret = new ArrayList<>();\r\n        keyWord = keyWord.toLowerCase();\r\n        for (Question q : list) {\r\n            if (q.getContent().toLowerCase().contains(keyWord)) {\r\n                ret.add(q);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private int getNoOfPages(ArrayList<Question> list) {\r\n        int length = list.size();\r\n        if (length == 0) {\r\n            return 1;\r\n        }\r\n        int noOfPages = length / rowPerPage;\r\n        if (length % rowPerPage == 0) {\r\n            return noOfPages;\r\n        }\r\n        return noOfPages + 1;\r\n    }\r\n\r\n    private int getPage(HttpServletRequest request, int noOfPages) {\r\n        String cur = request.getParameter(\"currentPage\");\r\n        if ((cur == null) || (cur.isEmpty())) {\r\n            return 1;\r\n        }\r\n\r\n        int currentPage = Integer.parseInt(cur);\r\n        switch (request.getParameter(\"pageAction\")) {\r\n            case \"firstPage\":\r\n                return 1;\r\n            case \"prevPage\": {\r\n                currentPage--;\r\n                if (currentPage < 1) {\r\n                    return 1;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"nextPage\": {\r\n                currentPage++;\r\n                if (currentPage > noOfPages) {\r\n                    return noOfPages;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"lastPage\":\r\n                return noOfPages;\r\n        }\r\n\r\n        String newpage = request.getParameter(\"newPage\");\r\n        if ((newpage != null) && (!newpage.isEmpty())) {\r\n            int newPage = Integer.parseInt(newpage);\r\n            return newPage;\r\n        }\r\n        return currentPage;\r\n\r\n    }\r\n\r\n    private ArrayList<Question> getAllQuestionsOfPage(int page, ArrayList<Question> list) {\r\n        ArrayList<Question> ret = new ArrayList<>();\r\n        int start = rowPerPage * (page - 1) + 1;\r\n        int end = rowPerPage * page;\r\n        if (start < 1) {\r\n            start = 1;\r\n        }\r\n        if (end > list.size()) {\r\n            end = list.size();\r\n        }\r\n\r\n        for (int i = start - 1; i < end; i++) {\r\n            ret.add(list.get(i));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private void viewQuestionList(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n        ArrayList<Question> list = null;\r\n\r\n        String sid = request.getParameter(\"subjectid\");\r\n        if ((sid != null) && (!sid.equals(\"All subjects\")) && (!sid.isEmpty())) {\r\n            int subjectId = Integer.parseInt(sid);\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n\r\n            String lid = request.getParameter(\"lessonId\");\r\n            if ((lid != null) && (!lid.equals(\"All lessons\")) && (!lid.isEmpty())) {\r\n                int lessonId = Integer.parseInt(lid);\r\n                Lesson lesson = lessonDAO.getLessonMatchId(lessonId);\r\n                if (lesson.getSubjectId() == subjectId) {\r\n                    request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n                    list = questionDAO.getAllQuestionsOfALesson(lessonId);\r\n                } else {\r\n                    list = questionDAO.getAllQuestionsOfASubject(subjectId);\r\n                }\r\n            } else {\r\n                list = questionDAO.getAllQuestionsOfASubject(subjectId);\r\n            }\r\n\r\n        } else {\r\n            String lid = request.getParameter(\"lessonId\");\r\n            if ((lid != null) && (!lid.equals(\"All lessons\")) && (!lid.isEmpty())) {\r\n                int lessonId = Integer.parseInt(lid);\r\n                request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n                list = questionDAO.getAllQuestionsOfALesson(lessonId);\r\n            } else {\r\n                list = questionDAO.getAllQuestions();\r\n            }\r\n\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n        }\r\n\r\n        String keyWord = request.getParameter(\"keyword\");\r\n        if (keyWord != null) {\r\n            list = getAllMatchKeyWord(list, keyWord);\r\n        }\r\n\r\n        String sortBy = request.getParameter(\"sortBy\");\r\n        if (sortBy != null) {\r\n            switch (sortBy) {\r\n                case \"none\":\r\n                    break;\r\n                case \"content\":\r\n                    Collections.sort(list, new Question.SortByContent());\r\n                    break;\r\n                case \"subject\":\r\n                    Collections.sort(list, new Question.SortBySubject());\r\n                    break;\r\n                case \"lesson\":\r\n                    Collections.sort(list, new Question.SortByLesson());\r\n                    break;\r\n                case \"status\":\r\n                    Collections.sort(list, new Question.SortByStatus());\r\n                    break;\r\n            }\r\n        }\r\n\r\n        int noOfPages = getNoOfPages(list);\r\n        int currentPage = getPage(request, noOfPages);\r\n        list = getAllQuestionsOfPage(currentPage, list);\r\n\r\n        request.setAttribute(\"currentPage\", currentPage);\r\n        request.setAttribute(\"noOfPages\", noOfPages);\r\n        request.setAttribute(\"sortBy\", sortBy);\r\n        request.setAttribute(\"list\", list);\r\n        request.setAttribute(\"keyword\", keyWord);\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/questionlist.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void viewQuestionDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int questionId = Integer.parseInt(request.getParameter(\"questionId\"));\r\n        Question question = questionDAO.getQuestionMatchId(questionId);\r\n        if (question == null) {\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            ArrayList<Answer> answer = answerDAO.getAllAnswersOfAQuestion(questionId);\r\n            request.setAttribute(\"question\", question);\r\n            request.setAttribute(\"answers\", answer);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/question/questiondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void updateAnswer(HttpServletRequest request, HttpServletResponse response, Question question)\r\n            throws IOException, ServletException {\r\n        ArrayList<Answer> answer = answerDAO.getAllAnswersOfAQuestion(question.getId());\r\n        boolean succesful = true;\r\n        for (Answer a : answer) {\r\n            String content = request.getParameter(String.valueOf(a.getId()));\r\n            a.setContent(content);\r\n            if (request.getParameter(a.getId() + \"isCorrect\") != null) {\r\n                a.setIsCorrect(true);\r\n            } else {\r\n                a.setIsCorrect(false);\r\n            }\r\n            try {\r\n                answerDAO.updateAnswer(a);\r\n\r\n            } catch (SQLException e) {\r\n                succesful = false;\r\n                System.out.println(e.getMessage());\r\n            }\r\n        }\r\n\r\n        if (succesful) {\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            request.setAttribute(\"err\", \"Update failed!\");\r\n            request.setAttribute(\"question\", question);\r\n            request.setAttribute(\"answers\", answer);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/question/questiondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void changeQuestionStatus(Question question, HttpServletResponse response)\r\n            throws IOException {\r\n        try {\r\n            questionDAO.changeQuestionStatus(question);\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        response.sendRedirect(\"../question\");\r\n    }\r\n\r\n    private void updateQuestion(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        int questionId = Integer.parseInt(request.getParameter(\"questionId\"));\r\n        System.out.println(questionId);\r\n        Question question = questionDAO.getQuestionMatchId(questionId);\r\n        if (question == null) {\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"answerChange\":\r\n                    updateAnswer(request, response, question);\r\n                    break;\r\n                case \"changeStatus\":\r\n                    changeQuestionStatus(question, response);\r\n                    break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private void newQuestionForm(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws IOException, ServletException {\r\n        answerList = new ArrayList<>();\r\n        Answer a = new Answer();\r\n        a.setIsCorrect(false);\r\n        a.setId(1);\r\n        answerList.add(a);\r\n\r\n        Answer a1 = new Answer();\r\n        a1.setIsCorrect(false);\r\n        a1.setId(2);\r\n        answerList.add(a1);\r\n\r\n        lastAnswerId = 2;\r\n\r\n        if (subjectId != 0) {\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n        } else {\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n        }\r\n        if (lessonId != 0) {\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n        }\r\n\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n        request.setAttribute(\"answerList\", answerList);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void getAnswerListInfo(HttpServletRequest request) {\r\n        for (Answer a : answerList) {\r\n            int id = a.getId();\r\n            a.setContent(request.getParameter(String.valueOf(id)));\r\n            if (request.getParameter(id + \"isCorrect\") != null) {\r\n                a.setIsCorrect(true);\r\n            } else {\r\n                a.setIsCorrect(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void changeSubjectAndLesson(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId)\r\n            throws ServletException, IOException {\r\n        if (subjectId != 0) {\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n            if (lessonId != 0) {\r\n                Lesson l = lessonDAO.getLessonMatchId(lessonId);\r\n                if (l.getSubject().getId() == subjectId) {\r\n                    request.setAttribute(\"lesson\", l);\r\n                }\r\n            }\r\n        } else {\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n            if (lessonId != 0) {\r\n                request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n            }\r\n        }\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n\r\n        getAnswerListInfo(request);\r\n        request.setAttribute(\"answerList\", answerList);\r\n        Question q = new Question();\r\n        q.setContent(request.getParameter(\"question\"));\r\n        request.setAttribute(\"question\", q);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void addAnswer(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws ServletException, IOException {\r\n        if (subjectId != 0) {\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n        } else {\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n        }\r\n        if (lessonId != 0) {\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n        }\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n\r\n        getAnswerListInfo(request);\r\n        lastAnswerId++;\r\n        Answer a = new Answer();\r\n        a.setId(lastAnswerId);\r\n        a.setIsCorrect(false);\r\n        answerList.add(a);\r\n        request.setAttribute(\"answerList\", answerList);\r\n\r\n        Question q = new Question();\r\n        q.setContent(request.getParameter(\"question\"));\r\n        request.setAttribute(\"question\", q);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n    }\r\n\r\n    private int getIndexById(int id) {\r\n        int index = 0;\r\n        for (Answer a : answerList) {\r\n            if (a.getId() == id) {\r\n                return index;\r\n            }\r\n            index++;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    private void deleteAnswer(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws ServletException, IOException {\r\n        if (subjectId != 0) {\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n        } else {\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n        }\r\n        if (lessonId != 0) {\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n        }\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n\r\n        getAnswerListInfo(request);\r\n        int deletedId = Integer.parseInt(request.getParameter(\"deletedId\"));\r\n        answerList.remove(getIndexById(deletedId));\r\n        request.setAttribute(\"answerList\", answerList);\r\n\r\n        Question q = new Question();\r\n        q.setContent(request.getParameter(\"question\"));\r\n        request.setAttribute(\"question\", q);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void insertQuestion(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws ServletException, IOException {\r\n        boolean successful = true;\r\n        Lesson lesson = null;\r\n        if (lessonId != 0) {\r\n            lesson = lessonDAO.getLessonMatchId(lessonId);\r\n            request.setAttribute(\"lesson\", lesson);\r\n        } else {\r\n            successful = false;\r\n            request.setAttribute(\"lessonErr\", \"Please choose a lesson\");\r\n        }\r\n        getAnswerListInfo(request);\r\n        Question q = new Question();\r\n        q.setContent(request.getParameter(\"question\"));\r\n        if (q.getContent().isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"questionErr\", \"Question cannot be blank!\");\r\n        }\r\n        if (q.getContent().length() > 255) {\r\n            successful = false;\r\n            request.setAttribute(\"questionErr\", \"Question content can not exceed 255 characters!\");\r\n        }\r\n\r\n        int nonEmptyAnswers = 0;\r\n        int checked = 0;\r\n        for (Answer a : answerList) {\r\n            if (!a.getContent().isEmpty()) {\r\n                nonEmptyAnswers++;\r\n                if (a.getContent().length() > 255) {\r\n                    successful = false;\r\n                    request.setAttribute(\"answerErr\", \"Please enter answer within 255 characters!\");\r\n                    break;\r\n                } else {\r\n                    if (a.isIsCorrect()) {\r\n                        checked++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (nonEmptyAnswers < 2) {\r\n            successful = false;\r\n            request.setAttribute(\"answerErr\", \"Please enter at least 2 answers!\");\r\n        } else {\r\n            if (checked == 0) {\r\n                request.setAttribute(\"answerErr\", \"Please select at least one correct answer!\");\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            q.setLesson(lesson);\r\n            q.setStatus(true);\r\n            questionDAO.insertQuestion(q);\r\n            for (Answer a : answerList) {\r\n                answerDAO.insertAnswer(a, q);\r\n            }\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            if (subjectId != 0) {\r\n                request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n                request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n            } else {\r\n                request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n            }\r\n            request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n            request.setAttribute(\"answerList\", answerList);\r\n            request.setAttribute(\"question\", q);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n        }\r\n\r\n    }\r\n\r\n    private void insertQuestionByFile(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws ServletException, IOException {\r\n        boolean successful = true;\r\n        Lesson lesson = null;\r\n        if (lessonId != 0) {\r\n            lesson = lessonDAO.getLessonMatchId(lessonId);\r\n            request.setAttribute(\"lesson\", lesson);\r\n            Part filePart = request.getPart(\"file\");\r\n            if ((filePart == null) || (filePart.getSize() == 0)) {\r\n                successful = false;\r\n                request.setAttribute(\"fileErr\", \"Please choose a file!\");\r\n            } else {\r\n                try {\r\n                    reader.readQuestionFromFile(filePart, lesson);\r\n                } catch (IOException e) {\r\n                    successful = false;\r\n                    request.setAttribute(\"fileErr\", \"Import file failed!\");\r\n                }\r\n            }\r\n        } else {\r\n            successful = false;\r\n            request.setAttribute(\"lessonErr\", \"Please choose a lesson\");\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            if (subjectId != 0) {\r\n                request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n                request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n            } else {\r\n                request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n            }\r\n            request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n            request.setAttribute(\"answerList\", answerList);\r\n            Question q = new Question();\r\n            q.setContent(request.getParameter(\"question\"));\r\n            request.setAttribute(\"question\", q);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void newQuestion(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int subjectId = 0, lessonId = 0;\r\n        String sid = request.getParameter(\"subjectId\");\r\n        if ((sid != null) && (!sid.isEmpty()) && (!sid.equals(\"All subjects\"))) {\r\n            subjectId = Integer.parseInt(sid);\r\n        }\r\n        String lid = request.getParameter(\"lessonId\");\r\n        if ((lid != null) && (!lid.isEmpty()) && (!lid.equals(\"All lessons\"))) {\r\n            lessonId = Integer.parseInt(lid);\r\n        }\r\n\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"newQuestion\":\r\n                request.setAttribute(\"currentPage\", \"enterData\");\r\n                newQuestionForm(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"changeSubjectAndLesson\":\r\n                request.setAttribute(\"currentPage\", request.getParameter(\"currentPage\"));\r\n                changeSubjectAndLesson(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"addAnswer\":\r\n                request.setAttribute(\"currentPage\", \"enterData\");\r\n                addAnswer(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"deleteAnswer\":\r\n                request.setAttribute(\"currentPage\", \"enterData\");\r\n                deleteAnswer(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"insertQuestion\":\r\n                request.setAttribute(\"currentPage\", \"enterData\");\r\n                insertQuestion(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"insertQuestionByFile\":\r\n                request.setAttribute(\"currentPage\", \"importFile\");\r\n                insertQuestionByFile(request, response, subjectId, lessonId);\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/QuestionServlet.java b/src/java/controller/QuestionServlet.java
---- a/src/java/controller/QuestionServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/QuestionServlet.java	(date 1721423113104)
-@@ -3,6 +3,7 @@
- import model.Question;
- import model.Answer;
- import common.ReadQuestionFromXlsFile;
-+import common.StringFormatter;
- import dal.*;
- import java.io.IOException;
- import java.io.PrintWriter;
-@@ -15,10 +16,14 @@
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
- import jakarta.servlet.http.Part;
-+import java.net.Authenticator;
- import java.util.ArrayList;
- import java.util.Collections;
-+import java.util.HashSet;
-+import java.util.Set;
- import model.Lesson;
--import model.user.User;
-+import model.User;
-+import model.subject.Subject;
- 
- @MultipartConfig
- @WebServlet(name = "QuestionServlet", urlPatterns = {"/question", "/question/details", "/question/update", "/question/new"})
-@@ -60,17 +65,21 @@
-     @Override
-     protected void doPost(HttpServletRequest request, HttpServletResponse response)
-             throws ServletException, IOException {
-+
-+        String contextPath = request.getServletContext().getContextPath();
-+        String loginPage = contextPath + "/login.jsp";
-+        String homePage = contextPath + "/home";
-         UserDAO userDAO = new UserDAO();
-         HttpSession session = request.getSession();
-         User user = (User) session.getAttribute("user");
-         if (user == null) {
--            response.sendRedirect("login.jsp");
-+            response.sendRedirect(loginPage);
-         } else {
-             User u = userDAO.getUserById(user.getId());
-             if (u != null && u.getEmail() != null) {
-                 session.setAttribute("user", u);
-                 if (user.getRole() > 1) {
--                    response.sendRedirect("home");
-+                    response.sendRedirect(homePage);
-                 } else {
-                     String action = request.getServletPath();
-                     switch (action) {
-@@ -89,7 +98,7 @@
-                     }
-                 }
-             } else {
--                response.sendRedirect("login.jsp");
-+                response.sendRedirect(loginPage);
-             }
-         }
-     }
-@@ -173,43 +182,79 @@
-         return ret;
-     }
- 
--    private void viewQuestionList(HttpServletRequest request, HttpServletResponse response)
--            throws ServletException, IOException {
--
--        ArrayList<Question> list = null;
--
--        String sid = request.getParameter("subjectid");
--        if ((sid != null) && (!sid.equals("All subjects")) && (!sid.isEmpty())) {
--            int subjectId = Integer.parseInt(sid);
--            request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
--            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
--
--            String lid = request.getParameter("lessonId");
-+    private ArrayList<String> getAllSortOptions() {
-+        ArrayList<String> ret = new ArrayList<>();
-+        ret.add("None");
-+        ret.add("Content");
-+        ret.add("Subject");
-+        ret.add("Lesson");
-+        ret.add("Status");
-+        return ret;
-+    }
-+
-+    private ArrayList<Question> getQuestionsListOfLesson(HttpServletRequest request) {
-+        ArrayList<Question> list;
-+        String sid = request.getParameter("subjectId");
-+        String lid = request.getParameter("lessonId");
-+        String change = request.getParameter("change");
-+        System.out.println("'" + change + "'");
-+        if (change == null || change.isEmpty()) {
-+            int subjectId = 0;
-+            if ((sid != null) && (!sid.equals("All subjects")) && (!sid.isEmpty())) {
-+                subjectId = Integer.parseInt(sid);
-+                request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-+            } else {
-+                request.setAttribute("lessonList", lessonDAO.getAllLessons());
-+            }
-             if ((lid != null) && (!lid.equals("All lessons")) && (!lid.isEmpty())) {
-                 int lessonId = Integer.parseInt(lid);
--                Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
--                if (lesson.getSubjectId() == subjectId) {
--                    request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
--                    list = questionDAO.getAllQuestionsOfALesson(lessonId);
--                } else {
--                    list = questionDAO.getAllQuestionsOfASubject(subjectId);
--                }
-+                request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
-+                list = questionDAO.getAllQuestionsOfALesson(lessonId);
-+            } else if (subjectId != 0) {
-+                list = questionDAO.getAllQuestionsOfASubject(subjectId);
-+            } else {
-+                list = questionDAO.getAllQuestions();
-+            }
-+        } else if (change.equals("subject")) {
-+            if ((sid != null) && (!sid.equals("All subjects")) && (!sid.isEmpty())) {
-+                int subjectId = Integer.parseInt(sid);
-+                request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-+                list = questionDAO.getAllQuestionsOfASubject(subjectId);
-             } else {
--                list = questionDAO.getAllQuestionsOfASubject(subjectId);
-+                request.setAttribute("lessonList", lessonDAO.getAllLessons());
-+                list = questionDAO.getAllQuestions();
-             }
--
-         } else {
--            String lid = request.getParameter("lessonId");
-             if ((lid != null) && (!lid.equals("All lessons")) && (!lid.isEmpty())) {
-                 int lessonId = Integer.parseInt(lid);
--                request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
-+                Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
-+                System.out.println(lesson.getSubjectId());
-+                Subject subject = subjectDAO.getSubjectMatchId(lesson.getSubjectId());
-+                request.setAttribute("lesson", lesson);
-+                request.setAttribute("subject", subject);
-+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subject.getId()));
-                 list = questionDAO.getAllQuestionsOfALesson(lessonId);
-             } else {
--                list = questionDAO.getAllQuestions();
--            }
--
--            request.setAttribute("lessonList", lessonDAO.getAllLessons());
-+                if ((sid != null) && (!sid.equals("All subjects")) && (!sid.isEmpty())) {
-+                    int subjectId = Integer.parseInt(sid);
-+                    request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-+                    request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-+                    list = questionDAO.getAllQuestionsOfASubject(subjectId);
-+                } else {
-+                    request.setAttribute("lessonList", lessonDAO.getAllLessons());
-+                    list = questionDAO.getAllQuestions();
-+                }
-+            }
-         }
-+        return list;
-+    }
-+
-+    private void viewQuestionList(HttpServletRequest request, HttpServletResponse response)
-+            throws ServletException, IOException {
-+
-+        ArrayList<Question> list = getQuestionsListOfLesson(request);
- 
-         String keyWord = request.getParameter("keyword");
-         if (keyWord != null) {
-@@ -219,20 +264,20 @@
-         String sortBy = request.getParameter("sortBy");
-         if (sortBy != null) {
-             switch (sortBy) {
--                case "none":
--                    break;
--                case "content":
-+                case "Content":
-                     Collections.sort(list, new Question.SortByContent());
-                     break;
--                case "subject":
-+                case "Subject":
-                     Collections.sort(list, new Question.SortBySubject());
-                     break;
--                case "lesson":
-+                case "Lesson":
-                     Collections.sort(list, new Question.SortByLesson());
-                     break;
--                case "status":
-+                case "Status":
-                     Collections.sort(list, new Question.SortByStatus());
-                     break;
-+                default:
-+                    break;
-             }
-         }
- 
-@@ -240,6 +285,13 @@
-         int currentPage = getPage(request, noOfPages);
-         list = getAllQuestionsOfPage(currentPage, list);
- 
-+        HttpSession session = request.getSession();
-+        request.setAttribute("successful", session.getAttribute("successful"));
-+        session.removeAttribute("successful");
-+        request.setAttribute("err", session.getAttribute("err"));
-+        session.removeAttribute("err");
-+
-+        request.setAttribute("sortOptions", getAllSortOptions());
-         request.setAttribute("currentPage", currentPage);
-         request.setAttribute("noOfPages", noOfPages);
-         request.setAttribute("sortBy", sortBy);
-@@ -257,53 +309,146 @@
-             response.sendRedirect("../question");
-         } else {
-             ArrayList<Answer> answer = answerDAO.getAllAnswersOfAQuestion(questionId);
-+            int id = 0;
-+            answerList = new ArrayList<>();
-+            for (Answer a : answer) {
-+                id++;
-+                answerList.add(new Answer(id, a.getContent(), a.isIsCorrect(), question));
-+            }
-+            lastAnswerId = id;
-             request.setAttribute("question", question);
--            request.setAttribute("answers", answer);
-+            request.setAttribute("answerList", answerList);
-             request.getRequestDispatcher("/WEB-INF/views/question/questiondetails.jsp").forward(request, response);
-         }
-     }
- 
-     private void updateAnswer(HttpServletRequest request, HttpServletResponse response, Question question)
-             throws IOException, ServletException {
--        ArrayList<Answer> answer = answerDAO.getAllAnswersOfAQuestion(question.getId());
--        boolean succesful = true;
--        for (Answer a : answer) {
--            String content = request.getParameter(String.valueOf(a.getId()));
--            a.setContent(content);
--            if (request.getParameter(a.getId() + "isCorrect") != null) {
--                a.setIsCorrect(true);
--            } else {
--                a.setIsCorrect(false);
-+        boolean successful = true;
-+        String content = request.getParameter("question").trim();
-+        Question q = new Question(question.getId(), content, question.getLesson(), question.isStatus());
-+        if (q.getContent().isEmpty() || q.getContent().length() > 255) {
-+            successful = false;
-+            request.setAttribute("questionErr", "Question is empty!");
-+        }
-+
-+        getAnswerListInfo(request);
-+
-+        int nonEmptyAnswers = 0;
-+        int checked = 0;
-+        for (Answer a : answerList) {
-+            String answerContent = a.getContent().trim();
-+            a.setContent(answerContent);
-+            if (!a.getContent().isEmpty()) {
-+                nonEmptyAnswers++;
-+                if (a.getContent().length() > 255) {
-+                    successful = false;
-+                    request.setAttribute("answerErr", "Please enter answer within 255 characters!");
-+                    break;
-+                } else {
-+                    if (a.isIsCorrect()) {
-+                        checked++;
-+                    }
-+                }
-             }
--            try {
--                answerDAO.updateAnswer(a);
--
--            } catch (SQLException e) {
--                succesful = false;
--                System.out.println(e.getMessage());
-+        }
-+
-+        if (nonEmptyAnswers < 2) {
-+            successful = false;
-+            request.setAttribute("answerErr", "Please enter at least 2 answers!");
-+        } else if (checkDuplicateAnswer()) {
-+            successful = false;
-+            request.setAttribute("answerErr", "Please enter different answers!");
-+        } else if (checked == 0) {
-+            successful = false;
-+            request.setAttribute("answerErr", "Please select at least one correct answer!");
-+        }
-+
-+        if (successful) {
-+            if (!questionDAO.isQuestionExist(question)) {
-+                try {
-+                    questionDAO.updateQuestion(q);
-+                    answerDAO.deleteAllAnswersOfAQuestion(q.getId());
-+                    for (Answer a : getNonEmptyAnswerList()) {
-+                        String answerContent = a.getContent().trim();
-+                        a.setContent(answerContent);
-+                        a.setQuestion(q);
-+                        answerDAO.insertAnswer(a);
-+                    }
-+                } catch (SQLException e) {
-+                    System.out.println(e.getMessage());
-+                    successful = false;
-+                    request.setAttribute("questionErr", "Update question failed!");
-+                }
-+            } else {
-+                successful = false;
-+                request.setAttribute("questionErr", "Question already exist in subject!");
-             }
-         }
- 
--        if (succesful) {
-+        if (successful) {
-+            HttpSession session = request.getSession();
-+            session.setAttribute("successful", "Updated question successfully!");
-             response.sendRedirect("../question");
-         } else {
--            request.setAttribute("err", "Update failed!");
--            request.setAttribute("question", question);
--            request.setAttribute("answers", answer);
-+            request.setAttribute("question", q);
-+            request.setAttribute("answerList", answerList);
-             request.getRequestDispatcher("/WEB-INF/views/question/questiondetails.jsp").forward(request, response);
-         }
-     }
- 
--    private void changeQuestionStatus(Question question, HttpServletResponse response)
-+    private void changeQuestionStatus(Question question, HttpServletResponse response, HttpServletRequest request)
-             throws IOException {
-+        HttpSession session = request.getSession();
-+        String action;
-+        if (question.isStatus()) {
-+            action = "Deactivated";
-+        } else {
-+            action = "Activated";
-+        }
-         try {
-             questionDAO.changeQuestionStatus(question);
-+            session.setAttribute("successful", action + " question successfully!");
-         } catch (SQLException e) {
--            System.out.println(e.getMessage());
-+            session.setAttribute("err", action + " question failed!");
-         }
-         response.sendRedirect("../question");
-     }
- 
-+    private void update_deleteAnswer(HttpServletRequest request, HttpServletResponse response, Question question)
-+            throws ServletException, IOException {
-+        String content = request.getParameter("question");
-+        Question q = new Question(question.getId(), content, question.getLesson(), question.isStatus());
-+        request.setAttribute("question", q);
-+
-+        getAnswerListInfo(request);
-+        int deletedId = Integer.parseInt(request.getParameter("deletedId"));
-+        answerList.remove(getIndexById(deletedId));
-+        request.setAttribute("answerList", answerList);
-+
-+        request.getRequestDispatcher("/WEB-INF/views/question/questiondetails.jsp").forward(request, response);
-+    }
-+
-+    private void update_addAnswer(HttpServletRequest request, HttpServletResponse response, Question question)
-+            throws ServletException, IOException {
-+        Question q = new Question();
-+        q.setId(question.getId());
-+        q.setLesson(question.getLesson());
-+        q.setStatus(question.isStatus());
-+        q.setContent(request.getParameter("question"));
-+        request.setAttribute("question", q);
-+
-+        getAnswerListInfo(request);
-+
-+        lastAnswerId++;
-+        Answer a = new Answer();
-+        a.setId(lastAnswerId);
-+        a.setIsCorrect(false);
-+        answerList.add(a);
-+        request.setAttribute("answerList", answerList);
-+        request.getRequestDispatcher("/WEB-INF/views/question/questiondetails.jsp").forward(request, response);
-+    }
-+
-     private void updateQuestion(HttpServletRequest request, HttpServletResponse response)
-             throws IOException, ServletException {
-         int questionId = Integer.parseInt(request.getParameter("questionId"));
-@@ -313,11 +458,17 @@
-             response.sendRedirect("../question");
-         } else {
-             switch (request.getParameter("action")) {
--                case "answerChange":
--                    updateAnswer(request, response, question);
-+                case "changeStatus":
-+                    changeQuestionStatus(question, response, request);
-+                    break;
-+                case "deleteAnswer":
-+                    update_deleteAnswer(request, response, question);
-                     break;
--                case "changeStatus":
--                    changeQuestionStatus(question, response);
-+                case "addAnswer":
-+                    update_addAnswer(request, response, question);
-+                    break;
-+                default:
-+                    updateAnswer(request, response, question);
-                     break;
-             }
- 
-@@ -341,7 +492,7 @@
- 
-         if (subjectId != 0) {
-             request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
--            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
-+            request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-         } else {
-             request.setAttribute("lessonList", lessonDAO.getAllLessons());
-         }
-@@ -369,21 +520,34 @@
-     private void changeSubjectAndLesson(HttpServletRequest request, HttpServletResponse response,
-             int subjectId, int lessonId)
-             throws ServletException, IOException {
--        if (subjectId != 0) {
--            request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
--            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
--            if (lessonId != 0) {
--                Lesson l = lessonDAO.getLessonMatchId(lessonId);
--                if (l.getSubject().getId() == subjectId) {
--                    request.setAttribute("lesson", l);
--                }
-+        if (request.getParameter("change").equals("subject")) {
-+            if (subjectId == 0) {
-+                request.setAttribute("lessonList", lessonDAO.getAllLessons());
-+            } else {
-+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-             }
-         } else {
--            request.setAttribute("lessonList", lessonDAO.getAllLessons());
--            if (lessonId != 0) {
--                request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
--            }
-+            if (lessonId == 0) {
-+                if (subjectId == 0) {
-+                    request.setAttribute("lessonList", lessonDAO.getAllLessons());
-+                } else {
-+                    request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-+                }
-+            } else {
-+                Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
-+                Subject subject = subjectDAO.getSubjectMatchId(lesson.getSubjectId());
-+                request.setAttribute("subject", subject);
-+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subject.getId()));
-+            }
-+        }
-+
-+        if (subjectId != 0) {
-+            request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-+        }
-+        if (lessonId != 0) {
-+            request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
-         }
-+
-         request.setAttribute("subjectList", subjectDAO.getAllSubject());
- 
-         getAnswerListInfo(request);
-@@ -398,7 +562,7 @@
-             int subjectId, int lessonId) throws ServletException, IOException {
-         if (subjectId != 0) {
-             request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
--            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
-+            request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-         } else {
-             request.setAttribute("lessonList", lessonDAO.getAllLessons());
-         }
-@@ -436,7 +600,7 @@
-             int subjectId, int lessonId) throws ServletException, IOException {
-         if (subjectId != 0) {
-             request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
--            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
-+            request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-         } else {
-             request.setAttribute("lessonList", lessonDAO.getAllLessons());
-         }
-@@ -456,6 +620,25 @@
-         request.getRequestDispatcher("/WEB-INF/views/question/newquestion.jsp").forward(request, response);
-     }
- 
-+    private ArrayList<Answer> getNonEmptyAnswerList() {
-+        ArrayList<Answer> nonEmptyList = new ArrayList<>();
-+        for (Answer a : answerList) {
-+            if (!a.getContent().isEmpty()) {
-+                nonEmptyList.add(a);
-+            }
-+        }
-+        return nonEmptyList;
-+    }
-+
-+    private boolean checkDuplicateAnswer() {
-+        ArrayList<String> nonEmptyList = new ArrayList<>();
-+        for (Answer a : getNonEmptyAnswerList()) {
-+            nonEmptyList.add(a.getContent());
-+        }
-+        Set<String> set = new HashSet<>(nonEmptyList);
-+        return set.size() < nonEmptyList.size();
-+    }
-+
-     private void insertQuestion(HttpServletRequest request, HttpServletResponse response,
-             int subjectId, int lessonId) throws ServletException, IOException {
-         boolean successful = true;
-@@ -469,7 +652,7 @@
-         }
-         getAnswerListInfo(request);
-         Question q = new Question();
--        q.setContent(request.getParameter("question"));
-+        q.setContent(request.getParameter("question".trim()));
-         if (q.getContent().isEmpty()) {
-             successful = false;
-             request.setAttribute("questionErr", "Question cannot be blank!");
-@@ -482,6 +665,8 @@
-         int nonEmptyAnswers = 0;
-         int checked = 0;
-         for (Answer a : answerList) {
-+            String content = a.getContent().trim();
-+            a.setContent(content);
-             if (!a.getContent().isEmpty()) {
-                 nonEmptyAnswers++;
-                 if (a.getContent().length() > 255) {
-@@ -499,24 +684,42 @@
-         if (nonEmptyAnswers < 2) {
-             successful = false;
-             request.setAttribute("answerErr", "Please enter at least 2 answers!");
--        } else {
--            if (checked == 0) {
--                request.setAttribute("answerErr", "Please select at least one correct answer!");
--            }
-+        } else if (checkDuplicateAnswer()) {
-+            successful = false;
-+            request.setAttribute("answerErr", "Please enter different answers!");
-+        } else if (checked == 0) {
-+            successful = false;
-+            request.setAttribute("answerErr", "Please select at least one correct answer!");
-         }
- 
-         if (successful) {
-             q.setLesson(lesson);
-             q.setStatus(true);
--            questionDAO.insertQuestion(q);
--            for (Answer a : answerList) {
--                answerDAO.insertAnswer(a, q);
-+            if (!questionDAO.isQuestionExist(q)) {
-+                try {
-+                    questionDAO.insertQuestion(q);
-+                    for (Answer a : getNonEmptyAnswerList()) {
-+                        a.setQuestion(q);
-+                        answerDAO.insertAnswer(a);
-+                    }
-+                } catch (SQLException e) {
-+                    successful = false;
-+                    request.setAttribute("questionErr", "Adding question failed!");
-+                }
-+            } else {
-+                successful = false;
-+                request.setAttribute("questionErr", "Question already exist in subject!");
-             }
-+        }
-+
-+        if (successful) {
-+            HttpSession session = request.getSession();
-+            session.setAttribute("successful", "Insert question successfully!");
-             response.sendRedirect("../question");
-         } else {
-             if (subjectId != 0) {
-                 request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
--                request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
-+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-             } else {
-                 request.setAttribute("lessonList", lessonDAO.getAllLessons());
-             }
-@@ -532,6 +735,7 @@
-             int subjectId, int lessonId) throws ServletException, IOException {
-         boolean successful = true;
-         Lesson lesson = null;
-+        int count = 0;
-         if (lessonId != 0) {
-             lesson = lessonDAO.getLessonMatchId(lessonId);
-             request.setAttribute("lesson", lesson);
-@@ -541,7 +745,7 @@
-                 request.setAttribute("fileErr", "Please choose a file!");
-             } else {
-                 try {
--                    reader.readQuestionFromFile(filePart, lesson);
-+                    count = reader.readQuestionFromFile(filePart, lesson);
-                 } catch (IOException e) {
-                     successful = false;
-                     request.setAttribute("fileErr", "Import file failed!");
-@@ -553,11 +757,17 @@
-         }
- 
-         if (successful) {
-+            HttpSession session = request.getSession();
-+            if (count == 0) {
-+                session.setAttribute("err", "No question imported!");
-+            } else {
-+                session.setAttribute("successful", count + " questions imported successfully!");
-+            }
-             response.sendRedirect("../question");
-         } else {
-             if (subjectId != 0) {
-                 request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
--                request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
-+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
-             } else {
-                 request.setAttribute("lessonList", lessonDAO.getAllLessons());
-             }
-@@ -581,32 +791,37 @@
-         if ((lid != null) && (!lid.isEmpty()) && (!lid.equals("All lessons"))) {
-             lessonId = Integer.parseInt(lid);
-         }
--
--        switch (request.getParameter("action")) {
--            case "newQuestion":
--                request.setAttribute("currentPage", "enterData");
--                newQuestionForm(request, response, subjectId, lessonId);
--                break;
--            case "changeSubjectAndLesson":
--                request.setAttribute("currentPage", request.getParameter("currentPage"));
--                changeSubjectAndLesson(request, response, subjectId, lessonId);
--                break;
--            case "addAnswer":
--                request.setAttribute("currentPage", "enterData");
--                addAnswer(request, response, subjectId, lessonId);
--                break;
--            case "deleteAnswer":
--                request.setAttribute("currentPage", "enterData");
--                deleteAnswer(request, response, subjectId, lessonId);
--                break;
--            case "insertQuestion":
--                request.setAttribute("currentPage", "enterData");
--                insertQuestion(request, response, subjectId, lessonId);
--                break;
--            case "insertQuestionByFile":
--                request.setAttribute("currentPage", "importFile");
--                insertQuestionByFile(request, response, subjectId, lessonId);
--                break;
-+        String action = request.getParameter("action");
-+        if (action != null) {
-+            switch (request.getParameter("action")) {
-+                case "changeSubjectAndLesson":
-+                    request.setAttribute("currentPage", request.getParameter("currentPage"));
-+                    changeSubjectAndLesson(request, response, subjectId, lessonId);
-+                    break;
-+                case "addAnswer":
-+                    request.setAttribute("currentPage", "enterData");
-+                    addAnswer(request, response, subjectId, lessonId);
-+                    break;
-+                case "deleteAnswer":
-+                    request.setAttribute("currentPage", "enterData");
-+                    deleteAnswer(request, response, subjectId, lessonId);
-+                    break;
-+                case "insertQuestion":
-+                    request.setAttribute("currentPage", "enterData");
-+                    insertQuestion(request, response, subjectId, lessonId);
-+                    break;
-+                case "insertQuestionByFile":
-+                    request.setAttribute("currentPage", "importFile");
-+                    insertQuestionByFile(request, response, subjectId, lessonId);
-+                    break;
-+                default:
-+                    request.setAttribute("currentPage", "enterData");
-+                    newQuestionForm(request, response, subjectId, lessonId);
-+                    break;
-+            }
-+        } else {
-+            request.setAttribute("currentPage", "enterData");
-+            newQuestionForm(request, response, subjectId, lessonId);
-         }
-     }
- 
-Index: src/java/model/Lesson.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package model;\r\n\r\nimport java.util.Comparator;\r\nimport model.subject.Subject;\r\n\r\npublic class Lesson {\r\n\r\n    int id, subjectId, order;\r\n    String name;\r\n    boolean status;\r\n    Subject subject;\r\n\r\n    public Lesson() {\r\n    }\r\n\r\n    public Lesson(int id, int subjectId, int order, String name, boolean status, Subject subject) {\r\n        this.id = id;\r\n        this.subjectId = subjectId;\r\n        this.order = order;\r\n        this.name = name;\r\n        this.status = status;\r\n        this.subject = subject;\r\n    }\r\n\r\n    public int getOrder() {\r\n        return order;\r\n    }\r\n\r\n    public void setOrder(int order) {\r\n        this.order = order;\r\n    }\r\n\r\n    public boolean isStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(boolean status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public Subject getSubject() {\r\n        return subject;\r\n    }\r\n\r\n    public void setSubject(Subject subject) {\r\n        this.subject = subject;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public int getSubjectId() {\r\n        return subjectId;\r\n    }\r\n\r\n    public void setSubjectId(int subjectId) {\r\n        this.subjectId = subjectId;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public static class SortByName implements Comparator<Lesson> {\r\n\r\n        @Override\r\n        public int compare(Lesson l1, Lesson l2) {\r\n            return l1.getName().compareTo(l2.getName());\r\n        }\r\n\r\n    }\r\n\r\n    public static class SortByStatus implements Comparator<Lesson> {\r\n\r\n        @Override\r\n        public int compare(Lesson l1, Lesson l2) {\r\n            if (l1.isStatus() == l2.isStatus()) {\r\n                return 0;\r\n            }\r\n            if (l1.isStatus() && !l2.isStatus()) {\r\n                return -1;\r\n            }\r\n            return 1;\r\n        }\r\n\r\n    }\r\n\r\n    public static class SortBySubject implements Comparator<Lesson> {\r\n\r\n        @Override\r\n        public int compare(Lesson l1, Lesson l2) {\r\n            return l1.getSubjectId() - l2.getSubjectId();\r\n        }\r\n\r\n    }\r\n\r\n    public static class SortByOrder implements Comparator<Lesson> {\r\n\r\n        @Override\r\n        public int compare(Lesson l1, Lesson l2) {\r\n            return l1.getSubjectId() - l2.getSubjectId();\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/model/Lesson.java b/src/java/model/Lesson.java
---- a/src/java/model/Lesson.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/model/Lesson.java	(date 1721423113116)
-@@ -94,20 +94,11 @@
- 
-     }
- 
--    public static class SortBySubject implements Comparator<Lesson> {
--
--        @Override
--        public int compare(Lesson l1, Lesson l2) {
--            return l1.getSubjectId() - l2.getSubjectId();
--        }
--
--    }
--
-     public static class SortByOrder implements Comparator<Lesson> {
- 
-         @Override
-         public int compare(Lesson l1, Lesson l2) {
--            return l1.getSubjectId() - l2.getSubjectId();
-+            return l1.getOrder() - l2.getOrder();
-         }
-     }
- 
-Index: src/java/controller/signup/SignUpServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.signup;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport mail.GenerateVerifyCode;\r\nimport mail.SendMail;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n@WebServlet(name = \"SignUpServlet\", urlPatterns = {\"/signup\"})\r\npublic class SignUpServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, SQLException {\r\n        // Retrieve form data\r\n        String fullName = request.getParameter(\"fullName\");\r\n        String email = request.getParameter(\"email\");\r\n        String password = request.getParameter(\"password\");\r\n        String repassword = request.getParameter(\"repassword\");\r\n        String avt = \"assets/img/default_avt.jpg\";\r\n        int role = 3;\r\n        int status = 0;\r\n        HttpSession session = request.getSession();\r\n        UserDAO dao = new UserDAO();\r\n        if (fullName == null || email == null || password == null || repassword == null) {\r\n            session.setAttribute(\"message\", \"Please fill in all fields.\");\r\n            response.sendRedirect(\"signup.jsp\");\r\n        } else if (dao.checkEmailExist(email)) {\r\n            session.setAttribute(\"message\", \"Email already exists.\");\r\n            response.sendRedirect(\"signup.jsp\");\r\n        } else if (!password.equals(repassword)) {\r\n            session.setAttribute(\"message\", \"Passwords do not match.\");\r\n            response.sendRedirect(\"signup.jsp\");\r\n        } else {\r\n            User user = new User();\r\n            user.setName(fullName);\r\n            user.setEmail(email);\r\n            user.setRole(role);\r\n            user.setAvatar(avt);\r\n            user.setStatus(status);\r\n            String verificationCode = GenerateVerifyCode.GenerateCode();\r\n            String subject = \"Verify Email\";\r\n            String body = \"Hello, \" + fullName + \"! Your verification code for KMS is: \" + verificationCode;\r\n            SendMail.sendMail(email, subject, body);\r\n            session.setAttribute(\"user\", user);\r\n            session.setAttribute(\"password\", password);\r\n            session.setAttribute(\"verificationCode\", verificationCode);\r\n            response.sendRedirect(\"verificate-email.jsp\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            processRequest(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            processRequest(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/signup/SignUpServlet.java b/src/java/controller/signup/SignUpServlet.java
---- a/src/java/controller/signup/SignUpServlet.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/signup/SignUpServlet.java	(date 1721423113112)
-@@ -9,7 +9,7 @@
- import jakarta.servlet.http.HttpSession;
- import mail.GenerateVerifyCode;
- import mail.SendMail;
--import model.user.User;
-+import model.User;
- 
- import java.io.IOException;
- import java.sql.SQLException;
-@@ -32,7 +32,7 @@
-         if (fullName == null || email == null || password == null || repassword == null) {
-             session.setAttribute("message", "Please fill in all fields.");
-             response.sendRedirect("signup.jsp");
--        } else if (dao.checkEmailExist(email)) {
-+        } else if (dao.checkEmailExist(email) && !dao.isEmailUnverified(email)) {
-             session.setAttribute("message", "Email already exists.");
-             response.sendRedirect("signup.jsp");
-         } else if (!password.equals(repassword)) {
-Index: src/java/controller/password/ResetPassword.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package controller.password;\r\n\r\nimport controller.encrypt.BCrypt;\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n/**\r\n * Servlet for resetting the user's password.\r\n */\r\npublic class ResetPassword extends HttpServlet {\r\n\r\n    /**\r\n     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>\r\n     * methods.\r\n     *\r\n     * @param request servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException if an I/O error occurs\r\n     */\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        UserDAO userDAO = new UserDAO();\r\n        String action = request.getParameter(\"action\");\r\n        if (action != null && action.equals(\"setNewPassword\")) {\r\n            boolean successful = true;\r\n            \r\n            String newPassword = request.getParameter(\"newPassword\");\r\n            String confirmPassword = request.getParameter(\"confirmPassword\");\r\n            int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n            if (newPassword.isEmpty()) {\r\n                successful = false;\r\n                request.setAttribute(\"newPasswordErr\", \"Password is blank!\");\r\n            }\r\n            if (newPassword.length() > 60) {\r\n                successful = false;\r\n                request.setAttribute(\"newPasswordErr\", \"Password can not exceed 60 characters!\");\r\n            }\r\n            \r\n            if (successful) {\r\n                if (!confirmPassword.equals(newPassword)) {\r\n                    successful = false;\r\n                    request.setAttribute(\"confirmPasswordErr\", \"Password does not match!\");\r\n                } else {\r\n                    try {\r\n                        userDAO.setNewPassword(userId, newPassword);\r\n                    } catch (SQLException e) {\r\n                        successful = false;\r\n                        request.setAttribute(\"err\", \"Failed to set new password, please try again later!\");\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (successful) {\r\n                response.sendRedirect(\"login.jsp\");\r\n            } else {\r\n                request.setAttribute(\"newPassword\", newPassword);\r\n                request.setAttribute(\"confirmPassword\", confirmPassword);\r\n                request.setAttribute(\"user\", userDAO.getUserById(userId));\r\n                request.getRequestDispatcher(\"setnewpassword.jsp\").forward(request, response);\r\n            }\r\n        } else {\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n            UserDAO userdao = new UserDAO();\r\n            \r\n            if (user == null) {\r\n                response.sendRedirect(\"login.jsp\");\r\n                return;\r\n            }\r\n            \r\n            String oldpassword = request.getParameter(\"oldpassword\");\r\n            String newpassword = request.getParameter(\"newpassword\");\r\n            String confirmpassword = request.getParameter(\"confirmpassword\");\r\n            \r\n            if (oldpassword == null || newpassword == null || confirmpassword == null) {\r\n                session.setAttribute(\"message\", \"Please fill in all fields.\");\r\n                response.sendRedirect(\"reset-password.jsp\");\r\n            } // Check if the old password is correct\r\n            else if (!BCrypt.checkpw(oldpassword, userdao.getPasswordByEmail(user.getEmail()))) {\r\n                session.setAttribute(\"message\", \"Incorrect password.\");\r\n                response.sendRedirect(\"reset-password.jsp\");\r\n            } else if (!newpassword.equals(confirmpassword)) {\r\n                session.setAttribute(\"message\", \"New passwords do not match.\");\r\n                response.sendRedirect(\"reset-password.jsp\");\r\n            } else {\r\n                \r\n                UserDAO dao = new UserDAO();\r\n                \r\n                try {\r\n                    dao.updatePassword(user.getEmail(), oldpassword, newpassword);\r\n                    session.setAttribute(\"message\", \"Password reset successful.\");\r\n                    response.sendRedirect(\"dashboard.jsp\");\r\n                } catch (Exception e) {\r\n                    session.setAttribute(\"message\", \"Password reset failed: \" + e.getMessage());\r\n                    response.sendRedirect(\"reset-password.jsp\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n    \r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n    \r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Handles password reset requests\";\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/controller/password/ResetPassword.java b/src/java/controller/password/ResetPassword.java
---- a/src/java/controller/password/ResetPassword.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/controller/password/ResetPassword.java	(date 1721423113111)
-@@ -7,7 +7,7 @@
- import jakarta.servlet.http.HttpServletRequest;
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
--import model.user.User;
-+import model.User;
- 
- import java.io.IOException;
- import java.sql.SQLException;
-Index: src/java/common/StringFormatter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/common/StringFormatter.java b/src/java/common/StringFormatter.java
-new file mode 100644
---- /dev/null	(date 1721423113101)
-+++ b/src/java/common/StringFormatter.java	(date 1721423113101)
-@@ -0,0 +1,9 @@
-+package common;
-+
-+public class StringFormatter {
-+
-+    public static String removeDoubleSpaces(String input) {
-+        return input.replace("  ", " ");
-+    }
-+
-+}
-Index: src/java/model/user/Role.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/model/user/Role.java b/src/java/model/Role.java
-rename from src/java/model/user/Role.java
-rename to src/java/model/Role.java
---- a/src/java/model/user/Role.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/model/Role.java	(date 1721423113116)
-@@ -1,4 +1,4 @@
--package model.user;
-+package model;
- 
- public class Role {
- 
-Index: src/java/dal/UserDAO.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package dal;\r\n\r\nimport controller.encrypt.BCrypt;\r\nimport model.user.User;\r\n\r\nimport java.io.Serializable;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport model.subject.Subject;\r\nimport model.user.Role;\r\n\r\npublic class UserDAO extends DBContext implements Serializable {\r\n\r\n    public void userSignUp(User user, String password) throws SQLException {\r\n        Connection conn = null;\r\n        PreparedStatement ps = null;\r\n        ResultSet rs = null;\r\n\r\n        try {\r\n            conn = connection;\r\n\r\n            // SQL query to insert a new user, including the status column\r\n            String query = \"INSERT INTO `user` (name, email, avt, password, role, status) \"\r\n                    + \"VALUES (?, ?, ?, ?, ?, ?)\";\r\n\r\n            // Create a prepared statement with auto-generated keys\r\n            ps = conn.prepareStatement(query, PreparedStatement.RETURN_GENERATED_KEYS);\r\n            ps.setString(1, user.getName());\r\n            ps.setString(2, user.getEmail());\r\n            ps.setString(3, user.getAvatar());\r\n            String hashedpw = BCrypt.hashpw(password, BCrypt.gensalt(12));\r\n            ps.setString(4, hashedpw);\r\n            ps.setInt(5, user.getRole());\r\n            ps.setInt(6, user.getStatus());\r\n\r\n            // Execute the query\r\n            int affectedRows = ps.executeUpdate();\r\n\r\n            // Check if any rows were affected (user inserted successfully)\r\n            if (affectedRows == 0) {\r\n                throw new SQLException(\"User sign-up failed, no rows affected.\");\r\n            }\r\n\r\n            // Retrieve the auto-generated key (id)\r\n            rs = ps.getGeneratedKeys();\r\n            if (rs.next()) {\r\n                user.setId(rs.getInt(1)); // Set the generated id back to the User object\r\n            }\r\n        } finally {\r\n            // Close the ResultSet, PreparedStatement, and Connection\r\n            if (rs != null) {\r\n                rs.close();\r\n            }\r\n            if (ps != null) {\r\n                ps.close();\r\n            }\r\n            if (conn != null) {\r\n                conn.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    public User login(String email, String password) throws SQLException {\r\n        Connection conn = null;\r\n        PreparedStatement ps = null;\r\n        ResultSet rs = null;\r\n        User user;\r\n\r\n        try {\r\n            conn = connection;\r\n\r\n            String query = \"SELECT * FROM `user` WHERE email = ?\";\r\n            ps = conn.prepareStatement(query);\r\n            ps.setString(1, email);\r\n\r\n            rs = ps.executeQuery();\r\n            user = new User();\r\n\r\n            if (rs.next() && checkEmailExist(email)) {\r\n                if ((BCrypt.checkpw(password, rs.getString(\"password\")))) {\r\n                    user.setId(rs.getInt(\"id\"));\r\n                    user.setName(rs.getString(\"name\"));\r\n                    user.setEmail(rs.getString(\"email\"));\r\n                    user.setAvatar(rs.getString(\"avt\"));\r\n                    int role = rs.getInt(\"role\");\r\n                    user.setRole(role);\r\n                    user.setR(getRole(role));\r\n                    user.setStatus(rs.getInt(\"status\")); // Set status from DB\r\n                }\r\n            } else if (!checkEmailExist(email)) {\r\n                user = null;\r\n            }\r\n        } finally {\r\n            if (rs != null) {\r\n                rs.close();\r\n            }\r\n            if (ps != null) {\r\n                ps.close();\r\n            }\r\n            if (conn != null) {\r\n                conn.close();\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    public User loginGoogle(String email) throws SQLException {\r\n        Connection conn = null;\r\n        PreparedStatement ps = null;\r\n        ResultSet rs = null;\r\n        User user = null;\r\n\r\n        try {\r\n            conn = connection;\r\n\r\n            String query = \"SELECT * FROM `user` WHERE email = ?\";\r\n            ps = conn.prepareStatement(query);\r\n            ps.setString(1, email);\r\n\r\n            rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                user = new User();\r\n                user.setId(rs.getInt(\"id\"));\r\n                user.setName(rs.getString(\"name\"));\r\n                user.setEmail(rs.getString(\"email\"));\r\n                user.setAvatar(rs.getString(\"avt\"));\r\n                user.setRole(rs.getInt(\"role\"));\r\n                user.setStatus(rs.getInt(\"status\")); // Set status from DB\r\n            }\r\n        } finally {\r\n            if (rs != null) {\r\n                rs.close();\r\n            }\r\n            if (ps != null) {\r\n                ps.close();\r\n            }\r\n            if (conn != null) {\r\n                conn.close();\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n//\r\n//    public void updateUserAvatar(int userId, String avatar) throws SQLException {\r\n//        Connection conn = null;\r\n//        PreparedStatement ps = null;\r\n//\r\n//        try {\r\n//            conn = connection;\r\n//            String query = \"UPDATE `user` SET avt = ? WHERE id = ?\";\r\n//            ps = conn.prepareStatement(query);\r\n//            ps.setString(1, avatar);\r\n//            ps.setInt(2, userId);\r\n//            ps.executeUpdate();\r\n//        } finally {\r\n//            if (ps != null) {\r\n//                ps.close();\r\n//            }\r\n//            if (conn != null) {\r\n//                conn.close();\r\n//            }\r\n//        }\r\n//    }\r\n\r\n    private Role getRole(int id) {\r\n        String sql = \"select * from role where id = ?;\";\r\n        Role r;\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, id);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                r = new Role();\r\n                r.setId(id);\r\n                r.setName(rs.getString(\"name\"));\r\n                return r;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private User getUserInfo(ResultSet rs) throws SQLException {\r\n        User u = new User();\r\n        u.setId(rs.getInt(\"id\"));\r\n        u.setName(rs.getString(\"name\"));\r\n        u.setEmail(rs.getString(\"email\"));\r\n        u.setAvatar(rs.getString(\"avt\"));\r\n        u.setStatus(rs.getInt(\"status\"));\r\n        int roleId = rs.getInt(\"role\");\r\n        u.setRole(roleId);\r\n        u.setR(getRole(roleId));\r\n        u.setDateCreated(rs.getDate(\"date_created\"));\r\n        return u;\r\n    }\r\n\r\n    public ArrayList<User> getAllUsers() {\r\n        String sql = \"select * from user where role > 0;\";\r\n        ArrayList<User> list = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                User u = getUserInfo(rs);\r\n                list.add(u);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public int getNumberOfStudents() {\r\n        String sql = \"SELECT COUNT(*) AS number FROM `user` WHERE role = 3\";\r\n        int count = 0;\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                count = rs.getInt(\"number\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public int getNumberOfTeachers() {\r\n        String sql = \"SELECT COUNT(*) AS number FROM `user` WHERE role = 2\";\r\n        int count = 0;\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                count = rs.getInt(\"number\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public ArrayList<User> getAllAccount() {\r\n        ArrayList<User> list = new ArrayList<>();\r\n\r\n        String query = \"SELECT * FROM user;\";\r\n        try {\r\n            PreparedStatement ps = connection.prepareStatement(query);\r\n            ResultSet rs = ps.executeQuery();\r\n            while (rs.next()) {\r\n                User s = new User();\r\n                s.setId(rs.getInt(\"id\"));\r\n                s.setName(rs.getString(\"name\"));\r\n                s.setEmail(rs.getString(\"email\"));\r\n                s.setRole(rs.getInt(\"role\"));\r\n                s.setAvatar(rs.getString(\"avt\"));\r\n                s.setStatus(rs.getInt(\"status\"));\r\n                list.add(s);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public User getUserByID(int Id) {\r\n\r\n        User user = new User();\r\n        String query = \"select * from user where Id= ?\";\r\n\r\n        try {\r\n            PreparedStatement ps;\r\n            ResultSet rs;\r\n            if (connection != null) {\r\n                ps = connection.prepareStatement(query);\r\n                ps.setInt(1, Id);\r\n                rs = ps.executeQuery();\r\n                while (rs.next()) {\r\n                    user.setId(rs.getInt(1));\r\n                    user.setName(rs.getString(2));\r\n                    user.setEmail(rs.getString(3));\r\n                    int role = rs.getInt(5);\r\n                    user.setRole(role);\r\n                    user.setAvatar(rs.getString(6));\r\n                    user.setR(getRole(role));\r\n                }\r\n            }\r\n        } catch (SQLException ignored) {\r\n        }\r\n        return user;\r\n    }\r\n\r\n    public void updatePassword(String email, String currentPassword, String newPassword) throws SQLException {\r\n        Connection conn = null;\r\n        PreparedStatement psSelect = null;\r\n        PreparedStatement psUpdate = null;\r\n        ResultSet rs = null;\r\n        User user;\r\n\r\n        try {\r\n            // Assuming `connection` is a valid Connection object\r\n            conn = connection;\r\n\r\n            // Step 1: Verify the user's current password\r\n            String selectQuery = \"SELECT * FROM `user` WHERE email = ?\";\r\n            psSelect = conn.prepareStatement(selectQuery);\r\n            psSelect.setString(1, email);\r\n\r\n            rs = psSelect.executeQuery();\r\n            if (rs.next()) {\r\n                if (BCrypt.checkpw(currentPassword, rs.getString(\"password\"))) {\r\n                    // Step 2: Update the user's password\r\n                    String updateQuery = \"UPDATE `user` SET password = ? WHERE email = ?\";\r\n                    psUpdate = conn.prepareStatement(updateQuery);\r\n                    newPassword = BCrypt.hashpw(newPassword, BCrypt.gensalt(12));\r\n                    psUpdate.setString(1, newPassword);\r\n                    psUpdate.setString(2, email);\r\n                    psUpdate.executeUpdate();\r\n\r\n                    // Step 3: Retrieve the updated user\r\n                    user = new User();\r\n                    user.setId(rs.getInt(\"id\"));\r\n                    user.setName(rs.getString(\"name\"));\r\n                    user.setEmail(rs.getString(\"email\"));\r\n                    user.setAvatar(rs.getString(\"avt\"));\r\n                    user.setRole(rs.getInt(\"role\"));\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        } finally {\r\n            // Close ResultSet\r\n            if (rs != null) {\r\n                rs.close();\r\n            }\r\n            // Close PreparedStatements\r\n            if (psSelect != null) {\r\n                psSelect.close();\r\n            }\r\n            if (psUpdate != null) {\r\n                psUpdate.close();\r\n            }\r\n            // Close Connection\r\n            if (conn != null) {\r\n                conn.close();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void resetPassword(String email, String newpassword) {\r\n        String query = \"UPDATE user SET password = ? WHERE email = ?\";\r\n        try {\r\n            PreparedStatement ps = connection.prepareStatement(query);\r\n            newpassword = BCrypt.hashpw(newpassword, BCrypt.gensalt(12));\r\n            ps.setString(1, newpassword);\r\n            ps.setString(2, email);\r\n            ps.executeUpdate();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public Boolean checkEmailExist(String email) {\r\n        String query = \"SELECT * FROM user WHERE email = ?\";\r\n        try {\r\n            PreparedStatement ps = connection.prepareStatement(query);\r\n            ps.setString(1, email);\r\n            ResultSet rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                return true;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public String getPasswordByEmail(String email) {\r\n        String query = \"SELECT password FROM user WHERE email = ?\";\r\n        try {\r\n            PreparedStatement ps = connection.prepareStatement(query);\r\n            ps.setString(1, email);\r\n            ResultSet rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                return rs.getString(\"password\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private int getStatusById(int id) {\r\n        String sql = \"select status from `user` where id = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, id);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return rs.getInt(\"status\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public void changeUserStatus(int id) {\r\n        int newStatus;\r\n        if (getStatusById(id) == 1) {\r\n            newStatus = 0;\r\n        } else {\r\n            newStatus = 1;\r\n        }\r\n        String sql = \"update `user` set status = ? where id = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, newStatus);\r\n            st.setInt(2, id);\r\n            st.execute();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public ArrayList<Role> getAllRoles() {\r\n        ArrayList<Role> list = new ArrayList<>();\r\n        String sql = \"select * from `role`;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Role role = new Role();\r\n                role.setId(rs.getInt(\"id\"));\r\n                role.setName(rs.getString(\"name\"));\r\n                list.add(role);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public User getUserById(int id) {\r\n        String sql = \"select * from user where id = ?\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, id);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return getUserInfo(rs);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void updateUser(User u) throws SQLException {\r\n        String sql = \"update user set role = ?, name = ? where id = ?\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, u.getRole());\r\n        st.setString(2, u.getName());\r\n        st.setInt(3, u.getId());\r\n        st.execute();\r\n    }\r\n\r\n    public void updateAvatar(User u) throws SQLException {\r\n        String sql = \"update user set avt = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, u.getAvatar());\r\n        st.setInt(2, u.getId());\r\n        st.execute();\r\n    }\r\n\r\n    public boolean isAvtExist(String uri) {\r\n        String sql = \"select * from user where avt = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, uri);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return true;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void addUser(User user, String password) throws SQLException {\r\n        String sql = \"INSERT INTO `user` (name, email, avt, password, role, status)\"\r\n                + \"VALUES (?, ?, ?, ?, ?, ?)\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, user.getName());\r\n        st.setString(2, user.getEmail());\r\n        st.setString(3, user.getAvatar());\r\n        String hashedpw = BCrypt.hashpw(password, BCrypt.gensalt(12));\r\n        st.setString(4, hashedpw);\r\n        st.setInt(5, user.getRole());\r\n        st.setInt(6, user.getStatus());\r\n        st.execute();\r\n    }\r\n\r\n    public void setNewPassword(int userId, String newPassword) throws SQLException {\r\n        String sql = \"update user set password = ?, status = 1 where id = ?\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        String hashedpw = BCrypt.hashpw(newPassword, BCrypt.gensalt(12));\r\n        st.setString(1, hashedpw);\r\n        st.setInt(2, userId);\r\n        st.execute();\r\n    }\r\n\r\n    public ArrayList<Subject> getAllSubjectsInCharged(int id) {\r\n        SubjectDAO subjectDAO = new SubjectDAO();\r\n        String sql = \"select * from subject_in_charged where user_id = ?;\";\r\n        ArrayList<Subject> ret = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, id);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                ret.add(subjectDAO.getSubjectMatchId(rs.getInt(\"subject_id\")));\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public void assignSubject(int userId, int subjectId) throws SQLException {\r\n        String sql = \"insert into subject_in_charged (user_id, subject_id) values (?,?);\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, userId);\r\n        st.setInt(2, subjectId);\r\n        st.execute();\r\n    }\r\n    \r\n    public void removeAssignedSubject(int userId, int subjectId) throws SQLException{\r\n        String sql = \"delete from subject_in_charged where user_id = ? and subject_id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, userId);\r\n        st.setInt(2, subjectId);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/dal/UserDAO.java b/src/java/dal/UserDAO.java
---- a/src/java/dal/UserDAO.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/dal/UserDAO.java	(date 1721423113115)
-@@ -1,7 +1,7 @@
- package dal;
- 
- import controller.encrypt.BCrypt;
--import model.user.User;
-+import model.User;
- 
- import java.io.Serializable;
- import java.sql.Connection;
-@@ -10,7 +10,7 @@
- import java.sql.SQLException;
- import java.util.ArrayList;
- import model.subject.Subject;
--import model.user.Role;
-+import model.Role;
- 
- public class UserDAO extends DBContext implements Serializable {
- 
-@@ -413,7 +413,7 @@
-         return -1;
-     }
- 
--    public void changeUserStatus(int id) {
-+    public void changeUserStatus(int id) throws SQLException {
-         int newStatus;
-         if (getStatusById(id) == 1) {
-             newStatus = 0;
-@@ -421,14 +421,10 @@
-             newStatus = 1;
-         }
-         String sql = "update `user` set status = ? where id = ?;";
--        try {
--            PreparedStatement st = connection.prepareStatement(sql);
--            st.setInt(1, newStatus);
--            st.setInt(2, id);
--            st.execute();
--        } catch (SQLException e) {
--            System.out.println(e.getMessage());
--        }
-+        PreparedStatement st = connection.prepareStatement(sql);
-+        st.setInt(1, newStatus);
-+        st.setInt(2, id);
-+        st.execute();
-     }
- 
-     public ArrayList<Role> getAllRoles() {
-@@ -543,12 +539,32 @@
-         st.setInt(2, subjectId);
-         st.execute();
-     }
--    
--    public void removeAssignedSubject(int userId, int subjectId) throws SQLException{
-+
-+    public void removeAssignedSubject(int userId, int subjectId) throws SQLException {
-         String sql = "delete from subject_in_charged where user_id = ? and subject_id = ?;";
-         PreparedStatement st = connection.prepareStatement(sql);
-         st.setInt(1, userId);
-         st.setInt(2, subjectId);
-+        st.execute();
-+    }
-+
-+    public User getUserByEmail(String email) {
-+        String sql = "select * from user where email = ?;";
-+        try {
-+            PreparedStatement st = connection.prepareStatement(sql);
-+            st.setString(1, email);
-+            ResultSet rs = st.executeQuery();
-+            if (rs.next()) {
-+                return getUserInfo(rs);
-+            }
-+        } catch (SQLException e) {
-+            System.out.println(e.getMessage());
-+        }
-+        return null;
-+    }
-+
-+    public boolean isEmailUnverified(String email) {
-+        return getUserByEmail(email).getStatus() == 2;
-     }
- 
- }
-Index: src/java/model/user/User.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/java/model/user/User.java b/src/java/model/User.java
-rename from src/java/model/user/User.java
-rename to src/java/model/User.java
---- a/src/java/model/user/User.java	(revision a1ff47d3d188a58b4641f325f616feda9b841f3b)
-+++ b/src/java/model/User.java	(date 1721423113116)
-@@ -1,4 +1,4 @@
--package model.user;
-+package model;
- 
- import java.io.Serializable;
- import java.util.Comparator;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"se1808-g6:war exploded\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"54eeaf7d-60e8-440e-9fc5-f872d814e85c\" name=\"Changes\" comment=\"util\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/java/controller/flashcard/FlashcardQuestionServlet.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/java/controller/flashcard/FlashcardQuestionServlet.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/java/dal/FlashcardDAO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/java/dal/FlashcardDAO.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/web/flashcard-learn.jsp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/web/flashcard-learn.jsp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/web/flashcard-match.jsp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/web/flashcard-match.jsp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/web/flashcard-test.jsp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/web/flashcard-test.jsp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/web/flashcard.jsp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/web/flashcard.jsp\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Jsp File\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FormatOnSaveOptions\">\r\n    <option name=\"myRunOnSave\" value=\"true\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"LogFilters\">\r\n    <option name=\"FILTER_ERRORS\" value=\"false\" />\r\n    <option name=\"FILTER_WARNINGS\" value=\"false\" />\r\n    <option name=\"FILTER_INFO\" value=\"true\" />\r\n    <option name=\"FILTER_DEBUG\" value=\"true\" />\r\n    <option name=\"CUSTOM_FILTER\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2hyMeCQqlnuVhNy14QIKDXJu2m5\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;Application.CourseDAO.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.CourseListServlet.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.CourseServlet.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Tomcat Server.Tomcat 10.1.20.executor&quot;: &quot;Run&quot;,\r\n    &quot;code.cleanup.on.save&quot;: &quot;true&quot;,\r\n    &quot;deletionFromPopupRequiresConfirmation&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/PC/Documents/SWT slides/SWT301_Lab4&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Artifacts&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;rearrange.code.on.save&quot;: &quot;true&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;settings.javascript.prettier&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;mysql&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Tomcat Server.Tomcat 10.1.20\">\r\n    <configuration name=\"CourseDAO\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"dal.CourseDAO\" />\r\n      <module name=\"se1808-g6\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"dal.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CourseServlet\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.course.CourseServlet\" />\r\n      <module name=\"se1808-g6\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.course.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Tomcat 10.1.20\" type=\"#com.intellij.j2ee.web.tomcat.TomcatRunConfigurationFactory\" factoryName=\"Local\" APPLICATION_SERVER_NAME=\"Tomcat 10.1.20\" ALTERNATIVE_JRE_ENABLED=\"false\" nameIsGenerated=\"true\">\r\n      <option name=\"UPDATING_POLICY\" value=\"restart-server\" />\r\n      <deployment>\r\n        <artifact name=\"se1808-g6:war exploded\">\r\n          <settings>\r\n            <option name=\"CONTEXT_PATH\" value=\"/se1808_g6\" />\r\n          </settings>\r\n        </artifact>\r\n      </deployment>\r\n      <server-settings>\r\n        <option name=\"BASE_DIRECTORY_NAME\" value=\"d0fc3d2c-dfe5-4d48-a081-cbfaf9e73bfd\" />\r\n      </server-settings>\r\n      <predefined_log_file enabled=\"true\" id=\"Tomcat\" />\r\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Catalina\" />\r\n      <predefined_log_file id=\"Tomcat Manager\" />\r\n      <predefined_log_file id=\"Tomcat Host Manager\" />\r\n      <predefined_log_file id=\"Tomcat Localhost Access\" />\r\n      <RunnerSettings RunnerId=\"Debug\">\r\n        <option name=\"DEBUG_PORT\" value=\"51617\" />\r\n      </RunnerSettings>\r\n      <ConfigurationWrapper VM_VAR=\"JAVA_OPTS\" RunnerId=\"Cover\">\r\n        <option name=\"USE_ENV_VARIABLES\" value=\"true\" />\r\n        <STARTUP>\r\n          <option name=\"USE_DEFAULT\" value=\"true\" />\r\n          <option name=\"SCRIPT\" value=\"\" />\r\n          <option name=\"VM_PARAMETERS\" value=\"\" />\r\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n        </STARTUP>\r\n        <SHUTDOWN>\r\n          <option name=\"USE_DEFAULT\" value=\"true\" />\r\n          <option name=\"SCRIPT\" value=\"\" />\r\n          <option name=\"VM_PARAMETERS\" value=\"\" />\r\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n        </SHUTDOWN>\r\n      </ConfigurationWrapper>\r\n      <ConfigurationWrapper VM_VAR=\"JAVA_OPTS\" RunnerId=\"Debug\">\r\n        <option name=\"USE_ENV_VARIABLES\" value=\"true\" />\r\n        <STARTUP>\r\n          <option name=\"USE_DEFAULT\" value=\"true\" />\r\n          <option name=\"SCRIPT\" value=\"\" />\r\n          <option name=\"VM_PARAMETERS\" value=\"\" />\r\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n        </STARTUP>\r\n        <SHUTDOWN>\r\n          <option name=\"USE_DEFAULT\" value=\"true\" />\r\n          <option name=\"SCRIPT\" value=\"\" />\r\n          <option name=\"VM_PARAMETERS\" value=\"\" />\r\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n        </SHUTDOWN>\r\n      </ConfigurationWrapper>\r\n      <ConfigurationWrapper VM_VAR=\"JAVA_OPTS\" RunnerId=\"Profile\">\r\n        <option name=\"USE_ENV_VARIABLES\" value=\"true\" />\r\n        <STARTUP>\r\n          <option name=\"USE_DEFAULT\" value=\"true\" />\r\n          <option name=\"SCRIPT\" value=\"\" />\r\n          <option name=\"VM_PARAMETERS\" value=\"\" />\r\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n        </STARTUP>\r\n        <SHUTDOWN>\r\n          <option name=\"USE_DEFAULT\" value=\"true\" />\r\n          <option name=\"SCRIPT\" value=\"\" />\r\n          <option name=\"VM_PARAMETERS\" value=\"\" />\r\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n        </SHUTDOWN>\r\n      </ConfigurationWrapper>\r\n      <ConfigurationWrapper VM_VAR=\"JAVA_OPTS\" RunnerId=\"Run\">\r\n        <option name=\"USE_ENV_VARIABLES\" value=\"true\" />\r\n        <STARTUP>\r\n          <option name=\"USE_DEFAULT\" value=\"true\" />\r\n          <option name=\"SCRIPT\" value=\"\" />\r\n          <option name=\"VM_PARAMETERS\" value=\"\" />\r\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n        </STARTUP>\r\n        <SHUTDOWN>\r\n          <option name=\"USE_DEFAULT\" value=\"true\" />\r\n          <option name=\"SCRIPT\" value=\"\" />\r\n          <option name=\"VM_PARAMETERS\" value=\"\" />\r\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\r\n        </SHUTDOWN>\r\n      </ConfigurationWrapper>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n        <option name=\"BuildArtifacts\" enabled=\"true\">\r\n          <artifact name=\"se1808-g6:war exploded\" />\r\n        </option>\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.CourseDAO\" />\r\n      <item itemvalue=\"Application.CourseServlet\" />\r\n      <item itemvalue=\"Tomcat Server.Tomcat 10.1.20\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.CourseServlet\" />\r\n        <item itemvalue=\"Application.CourseDAO\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.17011.79\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.17011.79\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"54eeaf7d-60e8-440e-9fc5-f872d814e85c\" name=\"Changes\" comment=\"\" />\r\n      <created>1718561957247</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1718561957247</updated>\r\n      <workItem from=\"1718561958577\" duration=\"150000\" />\r\n      <workItem from=\"1718562126015\" duration=\"973000\" />\r\n      <workItem from=\"1718581029058\" duration=\"1620000\" />\r\n      <workItem from=\"1718690261434\" duration=\"1049000\" />\r\n      <workItem from=\"1718699075958\" duration=\"30000\" />\r\n      <workItem from=\"1718846161664\" duration=\"760000\" />\r\n      <workItem from=\"1718863805865\" duration=\"18000\" />\r\n      <workItem from=\"1719145114346\" duration=\"584000\" />\r\n      <workItem from=\"1719146025525\" duration=\"16723000\" />\r\n      <workItem from=\"1719191975454\" duration=\"5213000\" />\r\n      <workItem from=\"1719198703042\" duration=\"150000\" />\r\n      <workItem from=\"1719458275857\" duration=\"4242000\" />\r\n      <workItem from=\"1719483335214\" duration=\"10000\" />\r\n      <workItem from=\"1719556718377\" duration=\"804000\" />\r\n      <workItem from=\"1719578081984\" duration=\"6876000\" />\r\n      <workItem from=\"1719715666129\" duration=\"3943000\" />\r\n      <workItem from=\"1720920835001\" duration=\"11660000\" />\r\n      <workItem from=\"1720961174725\" duration=\"10595000\" />\r\n      <workItem from=\"1720992440787\" duration=\"1965000\" />\r\n      <workItem from=\"1721003426028\" duration=\"6037000\" />\r\n      <workItem from=\"1721097278793\" duration=\"9649000\" />\r\n      <workItem from=\"1721144262609\" duration=\"11985000\" />\r\n      <workItem from=\"1721175833990\" duration=\"11458000\" />\r\n      <workItem from=\"1721195144098\" duration=\"1655000\" />\r\n      <workItem from=\"1721198701269\" duration=\"292000\" />\r\n      <workItem from=\"1721202831125\" duration=\"1187000\" />\r\n      <workItem from=\"1721354506410\" duration=\"14000\" />\r\n      <workItem from=\"1721423968550\" duration=\"12694000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"util\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721156721128</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721156721128</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"util\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721271886786</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721271886786</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"util\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"util\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/.idea/workspace.xml	(date 1721635975642)
@@ -11,12 +11,9 @@
   <component name="ChangeListManager">
     <list default="true" id="54eeaf7d-60e8-440e-9fc5-f872d814e85c" name="Changes" comment="util">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/java/controller/flashcard/FlashcardQuestionServlet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/java/controller/flashcard/FlashcardQuestionServlet.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/java/dal/FlashcardDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/java/dal/FlashcardDAO.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/web/flashcard-learn.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/web/flashcard-learn.jsp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/web/flashcard-match.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/web/flashcard-match.jsp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/nbproject/private/private.xml" beforeDir="false" afterPath="$PROJECT_DIR$/nbproject/private/private.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/web/flashcard-test.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/web/flashcard-test.jsp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/web/flashcard.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/web/flashcard.jsp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/web/header1.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/web/header1.jsp" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,8 +23,8 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Jsp File" />
         <option value="Class" />
+        <option value="Jsp File" />
       </list>
     </option>
   </component>
@@ -71,7 +68,7 @@
     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/PC/Documents/SWT slides/SWT301_Lab4&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/PC/Documents/FER slides/LabAdmin&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
@@ -260,8 +257,6 @@
       <workItem from="1721195144098" duration="1655000" />
       <workItem from="1721198701269" duration="292000" />
       <workItem from="1721202831125" duration="1187000" />
-      <workItem from="1721354506410" duration="14000" />
-      <workItem from="1721423968550" duration="12694000" />
     </task>
     <task id="LOCAL-00001" summary="util">
       <option name="closed" value="true" />
@@ -271,15 +266,7 @@
       <option name="project" value="LOCAL" />
       <updated>1721156721128</updated>
     </task>
-    <task id="LOCAL-00002" summary="util">
-      <option name="closed" value="true" />
-      <created>1721271886786</created>
-      <option name="number" value="00002" />
-      <option name="presentableId" value="LOCAL-00002" />
-      <option name="project" value="LOCAL" />
-      <updated>1721271886786</updated>
-    </task>
-    <option name="localTasksCounter" value="3" />
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: web/WEB-INF/views/lesson/newlesson.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>New lesson</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Lesson /</span> New lesson</h4>\r\n                            <form action=\"${pageContext.request.contextPath}/lesson/insert\">\r\n                                <input type=\"hidden\" name=\"action\" value=\"addNew\"/>\r\n                                <label for=\"subjectSelect\">Subject: </label>\r\n                                <select name=\"subjectId\" id=\"subjectSelect\" class=\"ml-2\">\r\n                                    <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                        <c:if test=\"${requestScope.subject.id == subject.id}\">\r\n                                            <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.subject.id != subject.id}\">\r\n                                            <option value=\"${subject.id}\">${subject.code}</option>\r\n                                        </c:if>\r\n                                    </c:forEach>\r\n                                </select>\r\n                                <div class=\"col-xxl\">\r\n                                    <div class=\"card mb-4\">\r\n                                        <div class=\"card-header d-flex align-items-center justify-content-between mb-3\">\r\n                                            <small class=\"text-muted float-end\">Input subject name and materials</small>\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row mb-3\">\r\n                                                <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname\">Name</label>\r\n                                                <div class=\"col-sm-10\">\r\n                                                    <div class=\"input-group input-group-merge\">\r\n                                                        <span id=\"basic-icon-default-fullname2\" class=\"input-group-text\">\r\n                                                            <i class=\"bx bx-rename\"></i></span>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            class=\"form-control\"\r\n                                                            id=\"basic-icon-default-fullname\"\r\n                                                            name=\"name\"\r\n                                                            placeholder=\"Subject name\"\r\n                                                            aria-label=\"Subject name\"\r\n                                                            aria-describedby=\"basic-icon-default-fullname2\" \r\n                                                            value=\"${requestScope.name}\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <c:if test=\"${requestScope.err != null && !requestScope.err.isEmpty()}\">\r\n                                                <div class=\"row mb-3\">\r\n                                                    <div class=\"col-sm-2\"></div>\r\n                                                    <div class=\"col-sm-10\">\r\n                                                        <h6 style=\"color: red;\">${requestScope.err}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </c:if>\r\n                                            <div class=\"row justify-content-end\">\r\n                                                <div class=\"col-sm-10\">\r\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Add lesson</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/lesson/newlesson.jsp b/web/WEB-INF/views/lesson/newlesson.jsp
--- a/web/WEB-INF/views/lesson/newlesson.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/lesson/newlesson.jsp	(date 1721635964782)
@@ -117,8 +117,8 @@
                                                             class="form-control"
                                                             id="basic-icon-default-fullname"
                                                             name="name"
-                                                            placeholder="Subject name"
-                                                            aria-label="Subject name"
+                                                            placeholder="Lesson name"
+                                                            aria-label="Lesson name"
                                                             aria-describedby="basic-icon-default-fullname2" 
                                                             value="${requestScope.name}"/>
                                                     </div>
@@ -143,6 +143,8 @@
                             </form>
                             <hr class="my-5" />
 
+                            <a href="${pageContext.request.contextPath}/lesson" class="btn btn-primary">Back</a>
+
                         </div>
                         <!-- / Content -->
 
Index: web/WEB-INF/views/lesson/lessonlist.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"./assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>Lesson list</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"./assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"./assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"./assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"./img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"./lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"./css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"./assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"./assets/js/config.js\"></script>\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n                            <div>\r\n                                <form action=\"${pageContext.request.contextPath}/lesson/new\">\r\n                                    <input type=\"hidden\" name=\"subjectid\" value=\"${requestScope.subject.id}\"/>\r\n                                    <input type=\"hidden\" name=\"action\" value=\"goToPage\"/>\r\n                                    <button class=\"btn btn-primary px-3\">\r\n                                        <i class=\"fa fa-plus-square mr-3\"></i>\r\n                                        Add lesson\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Lesson /</span> Lesson list</h4>\r\n\r\n                            <form id=\"searchBar\" class=\"d-flex\" action=\"${pageContext.request.contextPath}/lesson\">\r\n                                <div class=\"input-group mr-3\" style=\"overflow: auto;\">\r\n                                    <label for=\"subjectselect\">Subject: </label>\r\n                                    <select name=\"subjectId\" id=\"subjectselect\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;\">\r\n                                        <c:if test=\"${requestScope.subject == null}\">\r\n                                            <option value=\"all\" selected>All subjects</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.subject != null}\">\r\n                                            <option value=\"all\">All subjects</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                            <c:if test=\"${subject.id == requestScope.subject.id}\">\r\n                                                <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${subject.id != requestScope.subject.id}\">\r\n                                                <option value=\"${subject.id}\">${subject.code}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <label for=\"sortBy\">Sort by: </label>\r\n                                    <select style=\"height: 38px;\" name=\"sortBy\" id=\"sortBy\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('sortBy').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;document.getElementById('sortBy').style.height = '38px';\">\r\n                                        <c:if test=\"${requestScope.sortBy == null || requestScope.sortBy.isEmpty()\r\n                                                      || requestScope.sortBy.equals('None')}\">\r\n                                              <option value=\"None\" selected>None</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.sortBy != null && !requestScope.sortBy.isEmpty()\r\n                                                      && !requestScope.sortBy.equals('None')}\">\r\n                                              <option value=\"None\">None</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.sortOptions}\" var=\"option\">\r\n                                            <c:if test=\"${requestScope.sortBy.equals(option)}\">\r\n                                                <option value=\"${option}\" selected>${option}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${!requestScope.sortBy.equals(option)}\">\r\n                                                <option value=\"${option}\">${option}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <span style=\"height: 38px;\" class=\"input-group-text\"><i class=\"tf-icons bx bx-search\"></i></span>\r\n                                    <input type=\"text\" name=\"keyWord\" class=\"form-control\" placeholder=\"Search\" value=\"${requestScope.keyWord}\"\r\n                                           style=\"float: right;\"/>\r\n                                    <button style=\"height: 38px; float: right;\" \r\n                                            class=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                            <!-- Basic Bootstrap Table -->\r\n                            <div class=\"card\">\r\n                                <h5 class=\"card-header\">Lesson list</h5>\r\n                                <div class=\"table-responsive text-nowrap\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Name</th>\r\n                                                <th>Subject</th>\r\n                                                <th>Status</th>\r\n                                                <th>Order</th>\r\n                                                <th>Actions</th>\r\n                                                <th>Order</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody class=\"table-border-bottom-0\">\r\n                                            <c:forEach items=\"${requestScope.list}\" var=\"lesson\">\r\n                                                <tr>\r\n                                                    <c:if test=\"${lesson.status}\">\r\n                                                        <td class=\"text-primary\">${lesson.id}</td>\r\n                                                        <td class=\"text-primary\">${lesson.name}</td>\r\n                                                        <td class=\"text-primary\">${lesson.subject.code}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-success\">Active</span>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${!lesson.status}\">\r\n                                                        <td>${lesson.id}</td>\r\n                                                        <td>${lesson.name}</td>\r\n                                                        <td>${lesson.subject.code}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-danger\">Inactive</span>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                    <td class=\"text-success\">${lesson.order}</td>\r\n                                                    <td>\r\n                                                        <c:if test=\"${lesson.status}\">\r\n                                                            <form action=\"${pageContext.request.contextPath}/lesson/details\" id=\"lessonDetails\">\r\n                                                                <input type=\"hidden\" name=\"lessonId\" value=\"${lesson.id}\"/>\r\n                                                                <button style=\"height: 25px; width: 25px; float: left;\" type=\"submit\" class=\"btn btn-icon btn-outline-primary mr-1\"\r\n                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\">\r\n                                                                    <i class=\"bx bx-edit\"></i>\r\n                                                                </button>\r\n                                                            </form>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" type=\"button\" class=\"btn btn-icon btn-outline-danger mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Deactivate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${lesson.id}, 'deactivate')\">\r\n                                                                <i class=\"bx bx-x\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${!lesson.status}\">\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-secondary mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\" disabled>\r\n                                                                <i class=\"bx bx-edit\"></i>\r\n                                                            </button>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left\" type=\"button\" class=\"btn btn-icon btn-outline-success mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Activate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${lesson.id}, 'activate')\">\r\n                                                                <i class=\"bx bx-check me-1\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <c:if test=\"${lesson.order != requestScope.latestOrder}\">\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" type=\"button\" class=\"btn btn-icon btn-outline-warning mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Move down\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modalOrder\" onclick=\"assignOrderValue(${lesson.id}, 'down')\">\r\n                                                                <i class=\"bx bx-down-arrow\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${lesson.order != 1}\">\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" type=\"button\" class=\"btn btn-icon btn-outline-warning mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Move up\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modalOrder\" onclick=\"assignOrderValue(${lesson.id}, 'up')\">\r\n                                                                <i class=\"bx bx-up-arrow\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </c:forEach>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n                                        <form action=\"${pageContext.request.contextPath}/lesson/update\">\r\n                                            <input type=\"hidden\" name=\"lessonId\" id=\"lessonId\"/>\r\n                                            <input type=\"hidden\" name=\"action\" value=\"changeStatus\"/>\r\n                                            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"modalCenterTitle\">Activate / Deactivate</h5>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            class=\"btn-close\"\r\n                                                            data-bs-dismiss=\"modal\"\r\n                                                            aria-label=\"Close\"></button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        <h5 id=\"modalBodyText\"></h5>\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                                            No\r\n                                                        </button>\r\n                                                        <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!--/ Basic Bootstrap Table -->\r\n\r\n                            <form action=\"${pageContext.request.contextPath}/lesson\">\r\n                                <input type=\"hidden\" name=\"subjectId\" value=\"${requestScope.subject.id}\"/>\r\n                                <input type=\"hidden\" name=\"keyWord\" value=\"${requestScope.keyWord}\"/>\r\n                                <input type=\"hidden\" name=\"sortBy\" value=\"${requestScope.sortBy}\"/>\r\n                                <input type=\"hidden\" name=\"pageAction\" id=\"pageAction\"/>\r\n                                <input type=\"hidden\" name=\"newPage\" id=\"newPage\"/>\r\n                                <input type=\"hidden\" name=\"currentPage\" value=\"${requestScope.currentPage}\"/>\r\n                                <div class=\"card mb-4\">\r\n                                    <!-- Basic Pagination -->\r\n                                    <div class=\"card mb-4\">\r\n                                        <!-- Basic Pagination -->\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-lg-6\">\r\n                                                    <small class=\"text-light fw-medium\">Basic</small>\r\n                                                    <div class=\"demo-inline-spacing\">\r\n                                                        <!-- Basic Pagination -->\r\n                                                        <nav aria-label=\"Page navigation\">\r\n                                                            <ul class=\"pagination\">\r\n                                                                <li class=\"page-item first\">\r\n                                                                    <button class=\"page-link\"\r\n                                                                            type=\"submit\"\r\n                                                                            onclick=\"document.getElementById('pageAction').value = 'firstPage';\">\r\n                                                                        <i class=\"tf-icon bx bx-chevrons-left\"></i>\r\n                                                                    </button>\r\n                                                                </li>\r\n                                                                <li class=\"page-item prev\">\r\n                                                                    <button class=\"page-link\"\r\n                                                                            type=\"submit\"\r\n                                                                            onclick=\"document.getElementById('pageAction').value = 'prevPage';\">\r\n                                                                        <i class=\"tf-icon bx bx-chevron-left\"></i>\r\n                                                                    </button>\r\n                                                                </li>\r\n                                                                <c:forEach begin=\"1\" end=\"${requestScope.noOfPages}\" var=\"page\">\r\n                                                                    <c:if test=\"${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||\r\n                                                                                  (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}\">\r\n                                                                        <c:if test=\"${page == requestScope.currentPage}\">\r\n                                                                            <li class=\"page-item active\">\r\n                                                                                <button class=\"page-link\"\r\n                                                                                        type=\"submit\"\r\n                                                                                        onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                            </li>\r\n                                                                        </c:if>\r\n                                                                        <c:if test=\"${page != requestScope.currentPage}\">\r\n                                                                            <li class=\"page-item\">\r\n                                                                                <input type=\"hidden\" name=\"page\" value=\"${page}\"/>\r\n                                                                                <button class=\"page-link\"\r\n                                                                                        type=\"submit\"\r\n                                                                                        onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                            </li>\r\n                                                                        </c:if>\r\n                                                                        <c:if test=\"${(page == 2) && (page < requestScope.currentPage - 1)}\">\r\n                                                                            <li class=\"page-item\">\r\n                                                                                <button class=\"page-link\">...</button>\r\n                                                                            </li>\r\n                                                                        </c:if>\r\n                                                                        <c:if test=\"${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}\">\r\n                                                                            <li class=\"page-item\">\r\n                                                                                <button class=\"page-link\">...</button>\r\n                                                                            </li>\r\n                                                                        </c:if>\r\n                                                                    </c:if>\r\n                                                                </c:forEach>\r\n                                                                <li class=\"page-item next\">\r\n                                                                    <button class=\"page-link\"\r\n                                                                            type=\"submit\"\r\n                                                                            onclick=\"document.getElementById('pageAction').value = 'nextPage';\">\r\n                                                                        <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                    </button>\r\n                                                                </li>\r\n\r\n                                                                <li class=\"page-item last\">\r\n                                                                    <button class=\"page-link\"\r\n                                                                            type=\"submit\"\r\n                                                                            onclick=\"document.getElementById('pageAction').value = 'lastPage';\">\r\n                                                                        <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                    </button>\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </nav>\r\n                                                        <!--/ Basic Pagination -->\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <div class=\"modal fade\" id=\"modalOrder\" tabindex=\"-1\" aria-hidden=\"true\">\r\n            <form action=\"${pageContext.request.contextPath}/lesson/update\">\r\n                <input type=\"hidden\" name=\"lessonId\" id=\"orderLessonId\"/>\r\n                <input type=\"hidden\" name=\"action\" value=\"changeOrder\"/>\r\n                <input type=\"hidden\" name=\"orderAction\" id=\"orderAction\"/>\r\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"modalCenterTitle\">Change order</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <h5 id=\"modalOrderBodyText\"></h5>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                No\r\n                            </button>\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <script>\r\n            function assignValue(lessonId, action) {\r\n                document.getElementById(\"lessonId\").value = lessonId;\r\n                let text1 = \"Are you sure you want to \";\r\n                let text2 = \" lesson \";\r\n                let text3 = \"?\"\r\n                let s = text1 + action + text2 + text3;\r\n                document.getElementById(\"modalBodyText\").innerHTML = s;\r\n            }\r\n\r\n            function assignOrderValue(lessonId, action) {\r\n                document.getElementById(\"orderLessonId\").value = lessonId;\r\n                let text1 = \"Are you sure you want to move \";\r\n                let text2 = \" lesson?\";\r\n                let s = text1 + action + text2;\r\n                document.getElementById(\"modalOrderBodyText\").innerHTML = s;\r\n                document.getElementById(\"orderAction\").value = action;\r\n            }\r\n        </script>\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"./lib/easing/easing.min.js\"></script>\r\n        <script src=\"./lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"./lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"./lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"./js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js assets/vendor/js/core.js -->\r\n\r\n        <script src=\"./assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"./assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"./assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"./assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"./assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"./assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"./assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n\r\n        <script src=\"js/sider.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/lesson/lessonlist.jsp b/web/WEB-INF/views/lesson/lessonlist.jsp
--- a/web/WEB-INF/views/lesson/lessonlist.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/lesson/lessonlist.jsp	(date 1721635964782)
@@ -85,8 +85,7 @@
 
                             <div>
                                 <form action="${pageContext.request.contextPath}/lesson/new">
-                                    <input type="hidden" name="subjectid" value="${requestScope.subject.id}"/>
-                                    <input type="hidden" name="action" value="goToPage"/>
+                                    <input type="hidden" name="subjectId" value="${requestScope.subject.id}"/>
                                     <button class="btn btn-primary px-3">
                                         <i class="fa fa-plus-square mr-3"></i>
                                         Add lesson
@@ -105,12 +104,6 @@
                                                         this.size = 5;
                                                     }"  
                                             onblur="this.size = 0;">
-                                        <c:if test="${requestScope.subject == null}">
-                                            <option value="all" selected>All subjects</option>
-                                        </c:if>
-                                        <c:if test="${requestScope.subject != null}">
-                                            <option value="all">All subjects</option>
-                                        </c:if>
                                         <c:forEach items="${requestScope.subjectList}" var="subject">
                                             <c:if test="${subject.id == requestScope.subject.id}">
                                                 <option value="${subject.id}" selected>${subject.code}</option>
@@ -128,14 +121,6 @@
                                                         document.getElementById('sortBy').style.height = '115px';
                                                     }"  
                                             onblur="this.size = 0;document.getElementById('sortBy').style.height = '38px';">
-                                        <c:if test="${requestScope.sortBy == null || requestScope.sortBy.isEmpty()
-                                                      || requestScope.sortBy.equals('None')}">
-                                              <option value="None" selected>None</option>
-                                        </c:if>
-                                        <c:if test="${requestScope.sortBy != null && !requestScope.sortBy.isEmpty()
-                                                      && !requestScope.sortBy.equals('None')}">
-                                              <option value="None">None</option>
-                                        </c:if>
                                         <c:forEach items="${requestScope.sortOptions}" var="option">
                                             <c:if test="${requestScope.sortBy.equals(option)}">
                                                 <option value="${option}" selected>${option}</option>
@@ -154,6 +139,15 @@
 
                             </form>
 
+                            <div class="row mb-3">
+                                <c:if test="${requestScope.successful != null && !requestScope.successful.isEmpty()}">
+                                    <h6 class="text-success">${requestScope.successful}</h6>
+                                </c:if>
+                                <c:if test="${requestScope.err != null && !requestScope.err.isEmpty()}">
+                                    <h6 class="text-danger">${requestScope.err}</h6>
+                                </c:if>
+                            </div>
+
                             <!-- Basic Bootstrap Table -->
                             <div class="card">
                                 <h5 class="card-header">Lesson list</h5>
@@ -301,9 +295,10 @@
                                                                         <i class="tf-icon bx bx-chevron-left"></i>
                                                                     </button>
                                                                 </li>
+                                                                <c:set var="noOfPages" value="${requestScope.noOfPages}"></c:set>
                                                                 <c:forEach begin="1" end="${requestScope.noOfPages}" var="page">
-                                                                    <c:if test="${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||
-                                                                                  (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}">
+                                                                    <c:if test="${(page == 1) || (page == 2) || (Math.abs(page - requestScope.currentPage) <= 1)
+                                                                                  || (page == noOfPages) || (page == noOfPages - 1)}">
                                                                         <c:if test="${page == requestScope.currentPage}">
                                                                             <li class="page-item active">
                                                                                 <button class="page-link"
@@ -319,16 +314,17 @@
                                                                                         onclick="document.getElementById('newPage').value = ${page}">${page}</button>
                                                                             </li>
                                                                         </c:if>
-                                                                        <c:if test="${(page == 2) && (page < requestScope.currentPage - 1)}">
-                                                                            <li class="page-item">
-                                                                                <button class="page-link">...</button>
-                                                                            </li>
-                                                                        </c:if>
-                                                                        <c:if test="${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}">
-                                                                            <li class="page-item">
-                                                                                <button class="page-link">...</button>
-                                                                            </li>
-                                                                        </c:if>
+                                                                    </c:if>
+                                                                    <c:set var="currentPage" value="${requestScope.currentPage}"></c:set>
+                                                                    <c:if test="${(page == currentPage - 2) && (page > 2)}">
+                                                                        <li class="page-item">
+                                                                            <button class="page-link">...</button>
+                                                                        </li>
+                                                                    </c:if>
+                                                                    <c:if test="${(page == currentPage + 2) && (page < noOfPages - 1)}">
+                                                                        <li class="page-item">
+                                                                            <button class="page-link">...</button>
+                                                                        </li>
                                                                     </c:if>
                                                                 </c:forEach>
                                                                 <li class="page-item next">
Index: web/WEB-INF/views/lesson/lessondetails.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>Lesson details</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n        <script>\r\n            function setActiveTab(currentPage) {\r\n                if (currentPage === 'enterData' || currentPage === null || currentPage === '') {\r\n                    document.getElementById(\"navs-pills-enter-data\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = true;\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonMaterial\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonMaterial\").ariaSelected = false;\r\n                } else {\r\n                    document.getElementById(\"navs-pills-material\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonMaterial\").ariaSelected = true;\r\n                    document.getElementById(\"buttonMaterial\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = false;\r\n                }\r\n            }\r\n            function getActiveTab() {\r\n                if (document.getElementById(\"buttonMaterial\").className === 'nav-link active') {\r\n                    return \"inportFile\";\r\n                } else {\r\n                    return \"enterData\";\r\n                }\r\n            }\r\n            function setActiveTabForRefresh() {\r\n                document.getElementById('currentPage').value = getActiveTab();\r\n            }\r\n        </script>\r\n\r\n    </head>\r\n\r\n    <body onload=\"setActiveTab('${requestScope.currentPage}');\">\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Lesson /</span> Lesson details</h4>\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"subject\">Subject: </label>\r\n                                <input type=\"text\" value=\"${requestScope.lesson.subject.code}\" readonly id=\"subject\"/>\r\n                            </div>\r\n                            <form action=\"${pageContext.request.contextPath}/lesson/update\"\r\n                                  enctype=\"multipart/form-data\"\r\n                                  method=\"post\">\r\n                                <input type=\"hidden\" name=\"lessonId\" value=\"${requestScope.lesson.id}\"/>\r\n                                <input type=\"hidden\" name=\"action\" id=\"action\"/>\r\n                                <div class=\"row\">\r\n                                    <div class=\"nav-align-top mb-4\">\r\n                                        <ul class=\"nav nav-pills mb-3\" role=\"tablist\">\r\n                                            <li class=\"nav-item\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    id=\"buttonEnterData\"\r\n                                                    role=\"tab\"\r\n                                                    data-bs-toggle=\"tab\"\r\n                                                    data-bs-target=\"#navs-pills-enter-data\"\r\n                                                    aria-controls=\"navs-pills-enter-data\">\r\n                                                    Update lesson name\r\n                                                </button>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    id=\"buttonMaterial\"\r\n                                                    role=\"tab\"\r\n                                                    data-bs-toggle=\"tab\"\r\n                                                    data-bs-target=\"#navs-pills-material\"\r\n                                                    aria-controls=\"navs-pills-material\">\r\n                                                    View lesson's materials\r\n                                                </button>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div class=\"tab-content\" style=\"width: 100%;\">\r\n                                            <div class=\"tab-pane fade\" id=\"navs-pills-enter-data\" role=\"tabpanel\">\r\n                                                <div class=\"col-xxl\">\r\n                                                    <div class=\"card mb-4\">\r\n                                                        <div class=\"card-header d-flex align-items-center justify-content-between mb-3\">\r\n                                                            <h5 class=\"mb-0\">Lesson details</h5>\r\n                                                            <small class=\"text-muted float-end\">Input subject name</small>\r\n                                                        </div>\r\n                                                        <div class=\"card-body\">\r\n\r\n                                                            <div class=\"row mb-3\">\r\n                                                                <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname\">Name</label>\r\n                                                                <div class=\"col-sm-10\">\r\n                                                                    <div class=\"input-group input-group-merge\">\r\n                                                                        <span id=\"basic-icon-default-fullname2\" class=\"input-group-text\">\r\n                                                                            <i class=\"bx bx-rename\"></i></span>\r\n                                                                        <input\r\n                                                                            type=\"text\"\r\n                                                                            class=\"form-control\"\r\n                                                                            id=\"basic-icon-default-fullname\"\r\n                                                                            name=\"name\"\r\n                                                                            value=\"${requestScope.lesson.name}\"\r\n                                                                            placeholder=\"Lesson name\"\r\n                                                                            aria-label=\"Lesson name\"\r\n                                                                            aria-describedby=\"basic-icon-default-fullname2\" />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <c:if test=\"${requestScope.err != null && !requestScope.err.isEmpty()}\">\r\n                                                                <div class=\"row mb-3\">\r\n                                                                    <div class=\"col-sm-2\"></div>\r\n                                                                    <div class=\"col-sm-10\">\r\n                                                                        <h6 style=\"color: red;\">${requestScope.err}</h6>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </c:if>\r\n                                                            <div class=\"row justify-content-end\">\r\n                                                                <div class=\"col-sm-10\">\r\n                                                                    <button type=\"submit\" class=\"btn btn-primary\"\r\n                                                                            onclick=\"document.getElementById('action').value = 'updateLesson';\"> \r\n                                                                        Update lesson \r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"tab-pane fade\" id=\"navs-pills-material\" role=\"tabpanel\">\r\n                                                <div class=\"row mb-4\">\r\n                                                    <label for=\"formFile\" class=\"form-label\">Choose a file</label>\r\n                                                    <div class=\"col-sm-9\">\r\n                                                        <input class=\"form-control\" type=\"file\" id=\"formFile\"\r\n                                                               name=\"file\"\r\n                                                               style=\"width: 100%;\"/>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-3\">\r\n                                                        <button\r\n                                                            style=\"height: 38px;\" class=\"btn btn-primary ml-3\"\r\n                                                            type=\"submit\"\r\n                                                            onclick=\"document.getElementById('action').value = 'insertMaterial'\">\r\n                                                            Add material\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <c:if test=\"${(requestScope.fileErr != null) && (!requestScope.fileErr.isEmpty())}\">\r\n                                                    <div class=\"row mb-3\">\r\n                                                        <h5 style=\"color: red;\">${requestScope.fileErr}</h5>\r\n                                                    </div>\r\n                                                </c:if>\r\n                                                <div class=\"table-responsive text-nowrap\">\r\n                                                    <table class=\"table\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th>#</th>\r\n                                                                <th>Name</th>\r\n                                                                <th></th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody class=\"table-border-bottom-0\">\r\n                                                            <c:forEach items=\"${requestScope.materialList}\" var=\"material\">\r\n                                                                <tr>\r\n                                                                    <td>${material.id}</td>\r\n                                                                    <td>\r\n                                                                        <a href=\"../${material.uri}\" download=\"${material.name}\">\r\n                                                                            ${material.name}\r\n                                                                        </a>\r\n                                                                    </td>\r\n                                                                    <td>\r\n                                                                        <button class=\"btn btn-icon btn-outline-danger\"\r\n                                                                                type=\"button\"\r\n                                                                                style=\"height: 25px; width: 25px; float: left;\"\r\n                                                                                data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Remove\"\r\n                                                                                onclick=\"\r\n                                                                                        document.getElementById('materialId').value = ${material.id};\"\r\n                                                                                data-bs-toggle=\"modal\" data-bs-target=\"#modalMaterial\">\r\n                                                                            <i class=\"bx bx-trash\"></i>\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </c:forEach>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n                            <a href=\"${pageContext.request.contextPath}/lesson\" class=\"btn btn-primary\">Back</a>\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <div class=\"modal fade\" id=\"modalMaterial\" tabindex=\"-1\" aria-hidden=\"true\">\r\n            <form action=\"${pageContext.request.contextPath}/lesson/update\">\r\n                <input type=\"hidden\" name=\"lessonId\" value=\"${requestScope.lesson.id}\"/>\r\n                <input type=\"hidden\" name=\"action\" value=\"removeMaterial\"/>\r\n                <input type=\"hidden\" name=\"materialId\" id=\"materialId\"/>\r\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"modalCenterTitle\">Remove material</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <h5 id=\"modalOrderBodyText\">Are you sure you want to remove material?</h5>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                No\r\n                            </button>\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/lesson/lessondetails.jsp b/web/WEB-INF/views/lesson/lessondetails.jsp
--- a/web/WEB-INF/views/lesson/lessondetails.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/lesson/lessondetails.jsp	(date 1721635964781)
@@ -155,7 +155,7 @@
                                                     <div class="card mb-4">
                                                         <div class="card-header d-flex align-items-center justify-content-between mb-3">
                                                             <h5 class="mb-0">Lesson details</h5>
-                                                            <small class="text-muted float-end">Input subject name</small>
+                                                            <small class="text-muted float-end">Input lesson name</small>
                                                         </div>
                                                         <div class="card-body">
 
@@ -216,9 +216,17 @@
                                                 </div>
                                                 <c:if test="${(requestScope.fileErr != null) && (!requestScope.fileErr.isEmpty())}">
                                                     <div class="row mb-3">
-                                                        <h5 style="color: red;">${requestScope.fileErr}</h5>
+                                                        <h6 style="color: red;">${requestScope.fileErr}</h6>
                                                     </div>
                                                 </c:if>
+                                                <c:if test="${(requestScope.fileSuccessful != null) && (!requestScope.fileSuccessful.isEmpty())}">
+                                                    <div class="row mb-3">
+                                                        <h6 class="text-success">${requestScope.fileSuccessful}</h6>
+                                                    </div>
+                                                </c:if>
+                                                <div class="row mb-3">
+                                                    <h5 style="color: black;">${requestScope.lesson.name}</h5>
+                                                </div>
                                                 <div class="table-responsive text-nowrap">
                                                     <table class="table">
                                                         <thead>
Index: web/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<web-app version=\"6.0\" xmlns=\"https://jakarta.ee/xml/ns/jakartaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd\">\r\n    <servlet>\r\n        <servlet-name>LoginGoogleServlet</servlet-name>\r\n        <servlet-class>controller.google.LoginGoogleServlet</servlet-class>\r\n    </servlet>\r\n    <!--    <servlet>-->\r\n    <!--        <servlet-name>LoginFacebookServlet</servlet-name>-->\r\n    <!--        <servlet-class>controller.facebook.LoginFacebookServlet</servlet-class>-->\r\n    <!--    </servlet>-->\r\n    <servlet>\r\n        <servlet-name>SignUpServlet</servlet-name>\r\n        <servlet-class>controller.signup.SignUpServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>LoginServlet</servlet-name>\r\n        <servlet-class>controller.login.LoginServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>SignUpGoogle</servlet-name>\r\n        <servlet-class>controller.google.SignUpGoogle</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>LogoutServelt</servlet-name>\r\n        <servlet-class>controller.logout.LogoutServelt</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>ResetPassword</servlet-name>\r\n        <servlet-class>controller.password.ResetPassword</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>ForgotPassword</servlet-name>\r\n        <servlet-class>controller.password.ForgotPassword</servlet-class>\r\n    </servlet>\r\n    <!--    <servlet>-->\r\n    <!--        <servlet-name>SendCode</servlet-name>-->\r\n    <!--        <servlet-class>controller.signup.SendCode</servlet-class>-->\r\n    <!--    </servlet>-->\r\n    <servlet>\r\n        <servlet-name>VerifyEmail</servlet-name>\r\n        <servlet-class>controller.signup.VerifyEmail</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>NewSubjectServlet</servlet-name>\r\n        <servlet-class>controller.subject.NewSubjectServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>CourseServlet</servlet-name>\r\n        <servlet-class>controller.course.CourseServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>MyCourseServlet</servlet-name>\r\n        <servlet-class>controller.course.MyCourseServlet</servlet-class>\r\n    </servlet>\r\n    <!--    <servlet>-->\r\n    <!--        <servlet-name>CourseListServlet</servlet-name>-->\r\n    <!--        <servlet-class>controller.course.CourseListServlet</servlet-class>-->\r\n    <!--    </servlet>-->\r\n    <servlet>\r\n        <servlet-name>CourseDetailServlet</servlet-name>\r\n        <servlet-class>controller.course.CourseDetailServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>CourseEnroll</servlet-name>\r\n        <servlet-class>controller.course.CourseEnroll</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>CourseNewAnnouncement</servlet-name>\r\n        <servlet-class>controller.course.CourseNewAnnouncement</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>ActivationServlet</servlet-name>\r\n        <servlet-class>controller.login.ActivationServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardServlet</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardQuestionServlet</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardQuestionServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardAddServlet</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardAddServlet</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardLearn</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardLearn</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardMatch</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardMatch</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardTest</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardTest</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>UserDashboardController</servlet-name>\r\n        <servlet-class>controller.user.UserDashboardController</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardEdit</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardEdit</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardUpdate</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardUpdate</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>FlashcardDelete</servlet-name>\r\n        <servlet-class>controller.flashcard.FlashcardDelete</servlet-class>\r\n    </servlet>\r\n    <servlet-mapping>\r\n        <servlet-name>LoginGoogleServlet</servlet-name>\r\n        <url-pattern>/loginGG</url-pattern>\r\n    </servlet-mapping>\r\n    <!--    <servlet-mapping>-->\r\n    <!--        <servlet-name>LoginFacebookServlet</servlet-name>-->\r\n    <!--        <url-pattern>/loginFB</url-pattern>-->\r\n    <!--    </servlet-mapping>-->\r\n    <servlet-mapping>\r\n        <servlet-name>SignUpServlet</servlet-name>\r\n        <url-pattern>/signup</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>LoginServlet</servlet-name>\r\n        <url-pattern>/login</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>SignUpGoogle</servlet-name>\r\n        <url-pattern>/signupGG</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>LogoutServelt</servlet-name>\r\n        <url-pattern>/logout</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>HomeServlet</servlet-name>\r\n        <url-pattern>/home</url-pattern>\r\n    </servlet-mapping>\r\n    <!--     <servlet>-->\r\n    <!--        <servlet-name>AddNewUser</servlet-name>-->\r\n    <!--        <servlet-class>controller.user.AddNewUser</servlet-class>-->\r\n    <!--    </servlet>-->\r\n    <!--    <servlet-mapping>-->\r\n    <!--        <servlet-name>AddNewUser</servlet-name>-->\r\n    <!--        <url-pattern>/addnewuser</url-pattern>-->\r\n    <!--    </servlet-mapping>-->\r\n    <servlet>\r\n        <servlet-name>UserListController</servlet-name>\r\n        <servlet-class>controller.user.UserListController</servlet-class>\r\n    </servlet>\r\n    <servlet>\r\n        <servlet-name>UserDetailController</servlet-name>\r\n        <servlet-class>controller.user.UserDetailController</servlet-class>\r\n    </servlet>\r\n    <servlet-mapping>\r\n        <servlet-name>UserListController</servlet-name>\r\n        <url-pattern>/userlist</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>UserDetailController</servlet-name>\r\n        <url-pattern>/userdetail</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>ResetPassword</servlet-name>\r\n        <url-pattern>/resetpassword</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>ForgotPassword</servlet-name>\r\n        <url-pattern>/forgotpassword</url-pattern>\r\n    </servlet-mapping>\r\n    <!--    <servlet-mapping>-->\r\n    <!--        <servlet-name>SendCode</servlet-name>-->\r\n    <!--        <url-pattern>/send-code</url-pattern>-->\r\n    <!--    </servlet-mapping>-->\r\n    <servlet-mapping>\r\n        <servlet-name>VerifyEmail</servlet-name>\r\n        <url-pattern>/verify-email</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>NewSubjectServlet</servlet-name>\r\n        <url-pattern>/newsubject</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>CourseServlet</servlet-name>\r\n        <url-pattern>/course</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>MyCourseServlet</servlet-name>\r\n        <url-pattern>/my-course</url-pattern>\r\n    </servlet-mapping>\r\n    <!--    <servlet-mapping>-->\r\n    <!--        <servlet-name>CourseListServlet</servlet-name>-->\r\n    <!--        <url-pattern>/course-list</url-pattern>-->\r\n    <!--    </servlet-mapping>-->\r\n    <servlet-mapping>\r\n        <servlet-name>CourseDetailServlet</servlet-name>\r\n        <url-pattern>/course-detail</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>CourseEnroll</servlet-name>\r\n        <url-pattern>/enroll</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>CourseNewAnnouncement</servlet-name>\r\n        <url-pattern>/post-announcement</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>ActivationServlet</servlet-name>\r\n        <url-pattern>/activate</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardServlet</servlet-name>\r\n        <url-pattern>/flashcard</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardQuestionServlet</servlet-name>\r\n        <url-pattern>/flashcard-question</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardAddServlet</servlet-name>\r\n        <url-pattern>/flashcard-add</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardLearn</servlet-name>\r\n        <url-pattern>/flashcard-learn</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardMatch</servlet-name>\r\n        <url-pattern>/flashcard-match</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardTest</servlet-name>\r\n        <url-pattern>/flashcard-test</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>UserDashboardController</servlet-name>\r\n        <url-pattern>/user-dashboard</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardEdit</servlet-name>\r\n        <url-pattern>/flashcard-edit</url-pattern>\r\n    </servlet-mapping>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardUpdate</servlet-name>\r\n        <url-pattern>/flashcard-update</url-pattern>\r\n    </servlet-mapping>\r\n    <listener>\r\n        <listener-class>AppContextListener</listener-class>\r\n    </listener>\r\n    <servlet-mapping>\r\n        <servlet-name>FlashcardDelete</servlet-name>\r\n        <url-pattern>/flashcard-delete</url-pattern>\r\n    </servlet-mapping>\r\n    <welcome-file-list>\r\n        <welcome-file>home</welcome-file>\r\n    </welcome-file-list>\r\n</web-app>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/web.xml b/web/WEB-INF/web.xml
--- a/web/WEB-INF/web.xml	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/web.xml	(date 1721635964786)
@@ -100,18 +100,6 @@
         <servlet-name>UserDashboardController</servlet-name>
         <servlet-class>controller.user.UserDashboardController</servlet-class>
     </servlet>
-    <servlet>
-        <servlet-name>FlashcardEdit</servlet-name>
-        <servlet-class>controller.flashcard.FlashcardEdit</servlet-class>
-    </servlet>
-    <servlet>
-        <servlet-name>FlashcardUpdate</servlet-name>
-        <servlet-class>controller.flashcard.FlashcardUpdate</servlet-class>
-    </servlet>
-    <servlet>
-        <servlet-name>FlashcardDelete</servlet-name>
-        <servlet-class>controller.flashcard.FlashcardDelete</servlet-class>
-    </servlet>
     <servlet-mapping>
         <servlet-name>LoginGoogleServlet</servlet-name>
         <url-pattern>/loginGG</url-pattern>
@@ -239,21 +227,6 @@
     <servlet-mapping>
         <servlet-name>UserDashboardController</servlet-name>
         <url-pattern>/user-dashboard</url-pattern>
-    </servlet-mapping>
-    <servlet-mapping>
-        <servlet-name>FlashcardEdit</servlet-name>
-        <url-pattern>/flashcard-edit</url-pattern>
-    </servlet-mapping>
-    <servlet-mapping>
-        <servlet-name>FlashcardUpdate</servlet-name>
-        <url-pattern>/flashcard-update</url-pattern>
-    </servlet-mapping>
-    <listener>
-        <listener-class>AppContextListener</listener-class>
-    </listener>
-    <servlet-mapping>
-        <servlet-name>FlashcardDelete</servlet-name>
-        <url-pattern>/flashcard-delete</url-pattern>
     </servlet-mapping>
     <welcome-file-list>
         <welcome-file>home</welcome-file>
Index: src/java/dal/LessonDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dal;\r\n\r\nimport java.io.Serializable;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport model.Lesson;\r\n\r\npublic class LessonDAO extends DBContext implements Serializable {\r\n\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    private Lesson getLessonInfo(ResultSet rs) throws SQLException {\r\n        Lesson l = new Lesson();\r\n        l.setId(rs.getInt(\"id\"));\r\n        l.setName(rs.getString(\"name\"));\r\n        int subjectId = rs.getInt(\"subject_id\");\r\n        l.setSubjectId(rs.getInt(\"subject_id\"));\r\n        l.setSubject(subjectDAO.getSubjectMatchId(subjectId));\r\n        l.setStatus(rs.getBoolean(\"status\"));\r\n        l.setOrder(rs.getInt(\"order\"));\r\n        return l;\r\n    }\r\n\r\n    public ArrayList<Lesson> getAllLessons() {\r\n        String sql = \"select * from lesson;\";\r\n        ArrayList<Lesson> list = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Lesson l = getLessonInfo(rs);\r\n                list.add(l);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public Lesson getLessonMatchId(int lessonId) {\r\n        String sql = \"select * from lesson where id = ?;\";\r\n        Lesson l = null;\r\n\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, lessonId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                l = getLessonInfo(rs);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    public int getLatestOrder() {\r\n        ArrayList<Lesson> list = getAllLessons();\r\n        int max = 0;\r\n        for (Lesson lesson : list) {\r\n            int order = lesson.getOrder();\r\n            if (order > max) {\r\n                max = order;\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    public void addLesson(String name, int subjectId) throws SQLException {\r\n        String sql = \"insert into lesson(name, subject_id, `order`) values (?,?,?);\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, name);\r\n        st.setInt(2, subjectId);\r\n        st.setInt(3, getLatestOrder() + 1);\r\n        st.execute();\r\n    }\r\n\r\n    public void updateLesson(Lesson lesson) throws SQLException {\r\n\r\n        String sql = \"update lesson set name = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, lesson.getName());\r\n        st.setInt(2, lesson.getId());\r\n        st.execute();\r\n\r\n    }\r\n\r\n    public void changeStatus(int lessonId) throws SQLException {\r\n        boolean newStatus = !getLessonMatchId(lessonId).isStatus();\r\n        String sql = \"update lesson set status = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setBoolean(1, newStatus);\r\n        st.setInt(2, lessonId);\r\n        st.execute();\r\n    }\r\n\r\n    private Lesson getLessonByOrder(int order) {\r\n        String sql = \"select * from lesson where `order` = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, order);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return getLessonInfo(rs);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private void updateOrder(int lessonId, int order) throws SQLException {\r\n        String sql = \"update lesson set `order` = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, order);\r\n        st.setInt(2, lessonId);\r\n        st.execute();\r\n    }\r\n\r\n    public void changeOrder(int lessonId, String action) throws SQLException {\r\n        int thisOrder = getLessonMatchId(lessonId).getOrder();\r\n        int newOrder = 0;\r\n        switch (action) {\r\n            case \"up\":\r\n                newOrder = thisOrder - 1;\r\n                break;\r\n            case \"down\":\r\n                newOrder = thisOrder + 1;\r\n                break;\r\n        }\r\n        if (newOrder >= 1 && newOrder <= getLatestOrder()) {\r\n            Lesson secondLesson = getLessonByOrder(newOrder);\r\n            if (secondLesson != null){\r\n                updateOrder(lessonId, newOrder);\r\n                updateOrder(secondLesson.getId(), thisOrder);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    public ArrayList<Lesson> getAllLesson(int subjectId) {\r\n        String sql = \"select * from lesson where subject_id = ?;\";\r\n        ArrayList<Lesson> list = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, subjectId);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Lesson l = getLessonInfo(rs);\r\n                list.add(l);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/dal/LessonDAO.java b/src/java/dal/LessonDAO.java
--- a/src/java/dal/LessonDAO.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/dal/LessonDAO.java	(date 1721635964778)
@@ -57,8 +57,8 @@
         return l;
     }
 
-    public int getLatestOrder() {
-        ArrayList<Lesson> list = getAllLessons();
+    public int getLatestOrder(int subjectId) {
+        ArrayList<Lesson> list = getAllLessonsOfASubject(subjectId);
         int max = 0;
         for (Lesson lesson : list) {
             int order = lesson.getOrder();
@@ -74,7 +74,7 @@
         PreparedStatement st = connection.prepareStatement(sql);
         st.setString(1, name);
         st.setInt(2, subjectId);
-        st.setInt(3, getLatestOrder() + 1);
+        st.setInt(3, getLatestOrder(subjectId) + 1);
         st.execute();
     }
 
@@ -97,11 +97,12 @@
         st.execute();
     }
 
-    private Lesson getLessonByOrder(int order) {
-        String sql = "select * from lesson where `order` = ?;";
+    private Lesson getLessonByOrder(int order, int subjectId) {
+        String sql = "select * from lesson where `order` = ? and subject_id = ?;";
         try {
             PreparedStatement st = connection.prepareStatement(sql);
             st.setInt(1, order);
+            st.setInt(2, subjectId);
             ResultSet rs = st.executeQuery();
             if (rs.next()) {
                 return getLessonInfo(rs);
@@ -121,7 +122,8 @@
     }
 
     public void changeOrder(int lessonId, String action) throws SQLException {
-        int thisOrder = getLessonMatchId(lessonId).getOrder();
+        Lesson lesson = getLessonMatchId(lessonId);
+        int thisOrder = lesson.getOrder();
         int newOrder = 0;
         switch (action) {
             case "up":
@@ -131,17 +133,18 @@
                 newOrder = thisOrder + 1;
                 break;
         }
-        if (newOrder >= 1 && newOrder <= getLatestOrder()) {
-            Lesson secondLesson = getLessonByOrder(newOrder);
-            if (secondLesson != null){
+        int subjectId = lesson.getSubjectId();
+        if (newOrder >= 1 && newOrder <= getLatestOrder(subjectId)) {
+            Lesson secondLesson = getLessonByOrder(newOrder, subjectId);
+            if (secondLesson != null) {
                 updateOrder(lessonId, newOrder);
                 updateOrder(secondLesson.getId(), thisOrder);
             }
         }
 
     }
-    
-    public ArrayList<Lesson> getAllLesson(int subjectId) {
+
+    public ArrayList<Lesson> getAllLessonsOfASubject(int subjectId) {
         String sql = "select * from lesson where subject_id = ?;";
         ArrayList<Lesson> list = new ArrayList<>();
         try {
@@ -158,4 +161,14 @@
         return list;
     }
 
+    public boolean isLessonExist(String name, int subjectId) {
+        ArrayList<Lesson> list = getAllLessonsOfASubject(subjectId);
+        for (Lesson lesson : list) {
+            if (lesson.getName().equals(name)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
 }
Index: src/java/controller/subject/SubjectListServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.subject;\r\n\r\nimport dal.SubjectDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"SubjectListServlet\", urlPatterns = {\"/subjectlist\"})\r\npublic class SubjectListServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet UserListServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet UserListServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    void refreshSession(HttpServletRequest request) {\r\n        HttpSession session = request.getSession();\r\n        session.setAttribute(\"user\", session.getAttribute(\"user\"));\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            request.setAttribute(\"list\", subjectDAO.getAllSubject());\r\n            request.getRequestDispatcher(\"subjectlist.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/subject/SubjectListServlet.java b/src/java/controller/subject/SubjectListServlet.java
--- a/src/java/controller/subject/SubjectListServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/subject/SubjectListServlet.java	(date 1721635964777)
@@ -9,7 +9,7 @@
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
-import model.user.User;
+import model.User;
 
 @WebServlet(name = "SubjectListServlet", urlPatterns = {"/subjectlist"})
 public class SubjectListServlet extends HttpServlet {
Index: src/java/controller/login/ActivationServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.login;\r\n\r\nimport dal.UserDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\npublic class ActivationServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet ActivationServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet ActivationServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        UserDAO userDAO = new UserDAO();\r\n        boolean successful = true;\r\n\r\n        String enteredCode = request.getParameter(\"code\");\r\n        String activationCode = request.getParameter(\"activationCode\");\r\n\r\n        if (enteredCode == null || enteredCode.isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Please enter your code!\");\r\n        } else {\r\n            if (!enteredCode.equals(activationCode)) {\r\n                successful = false;\r\n                request.setAttribute(\"err\", \"Incorrect code!\");\r\n            }\r\n        }\r\n\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        User user = userDAO.getUserById(userId);\r\n\r\n        if (successful) {\r\n            userDAO.changeUserStatus(userId);\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"user\", user);\r\n            response.sendRedirect(\"dashboard\");\r\n        } else {\r\n            request.setAttribute(\"code\", enteredCode);\r\n            request.setAttribute(\"activationCode\", activationCode);\r\n            request.setAttribute(\"user\", user);\r\n            request.getRequestDispatcher(\"enteractivationcode.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/login/ActivationServlet.java b/src/java/controller/login/ActivationServlet.java
--- a/src/java/controller/login/ActivationServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/login/ActivationServlet.java	(date 1721635964774)
@@ -8,7 +8,8 @@
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
-import model.user.User;
+import java.sql.SQLException;
+import model.User;
 
 public class ActivationServlet extends HttpServlet {
 
@@ -57,8 +58,14 @@
         int userId = Integer.parseInt(request.getParameter("userId"));
         User user = userDAO.getUserById(userId);
 
+        try {
+            userDAO.changeUserStatus(userId);
+        } catch (SQLException e) {
+            successful = false;
+            request.setAttribute("err", "Fail to activate your account, please try again!");
+        }
+
         if (successful) {
-            userDAO.changeUserStatus(userId);
             HttpSession session = request.getSession();
             session.setAttribute("user", user);
             response.sendRedirect("dashboard");
Index: src/java/controller/subject/SubjectDetailsServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.subject;\r\n\r\nimport dal.SubjectDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport java.sql.SQLException;\r\nimport model.subject.Subject;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"SubjectDetailsServlet\", urlPatterns = {\"/subjectdetails\"})\r\npublic class SubjectDetailsServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet SubjectDetailsServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet SubjectDetailsServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"viewsubjectdetails\": {\r\n                    if (request.getParameter(\"changestatus\") == null) {\r\n                        viewSubjectDetails(request, response);\r\n                    } else {\r\n                        activateOrDeactivate(request, response);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    void refreshSession(HttpServletRequest request) {\r\n        HttpSession session = request.getSession();\r\n        session.setAttribute(\"user\", session.getAttribute(\"user\"));\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"updatesubject\":\r\n                    updateSubject(request, response);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    void viewSubjectDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n        request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(id));\r\n        request.getRequestDispatcher(\"subjectdetails.jsp\").forward(request, response);\r\n    }\r\n\r\n    void activateOrDeactivate(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n        String status = request.getParameter(\"status\");\r\n\r\n        try {\r\n            subjectDAO.activateOrDeactivateSubject(id, status);\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        response.sendRedirect(\"subjectlist\");\r\n    }\r\n\r\n    void updateSubject(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String code = request.getParameter(\"code\");\r\n        String name = request.getParameter(\"name\");\r\n        String status = request.getParameter(\"status\");\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n        String err = \"\";\r\n        Subject s = new Subject();\r\n\r\n        if ((code.isEmpty()) || (name.isEmpty())) {\r\n            err = \"Input fields cannot be empty!\";\r\n        } else {\r\n            try {\r\n                s = new Subject(id, code, name, status);\r\n                subjectDAO.updateSubject(s);\r\n            } catch (SQLException e) {\r\n                err = \"Code existed!\";\r\n            }\r\n        }\r\n\r\n        if (err.isEmpty()) {\r\n            response.sendRedirect(\"subjectlist\");\r\n        } else {\r\n            request.setAttribute(\"err\", err);\r\n            request.setAttribute(\"subject\", s);\r\n            request.getRequestDispatcher(\"subjectdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/subject/SubjectDetailsServlet.java b/src/java/controller/subject/SubjectDetailsServlet.java
--- a/src/java/controller/subject/SubjectDetailsServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/subject/SubjectDetailsServlet.java	(date 1721635964776)
@@ -11,7 +11,7 @@
 import jakarta.servlet.http.HttpSession;
 import java.sql.SQLException;
 import model.subject.Subject;
-import model.user.User;
+import model.User;
 
 @WebServlet(name = "SubjectDetailsServlet", urlPatterns = {"/subjectdetails"})
 public class SubjectDetailsServlet extends HttpServlet {
Index: src/java/controller/course/CourseEnroll.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.course;\r\n\r\nimport dal.CourseDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.course.CourseDetail;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\npublic class CourseEnroll extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try {\r\n            int courseId = Integer.parseInt(request.getParameter(\"courseId\"));\r\n            CourseDetail courseDetail = new CourseDetail();\r\n\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n\r\n            if (user == null) {\r\n                // If no user is logged in, redirect to the login page\r\n                session.setAttribute(\"message\", \"Please login\");\r\n                response.sendRedirect(\"login.jsp\");\r\n                return;\r\n            }\r\n\r\n            CourseDAO courseDAO = new CourseDAO();\r\n            courseDetail = courseDAO.getCourseDetailById(courseId);\r\n            if (courseDAO.isUserEnrolledInCourse(courseDetail.getId(), user.getEmail())) {\r\n                response.sendRedirect(request.getContextPath() + \"/my-course?classId=\" + courseDetail.getId());\r\n                return;\r\n\r\n            }\r\n\r\n            boolean enrolled = courseDAO.enrollUserInCourse(user.getEmail(), courseDetail.getClassId(), courseDetail.getSubjectId());\r\n\r\n            if (enrolled) {\r\n                response.sendRedirect(\"course\");\r\n            } else {\r\n                // Handle enrollment failure, if needed\r\n                // For example, set an error message and redirect\r\n                session.setAttribute(\"message\", \"Enrollment failed. Please try again.\");\r\n                response.sendRedirect(\"course.jsp\"); // Redirect to course listing page\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Handles course enrollment for students\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/course/CourseEnroll.java b/src/java/controller/course/CourseEnroll.java
--- a/src/java/controller/course/CourseEnroll.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/course/CourseEnroll.java	(date 1721635964769)
@@ -7,7 +7,7 @@
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
 import model.course.CourseDetail;
-import model.user.User;
+import model.User;
 
 import java.io.IOException;
 import java.sql.SQLException;
Index: src/java/model/user/Role.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/model/user/Role.java b/src/java/model/Role.java
rename from src/java/model/user/Role.java
rename to src/java/model/Role.java
--- a/src/java/model/user/Role.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/model/Role.java	(date 1721635964780)
@@ -1,4 +1,4 @@
-package model.user;
+package model;
 
 public class Role {
 
Index: src/java/model/user/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/model/user/User.java b/src/java/model/User.java
rename from src/java/model/user/User.java
rename to src/java/model/User.java
--- a/src/java/model/user/User.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/model/User.java	(date 1721635964780)
@@ -1,4 +1,4 @@
-package model.user;
+package model;
 
 import java.io.Serializable;
 import java.util.Comparator;
Index: src/java/common/StringFormatter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/common/StringFormatter.java b/src/java/common/StringFormatter.java
new file mode 100644
--- /dev/null	(date 1721635964765)
+++ b/src/java/common/StringFormatter.java	(date 1721635964765)
@@ -0,0 +1,9 @@
+package common;
+
+public class StringFormatter {
+
+    public static String removeDoubleSpaces(String input) {
+        return input.replace("  ", " ");
+    }
+
+}
Index: src/java/controller/classes/ClassListServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.classes;\r\n\r\nimport dal.ClassDAO;\r\nimport dal.SubjectDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport java.sql.SQLException;\r\nimport model.classes.Classes;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"ClassListServlet\", urlPatterns = {\"/classlist\"})\r\npublic class ClassListServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet ClassServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet ClassServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    ClassDAO classDAO = new ClassDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    void refreshSession(HttpServletRequest request) {\r\n        HttpSession session = request.getSession();\r\n        session.setAttribute(\"user\", session.getAttribute(\"user\"));\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            request.setAttribute(\"list\", classDAO.getAllClasses());\r\n            request.getRequestDispatcher(\"classlist.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"addnewclass\":\r\n                    addNewClass(request, response);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n    void addNewClass(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String code = request.getParameter(\"code\");\r\n        String err = \"\";\r\n\r\n        if (code.isEmpty()) {\r\n            err = \"Code cannot be empty!\";\r\n        } else {\r\n            try {\r\n                classDAO.addNewClass(code);\r\n            } catch (SQLException e) {\r\n                err = e.getMessage();\r\n            }\r\n        }\r\n\r\n        if (!err.isEmpty()) {\r\n            request.setAttribute(\"err\", err);\r\n            request.setAttribute(\"code\", code);\r\n        }\r\n\r\n        request.setAttribute(\"list\", classDAO.getAllClasses());\r\n        request.getRequestDispatcher(\"classlist.jsp\").forward(request, response);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/classes/ClassListServlet.java b/src/java/controller/classes/ClassListServlet.java
--- a/src/java/controller/classes/ClassListServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/classes/ClassListServlet.java	(date 1721635964768)
@@ -12,7 +12,7 @@
 import jakarta.servlet.http.HttpSession;
 import java.sql.SQLException;
 import model.classes.Classes;
-import model.user.User;
+import model.User;
 
 @WebServlet(name = "ClassListServlet", urlPatterns = {"/classlist"})
 public class ClassListServlet extends HttpServlet {
Index: src/java/controller/classes/ClassDetailsServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.classes;\r\n\r\nimport dal.ClassDAO;\r\nimport dal.SubjectDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport java.sql.SQLException;\r\nimport model.classes.Classes;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"ClassDetailsServlet\", urlPatterns = {\"/classdetails\"})\r\npublic class ClassDetailsServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet ClassDetailsServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet ClassDetailsServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    ClassDAO classDAO = new ClassDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n\r\n    void refreshSession(HttpServletRequest request) {\r\n        HttpSession session = request.getSession();\r\n        session.setAttribute(\"user\", session.getAttribute(\"user\"));\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"viewclassdetails\":\r\n                    viewClassDetails(request, response);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else if (user.getRole() != 0) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            refreshSession(request);\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"updateclass\":\r\n                    updateClass(request, response);\r\n            }\r\n        }\r\n    }\r\n\r\n    void viewClassDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n\r\n        request.setAttribute(\"classes\", classDAO.getClassMatchId(id));\r\n        request.setAttribute(\"list\", classDAO.getAllClasses());\r\n        request.setAttribute(\"action\", \"viewclassdetails\");\r\n        request.setAttribute(\"subjectlist\", subjectDAO.getAllSubjectNotAssigned(id));\r\n        request.getRequestDispatcher(\"classdetails.jsp\").forward(request, response);\r\n    }\r\n\r\n    void updateClass(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int id = Integer.parseInt(request.getParameter(\"id\"));\r\n        String code = request.getParameter(\"code\");\r\n        String err = \"\";\r\n        Classes c = new Classes();\r\n\r\n        if (code.isEmpty()) {\r\n            err = \"Code cannot be blank!\";\r\n        } else {\r\n            c = new Classes(id, code);\r\n            try {\r\n                classDAO.updateClass(c);\r\n            } catch (SQLException e) {\r\n                err = \"Code already exist!\";\r\n            }\r\n        }\r\n\r\n        if (err.isEmpty()) {\r\n            response.sendRedirect(\"classlist\");\r\n        } else {\r\n            request.setAttribute(\"classes\", c);\r\n            request.setAttribute(\"err\", err);\r\n            request.setAttribute(\"subjectlist\", subjectDAO.getAllSubjectNotAssigned(id));\r\n            request.getRequestDispatcher(\"classdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/classes/ClassDetailsServlet.java b/src/java/controller/classes/ClassDetailsServlet.java
--- a/src/java/controller/classes/ClassDetailsServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/classes/ClassDetailsServlet.java	(date 1721635964767)
@@ -12,7 +12,7 @@
 import jakarta.servlet.http.HttpSession;
 import java.sql.SQLException;
 import model.classes.Classes;
-import model.user.User;
+import model.User;
 
 @WebServlet(name = "ClassDetailsServlet", urlPatterns = {"/classdetails"})
 public class ClassDetailsServlet extends HttpServlet {
Index: src/java/controller/course/CourseServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.course;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport dal.CourseDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.course.Course;\r\nimport model.course.CourseStudentCount;\r\nimport model.user.User;\r\n\r\npublic class CourseServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n            if (user == null) {\r\n                response.sendRedirect(\"login.jsp\");\r\n            } else {\r\n                CourseDAO courseDAO = new CourseDAO();\r\n                List<Course> courses = courseDAO.getAllCourse();\r\n                List<Course> myCourses = courseDAO.myCourses(user.getEmail());\r\n                \r\n                List<CourseStudentCount> courseStudentCounts = new ArrayList<>();\r\n                for (Course course : courses) {\r\n                    CourseStudentCount courseStudentCount = courseDAO.getStudentsByGroupId(course.getId());\r\n                    courseStudentCounts.add(courseStudentCount);\r\n                }\r\n\r\n                // Get current page number from request\r\n                String pageParam = request.getParameter(\"page\");\r\n                int currentPage = pageParam != null ? Integer.parseInt(pageParam) : 1;\r\n                int coursesPerPage = 3;\r\n\r\n                // Calculate total pages\r\n                int totalCourses = courses.size();\r\n                int totalPages = (int) Math.ceil((double) totalCourses / coursesPerPage);\r\n\r\n                // Calculate the start and end index for the courses to display\r\n                int startIndex = (currentPage - 1) * coursesPerPage;\r\n                int endIndex = Math.min(startIndex + coursesPerPage, totalCourses);\r\n                List<Course> coursesToDisplay = courses.subList(startIndex, endIndex);\r\n\r\n                // Set attributes for the JSP\r\n                session.setAttribute(\"courses\", courses);\r\n                session.setAttribute(\"myCourses\", myCourses);\r\n                session.setAttribute(\"courseStudentCounts\", courseStudentCounts);\r\n                request.setAttribute(\"coursesToDisplay\", coursesToDisplay);\r\n                request.setAttribute(\"currentPage\", currentPage);\r\n                request.setAttribute(\"totalPages\", totalPages);\r\n\r\n                // Forward the request to course.jsp\r\n                RequestDispatcher dispatcher = request.getRequestDispatcher(\"course.jsp\");\r\n                dispatcher.forward(request, response);\r\n            }\r\n        } catch (Exception e) {\r\n            response.sendRedirect(\"home.jsp\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/course/CourseServlet.java b/src/java/controller/course/CourseServlet.java
--- a/src/java/controller/course/CourseServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/course/CourseServlet.java	(date 1721635964770)
@@ -13,7 +13,7 @@
 import jakarta.servlet.http.HttpSession;
 import model.course.Course;
 import model.course.CourseStudentCount;
-import model.user.User;
+import model.User;
 
 public class CourseServlet extends HttpServlet {
 
Index: src/java/controller/password/ResetPassword.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.password;\r\n\r\nimport controller.encrypt.BCrypt;\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n/**\r\n * Servlet for resetting the user's password.\r\n */\r\npublic class ResetPassword extends HttpServlet {\r\n\r\n    /**\r\n     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>\r\n     * methods.\r\n     *\r\n     * @param request servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException if an I/O error occurs\r\n     */\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        UserDAO userDAO = new UserDAO();\r\n        String action = request.getParameter(\"action\");\r\n        if (action != null && action.equals(\"setNewPassword\")) {\r\n            boolean successful = true;\r\n            \r\n            String newPassword = request.getParameter(\"newPassword\");\r\n            String confirmPassword = request.getParameter(\"confirmPassword\");\r\n            int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n            if (newPassword.isEmpty()) {\r\n                successful = false;\r\n                request.setAttribute(\"newPasswordErr\", \"Password is blank!\");\r\n            }\r\n            if (newPassword.length() > 60) {\r\n                successful = false;\r\n                request.setAttribute(\"newPasswordErr\", \"Password can not exceed 60 characters!\");\r\n            }\r\n            \r\n            if (successful) {\r\n                if (!confirmPassword.equals(newPassword)) {\r\n                    successful = false;\r\n                    request.setAttribute(\"confirmPasswordErr\", \"Password does not match!\");\r\n                } else {\r\n                    try {\r\n                        userDAO.setNewPassword(userId, newPassword);\r\n                    } catch (SQLException e) {\r\n                        successful = false;\r\n                        request.setAttribute(\"err\", \"Failed to set new password, please try again later!\");\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (successful) {\r\n                response.sendRedirect(\"login.jsp\");\r\n            } else {\r\n                request.setAttribute(\"newPassword\", newPassword);\r\n                request.setAttribute(\"confirmPassword\", confirmPassword);\r\n                request.setAttribute(\"user\", userDAO.getUserById(userId));\r\n                request.getRequestDispatcher(\"setnewpassword.jsp\").forward(request, response);\r\n            }\r\n        } else {\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n            UserDAO userdao = new UserDAO();\r\n            \r\n            if (user == null) {\r\n                response.sendRedirect(\"login.jsp\");\r\n                return;\r\n            }\r\n            \r\n            String oldpassword = request.getParameter(\"oldpassword\");\r\n            String newpassword = request.getParameter(\"newpassword\");\r\n            String confirmpassword = request.getParameter(\"confirmpassword\");\r\n            \r\n            if (oldpassword == null || newpassword == null || confirmpassword == null) {\r\n                session.setAttribute(\"message\", \"Please fill in all fields.\");\r\n                response.sendRedirect(\"reset-password.jsp\");\r\n            } // Check if the old password is correct\r\n            else if (!BCrypt.checkpw(oldpassword, userdao.getPasswordByEmail(user.getEmail()))) {\r\n                session.setAttribute(\"message\", \"Incorrect password.\");\r\n                response.sendRedirect(\"reset-password.jsp\");\r\n            } else if (!newpassword.equals(confirmpassword)) {\r\n                session.setAttribute(\"message\", \"New passwords do not match.\");\r\n                response.sendRedirect(\"reset-password.jsp\");\r\n            } else {\r\n                \r\n                UserDAO dao = new UserDAO();\r\n                \r\n                try {\r\n                    dao.updatePassword(user.getEmail(), oldpassword, newpassword);\r\n                    session.setAttribute(\"message\", \"Password reset successful.\");\r\n                    response.sendRedirect(\"dashboard.jsp\");\r\n                } catch (Exception e) {\r\n                    session.setAttribute(\"message\", \"Password reset failed: \" + e.getMessage());\r\n                    response.sendRedirect(\"reset-password.jsp\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n    \r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n    \r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Handles password reset requests\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/password/ResetPassword.java b/src/java/controller/password/ResetPassword.java
--- a/src/java/controller/password/ResetPassword.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/password/ResetPassword.java	(date 1721635964775)
@@ -7,7 +7,7 @@
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
-import model.user.User;
+import model.User;
 
 import java.io.IOException;
 import java.sql.SQLException;
Index: src/java/controller/signup/VerifyEmail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template\r\n */\r\n\r\npackage controller.signup;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n/**\r\n * @author PC\r\n */\r\npublic class VerifyEmail extends HttpServlet {\r\n\r\n    /**\r\n     * Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.\r\n     *\r\n     * @param request  servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException      if an I/O error occurs\r\n     */\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        HttpSession session = request.getSession();\r\n        String code = request.getParameter(\"verifycode\");\r\n        String verificationCode = (String) session.getAttribute(\"verificationCode\");\r\n        if (code.equals(verificationCode)) {\r\n            try {\r\n                UserDAO userDAO = new UserDAO();\r\n                User user = (User) session.getAttribute(\"user\");\r\n                String password = (String) session.getAttribute(\"password\");\r\n                user.setStatus(1);\r\n                userDAO.userSignUp(user, password);\r\n                session.setAttribute(\"message\", \"Sign up successfully, please login.\");\r\n                response.sendRedirect(\"login.jsp\");\r\n            } catch (SQLException e) {\r\n                session.setAttribute(\"message\", \"Sign up failed. \" + e.getMessage());\r\n                response.sendRedirect(\"signup.jsp\");\r\n            }\r\n        } else {\r\n            request.getSession().setAttribute(\"message\", \"Verification code is incorrect.\");\r\n            response.sendRedirect(\"verificate-email.jsp\");\r\n        }\r\n    }\r\n\r\n    // <editor-fold defaultstate=\"collapsed\" desc=\"HttpServlet methods. Click on the + sign on the left to edit the code.\">\r\n\r\n    /**\r\n     * Handles the HTTP <code>GET</code> method.\r\n     *\r\n     * @param request  servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException      if an I/O error occurs\r\n     */\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    /**\r\n     * Handles the HTTP <code>POST</code> method.\r\n     *\r\n     * @param request  servlet request\r\n     * @param response servlet response\r\n     * @throws ServletException if a servlet-specific error occurs\r\n     * @throws IOException      if an I/O error occurs\r\n     */\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    /**\r\n     * Returns a short description of the servlet.\r\n     *\r\n     * @return a String containing servlet description\r\n     */\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/signup/VerifyEmail.java b/src/java/controller/signup/VerifyEmail.java
--- a/src/java/controller/signup/VerifyEmail.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/signup/VerifyEmail.java	(date 1721635964776)
@@ -11,7 +11,7 @@
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
-import model.user.User;
+import model.User;
 
 import java.io.IOException;
 import java.sql.SQLException;
Index: src/java/dal/AnswerDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dal;\r\n\r\nimport java.io.Serializable;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport model.Answer;\r\nimport model.Question;\r\n\r\npublic class AnswerDAO extends DBContext implements Serializable {\r\n\r\n    QuestionDAO questionDAO = new QuestionDAO();\r\n\r\n    public ArrayList<Answer> getAllAnswersOfAQuestion(int questionId) {\r\n        ArrayList<Answer> list = new ArrayList<>();\r\n\r\n        String sql = \"select * from answer where question_id = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, questionId);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Answer a = new Answer(rs.getInt(\"id\"), rs.getString(\"content\"),\r\n                        rs.getBoolean(\"is_correct\"), questionDAO.getQuestionMatchId(questionId));\r\n                list.add(a);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public void updateAnswer(Answer a) throws SQLException {\r\n        String sql = \"update answer set content = ?, is_correct = ? where id = ?\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, a.getContent());\r\n        st.setBoolean(2, a.isIsCorrect());\r\n        st.setInt(3, a.getId());\r\n        st.execute();\r\n    }\r\n\r\n    public void insertAnswer(Answer a, Question q) {\r\n        String sql = \"insert into answer(content,is_correct,question_id) values (?,?,\"\r\n                + \"(select id from question where content = ?));\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, a.getContent());\r\n            st.setBoolean(2, a.isIsCorrect());\r\n            st.setString(3, q.getContent());\r\n            st.execute();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/dal/AnswerDAO.java b/src/java/dal/AnswerDAO.java
--- a/src/java/dal/AnswerDAO.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/dal/AnswerDAO.java	(date 1721635964777)
@@ -6,7 +6,6 @@
 import java.sql.SQLException;
 import java.util.ArrayList;
 import model.Answer;
-import model.Question;
 
 public class AnswerDAO extends DBContext implements Serializable {
 
@@ -31,27 +30,22 @@
         return list;
     }
 
-    public void updateAnswer(Answer a) throws SQLException {
-        String sql = "update answer set content = ?, is_correct = ? where id = ?";
+    public void deleteAllAnswersOfAQuestion(int questionId) throws SQLException {
+        String sql = "delete from answer where question_id = ?;";
         PreparedStatement st = connection.prepareStatement(sql);
-        st.setString(1, a.getContent());
-        st.setBoolean(2, a.isIsCorrect());
-        st.setInt(3, a.getId());
+        st.setInt(1, questionId);
         st.execute();
     }
 
-    public void insertAnswer(Answer a, Question q) {
+    public void insertAnswer(Answer a) throws SQLException {
         String sql = "insert into answer(content,is_correct,question_id) values (?,?,"
-                + "(select id from question where content = ?));";
-        try {
-            PreparedStatement st = connection.prepareStatement(sql);
-            st.setString(1, a.getContent());
-            st.setBoolean(2, a.isIsCorrect());
-            st.setString(3, q.getContent());
-            st.execute();
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
+                + "(select id from question where content = ? and lesson_id = ?));";
+        PreparedStatement st = connection.prepareStatement(sql);
+        st.setString(1, a.getContent());
+        st.setBoolean(2, a.isIsCorrect());
+        st.setString(3, a.getQuestion().getContent());
+        st.setInt(4, a.getQuestion().getLesson().getId());
+        st.execute();
     }
 
 }
Index: src/java/dal/QuestionDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dal;\r\n\r\nimport com.mysql.cj.xdevapi.PreparableStatement;\r\nimport java.io.Serializable;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport model.Question;\r\n\r\npublic class QuestionDAO extends DBContext implements Serializable {\r\n\r\n    LessonDAO lessonDAO = new LessonDAO();\r\n\r\n    public ArrayList<Question> getAllQuestionsOfALesson(int lessonId) {\r\n        ArrayList<Question> ret = new ArrayList<>();\r\n\r\n        ArrayList<Question> list = getAllQuestions();\r\n        for (Question q : list) {\r\n            if (q.getLesson().getId() == lessonId) {\r\n                ret.add(q);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public ArrayList<Question> getAllQuestionsOfASubject(int subjectId) {\r\n        ArrayList<Question> ret = new ArrayList<>();\r\n\r\n        ArrayList<Question> list = getAllQuestions();\r\n        for (Question q : list) {\r\n            if (q.getLesson().getSubject().getId() == subjectId) {\r\n                ret.add(q);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private Question getQuestionInfo(ResultSet rs) throws SQLException {\r\n        Question q = new Question();\r\n        q.setId(rs.getInt(\"id\"));\r\n        q.setContent(rs.getString(\"content\"));\r\n        q.setLesson(lessonDAO.getLessonMatchId(rs.getInt(\"lesson_id\")));\r\n        q.setStatus(rs.getBoolean(\"status\"));\r\n        return q;\r\n    }\r\n\r\n    public ArrayList<Question> getAllQuestions() {\r\n        ArrayList<Question> list = new ArrayList<>();\r\n\r\n        String sql = \"select * from question;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Question q = getQuestionInfo(rs);\r\n                list.add(q);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public Question getQuestionMatchId(int questionId) {\r\n        String sql = \"select * from question where id = ?\";\r\n\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, questionId);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                Question q = getQuestionInfo(rs);\r\n                return q;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void changeQuestionStatus(Question q) throws SQLException {\r\n        String sql = \"update question set status = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        if (q.isStatus()) {\r\n            st.setBoolean(1, false);\r\n        } else {\r\n            st.setBoolean(1, true);\r\n        }\r\n        st.setInt(2, q.getId());\r\n        st.execute();\r\n    }\r\n\r\n    public void insertQuestion(Question q) {\r\n        String sql = \"insert into Question(content,lesson_id,status) values (?,?,?);\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, q.getContent());\r\n            st.setInt(2, q.getLesson().getId());\r\n            st.setBoolean(3, q.isStatus());\r\n            st.execute();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/dal/QuestionDAO.java b/src/java/dal/QuestionDAO.java
--- a/src/java/dal/QuestionDAO.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/dal/QuestionDAO.java	(date 1721635964778)
@@ -1,6 +1,5 @@
 package dal;
 
-import com.mysql.cj.xdevapi.PreparableStatement;
 import java.io.Serializable;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
@@ -91,17 +90,31 @@
         st.execute();
     }
 
-    public void insertQuestion(Question q) {
-        String sql = "insert into Question(content,lesson_id,status) values (?,?,?);";
-        try {
-            PreparedStatement st = connection.prepareStatement(sql);
-            st.setString(1, q.getContent());
-            st.setInt(2, q.getLesson().getId());
-            st.setBoolean(3, q.isStatus());
-            st.execute();
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
+    public boolean isQuestionExist(Question question) {
+        ArrayList<Question> list = getAllQuestionsOfASubject(question.getLesson().getSubjectId());
+        for (Question q : list) {
+            if (q.getContent().equals(question.getContent())) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    public void insertQuestion(Question q) throws SQLException {
+        String sql = "insert into question(content, status, lesson_id) values (?,?,?);";
+        PreparedStatement st = connection.prepareStatement(sql);
+        st.setString(1, q.getContent());
+        st.setBoolean(2, q.isStatus());
+        st.setInt(3, q.getLesson().getId());
+        st.execute();
+    }
+
+    public void updateQuestion(Question q) throws SQLException {
+        String sql = "update question set content = ? where id = ?;";
+        PreparedStatement st = connection.prepareStatement(sql);
+        st.setString(1, q.getContent());
+        st.setInt(2, q.getId());
+        st.execute();
     }
 
 }
Index: src/java/common/AvatarHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package common;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.http.Part;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport model.user.User;\r\n\r\npublic class AvatarHandler {\r\n\r\n    UserDAO userDAO = new UserDAO();\r\n\r\n    private void removeOldAvatar(String oldUri, String workingDir) {\r\n        String uri = workingDir + \"\\\\\" + oldUri.replace(\"/\", \"\\\\\");\r\n        File file = new File(uri);\r\n        System.out.println(uri);\r\n        if (file.exists()) {\r\n            file.delete();\r\n        }\r\n    }\r\n\r\n    private void deleteOldAvatar(String oldUri, String workingDir) {\r\n        if (!userDAO.isAvtExist(oldUri) && !oldUri.equals(\"assets/img/default_avt.jpg\")\r\n                && oldUri != null && !oldUri.isEmpty()) {\r\n            removeOldAvatar(oldUri, workingDir);\r\n        }\r\n    }\r\n\r\n    public void changeAvatar(int userId, String workingFolder, String workingDir,\r\n            Part filePart) throws IOException, SQLException {\r\n\r\n        FileHandler fileHandler = new FileHandler(workingFolder);\r\n        String uri = fileHandler.fileUpload(workingDir, filePart);\r\n        uri = (\"\" + uri).replace(\"\\\\\", \"/\");\r\n\r\n        User u = userDAO.getUserById(userId);\r\n        String oldUri = u.getAvatar();\r\n        System.out.println(oldUri);\r\n        deleteOldAvatar(oldUri, workingDir);\r\n\r\n        u.setAvatar(uri);\r\n        userDAO.updateAvatar(u);\r\n    }\r\n\r\n    public String uploadAvatar(String workingFolder, String workingDir, Part filePart, String oldUri)\r\n            throws IOException {\r\n        FileHandler fileHandler = new FileHandler(workingFolder);\r\n        String uri = fileHandler.fileUpload(workingDir, filePart);\r\n        uri = (\"\" + uri).replace(\"\\\\\", \"/\");\r\n        deleteOldAvatar(oldUri, workingDir);\r\n        return uri;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/common/AvatarHandler.java b/src/java/common/AvatarHandler.java
--- a/src/java/common/AvatarHandler.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/common/AvatarHandler.java	(date 1721635964764)
@@ -5,7 +5,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.sql.SQLException;
-import model.user.User;
+import model.User;
 
 public class AvatarHandler {
 
Index: src/java/common/ReadQuestionFromXlsFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package common;\r\n\r\nimport dal.AnswerDAO;\r\nimport dal.QuestionDAO;\r\nimport jakarta.servlet.http.Part;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.ArrayList;\r\nimport model.Lesson;\r\nimport model.Answer;\r\nimport model.Question;\r\nimport org.apache.poi.ss.usermodel.*;\r\n\r\npublic class ReadQuestionFromXlsFile {\r\n\r\n    QuestionDAO questionDAO = new QuestionDAO();\r\n    AnswerDAO answerDAO = new AnswerDAO();\r\n\r\n    private Question readQuestion(Row row) {\r\n        String content = row.getCell(0).toString();\r\n        Question q = new Question();\r\n        q.setContent(content);\r\n        return q;\r\n    }\r\n\r\n    private ArrayList<Answer> readAnswer(Row row) {\r\n        ArrayList<Answer> ret = new ArrayList<>();\r\n\r\n        for (Cell cell : row) {\r\n            Answer a = new Answer();\r\n            a.setContent(cell.toString());\r\n            ret.add(a);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private ArrayList<Answer> readCorrectAnswer(Row row, ArrayList<Answer> answerList) {\r\n        int index = 0;\r\n        for (Cell cell : row) {\r\n            Answer a = answerList.get(index);\r\n            a.setIsCorrect(cell.toString().equals(\"1.0\"));\r\n            answerList.set(index, a);\r\n            index++;\r\n            if (index == answerList.size()) {\r\n                return answerList;\r\n            }\r\n        }\r\n        return answerList;\r\n    }\r\n\r\n    private boolean insertQuestion(Question q, ArrayList<Answer> answerList, Lesson lesson) {\r\n        if (q.getContent().isEmpty() || q.getContent().length() > 255) {\r\n            return false;\r\n        }\r\n        int correctAnswers = 0, validAnswer = 0;\r\n        for (Answer a : answerList) {\r\n            if (a.getContent().length() <= 255) {\r\n                validAnswer++;\r\n                if (a.isIsCorrect()) {\r\n                    correctAnswers++;\r\n                }\r\n            }\r\n        }\r\n        if ((correctAnswers == 0) || (validAnswer < 2)) {\r\n            return false;\r\n        }\r\n        q.setStatus(true);\r\n        q.setLesson(lesson);\r\n        questionDAO.insertQuestion(q);\r\n        for (Answer a : answerList) {\r\n            if (a.getContent().length() <= 255) {\r\n                answerDAO.insertAnswer(a, q);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public void readQuestionFromFile(Part part, Lesson lesson) throws IOException {\r\n        Question q = null;\r\n        ArrayList<Answer> answerList = null;\r\n\r\n        InputStream fileContent = part.getInputStream();\r\n        Workbook wb = WorkbookFactory.create(fileContent);\r\n        Sheet sheet = wb.getSheetAt(0);\r\n        int rowType = 0;\r\n        for (Row row : sheet) {\r\n            rowType++;\r\n            switch (rowType % 3) {\r\n                case 1:\r\n                    answerList = new ArrayList<>();\r\n                    q = readQuestion(row);\r\n                    break;\r\n                case 2:\r\n                    answerList = readAnswer(row);\r\n                    break;\r\n                case 0:\r\n                    answerList = readCorrectAnswer(row, answerList);\r\n                    if (insertQuestion(q, answerList, lesson)) {\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/common/ReadQuestionFromXlsFile.java b/src/java/common/ReadQuestionFromXlsFile.java
--- a/src/java/common/ReadQuestionFromXlsFile.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/common/ReadQuestionFromXlsFile.java	(date 1721635964764)
@@ -5,6 +5,7 @@
 import jakarta.servlet.http.Part;
 import java.io.IOException;
 import java.io.InputStream;
+import java.sql.SQLException;
 import java.util.ArrayList;
 import model.Lesson;
 import model.Answer;
@@ -18,18 +19,25 @@
 
     private Question readQuestion(Row row) {
         String content = row.getCell(0).toString();
-        Question q = new Question();
-        q.setContent(content);
-        return q;
+        content = StringFormatter.removeDoubleSpaces(content.trim());
+        if (!content.isEmpty() && content.length() <= 255) {
+            Question q = new Question();
+            q.setContent(content);
+            return q;
+        }
+        return null;
     }
 
     private ArrayList<Answer> readAnswer(Row row) {
         ArrayList<Answer> ret = new ArrayList<>();
 
         for (Cell cell : row) {
-            Answer a = new Answer();
-            a.setContent(cell.toString());
-            ret.add(a);
+            String content = StringFormatter.removeDoubleSpaces(cell.toString().trim());
+            if (!content.isEmpty() && content.length() <= 255) {
+                Answer a = new Answer();
+                a.setContent(content);
+                ret.add(a);
+            }
         }
         return ret;
     }
@@ -49,16 +57,15 @@
     }
 
     private boolean insertQuestion(Question q, ArrayList<Answer> answerList, Lesson lesson) {
-        if (q.getContent().isEmpty() || q.getContent().length() > 255) {
+        if (q == null) {
             return false;
         }
-        int correctAnswers = 0, validAnswer = 0;
+        int correctAnswers = 0;
+        int validAnswer = answerList.size();
         for (Answer a : answerList) {
-            if (a.getContent().length() <= 255) {
-                validAnswer++;
-                if (a.isIsCorrect()) {
-                    correctAnswers++;
-                }
+            if (a.isIsCorrect()) {
+                correctAnswers++;
+
             }
         }
         if ((correctAnswers == 0) || (validAnswer < 2)) {
@@ -66,18 +73,27 @@
         }
         q.setStatus(true);
         q.setLesson(lesson);
-        questionDAO.insertQuestion(q);
-        for (Answer a : answerList) {
-            if (a.getContent().length() <= 255) {
-                answerDAO.insertAnswer(a, q);
-            }
-        }
-        return true;
+        if (!questionDAO.isQuestionExist(q)) {
+            try {
+                questionDAO.insertQuestion(q);
+                for (Answer a : answerList) {
+                    if (a.getContent().length() <= 255) {
+                        a.setQuestion(q);
+                        answerDAO.insertAnswer(a);
+                    }
+                }
+                return true;
+            } catch (SQLException e) {
+                System.out.println(e.getMessage());
+            }
+        }
+        return false;
     }
 
-    public void readQuestionFromFile(Part part, Lesson lesson) throws IOException {
+    public int readQuestionFromFile(Part part, Lesson lesson) throws IOException {
         Question q = null;
         ArrayList<Answer> answerList = null;
+        int count = 0;
 
         InputStream fileContent = part.getInputStream();
         Workbook wb = WorkbookFactory.create(fileContent);
@@ -96,10 +112,12 @@
                 case 0:
                     answerList = readCorrectAnswer(row, answerList);
                     if (insertQuestion(q, answerList, lesson)) {
+                        count++;
                     }
                     break;
             }
         }
+        return count;
     }
 
 }
Index: src/java/common/MaterialHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package common;\r\n\r\nimport dal.MaterialDAO;\r\nimport jakarta.servlet.http.Part;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport model.Material;\r\n\r\npublic class MaterialHandler {\r\n\r\n    static MaterialDAO materialDAO = new MaterialDAO();\r\n\r\n    private static void removeMaterialFile(String workingDir, String uri) {\r\n        File file = new File(workingDir + \"\\\\\" + uri.replace(\"/\", \"\\\\\"));\r\n        if (file.exists()) {\r\n            file.delete();\r\n        }\r\n    }\r\n\r\n    public static void addMaterial(int lessonId, String workingFolder,\r\n            String workingDir, Part filePart)\r\n            throws IOException, SQLException {\r\n        FileHandler fileHandler = new FileHandler(workingFolder);\r\n        String uri = fileHandler.fileUpload(workingDir, filePart);\r\n        uri = (\"\" + uri).replace(\"\\\\\", \"/\");\r\n\r\n        if (!materialDAO.isMaterialExist(lessonId, uri)) {\r\n            materialDAO.insertMaterial(lessonId, uri);\r\n        }\r\n    }\r\n\r\n    public static void removeMaterial(int lessonId, int materialId, String workingDir) throws SQLException {\r\n        materialDAO.removeFromMaterial_Lesson(lessonId, materialId);\r\n        if (!materialDAO.isMaterialUsed(materialId)) {\r\n            Material m = materialDAO.getMaterialMatchId(materialId);\r\n            if (m != null) {\r\n                removeMaterialFile(workingDir, m.getUri());\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/common/MaterialHandler.java b/src/java/common/MaterialHandler.java
--- a/src/java/common/MaterialHandler.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/common/MaterialHandler.java	(date 1721635964764)
@@ -35,6 +35,7 @@
         if (!materialDAO.isMaterialUsed(materialId)) {
             Material m = materialDAO.getMaterialMatchId(materialId);
             if (m != null) {
+                materialDAO.removeMaterial(m);
                 removeMaterialFile(workingDir, m.getUri());
             }
         }
Index: src/java/model/Question.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\nimport java.util.Comparator;\r\nimport model.Lesson;\r\n\r\npublic class Question {\r\n\r\n    private int id;\r\n    private String content;\r\n    private Lesson lesson;\r\n    private boolean status;\r\n\r\n    public Question() {\r\n    }\r\n\r\n    public Question(int id, String content, Lesson lesson, boolean status) {\r\n        this.id = id;\r\n        this.content = content;\r\n        this.lesson = lesson;\r\n        this.status = status;\r\n    }\r\n\r\n    public boolean isStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(boolean status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getContent() {\r\n        return content;\r\n    }\r\n\r\n    public void setContent(String content) {\r\n        this.content = content;\r\n    }\r\n\r\n    public Lesson getLesson() {\r\n        return lesson;\r\n    }\r\n\r\n    public void setLesson(Lesson lesson) {\r\n        this.lesson = lesson;\r\n    }\r\n\r\n    public static class SortByContent implements Comparator<Question> {\r\n\r\n        @Override\r\n        public int compare(Question q1, Question q2) {\r\n            return q1.getContent().compareTo(q2.getContent());\r\n        }\r\n\r\n    }\r\n\r\n    public static class SortByLesson implements Comparator<Question> {\r\n\r\n        @Override\r\n        public int compare(Question q1, Question q2) {\r\n            return q1.getLesson().getName()\r\n                    .compareTo(q2.getLesson().getName());\r\n        }\r\n    }\r\n\r\n    public static class SortByStatus implements Comparator<Question> {\r\n\r\n        @Override\r\n        public int compare(Question q1, Question q2) {\r\n            if (q1.isStatus() == q2.isStatus()) {\r\n                return 0;\r\n            }\r\n            if ((q1.isStatus()) && (!q2.isStatus())) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static class SortBySubject implements Comparator<Question> {\r\n\r\n        @Override\r\n        public int compare(Question q1, Question q2) {\r\n            return q1.getLesson().getSubject().getCode()\r\n                    .compareTo(q2.getLesson().getSubject().getCode());\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/model/Question.java b/src/java/model/Question.java
--- a/src/java/model/Question.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/model/Question.java	(date 1721635964780)
@@ -1,7 +1,6 @@
 package model;
 
 import java.util.Comparator;
-import model.Lesson;
 
 public class Question {
 
Index: src/java/controller/UserServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport common.AvatarHandler;\r\nimport common.EmailValidator;\r\nimport common.PasswordGenerator;\r\nimport dal.SubjectDAO;\r\nimport dal.UserDAO;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.MultipartConfig;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport jakarta.servlet.http.Part;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport mail.SendMail;\r\nimport model.subject.Subject;\r\nimport model.user.*;\r\n\r\n@MultipartConfig\r\n@WebServlet(name = \"UserServlet\", urlPatterns = {\"/user\", \"/user/update\", \"/user/details\", \"/user/new\"})\r\npublic class UserServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet UserServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet UserServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    UserDAO userDAO = new UserDAO();\r\n    AvatarHandler avatarHandler = new AvatarHandler();\r\n    private final int rowPerPage = 6;\r\n\r\n    private String getWorkingDir() {\r\n        String directory = getServletContext().getRealPath(\"\") + \"\";\r\n        return directory.replace(\"\\\\build\\\\web\\\\\", \"\\\\web\\\\\");\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doPost(request, response);\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n        String contextPath = request.getServletContext().getContextPath();\r\n        String loginPage = contextPath + \"/login.jsp\";\r\n        String homePage = contextPath + \"/home\";\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(loginPage);\r\n        } else {\r\n            User u = userDAO.getUserById(user.getId());\r\n            if (u != null && u.getEmail() != null) {\r\n                session.setAttribute(\"user\", u);\r\n                if (user.getRole() != 0) {\r\n                    response.sendRedirect(homePage);\r\n                } else {\r\n                    String action = request.getServletPath();\r\n                    switch (action) {\r\n                        case \"/user\":\r\n                            viewUserList(request, response);\r\n                            break;\r\n                        case \"/user/update\":\r\n                            updateUser(request, response);\r\n                            break;\r\n                        case \"/user/details\":\r\n                            viewUserDetails(request, response);\r\n                            break;\r\n                        case \"/user/new\":\r\n                            newUser(request, response);\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                response.sendRedirect(loginPage);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private ArrayList<String> allSortOptions() {\r\n        ArrayList<String> list = new ArrayList<>();\r\n        list.add(\"Name\");\r\n        list.add(\"Email\");\r\n        list.add(\"Role\");\r\n        list.add(\"Status\");\r\n        return list;\r\n    }\r\n\r\n    private ArrayList<User> getUsersMatchRole(int roleId, ArrayList<User> list) {\r\n        ArrayList<User> ret = new ArrayList<>();\r\n        for (User user : list) {\r\n            if (user.getRole() == roleId) {\r\n                ret.add(user);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private ArrayList<User> getUsersContainKeyWord(String keyWord, ArrayList<User> list) {\r\n        ArrayList<User> ret = new ArrayList<>();\r\n        for (User user : list) {\r\n            if (user.getName().contains(keyWord) || user.getEmail().contains(keyWord)) {\r\n                ret.add(user);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private int getNoOfPages(ArrayList<User> list) {\r\n        int length = list.size();\r\n        if (length == 0) {\r\n            return 1;\r\n        }\r\n        int noOfPages = length / rowPerPage;\r\n        if (length % rowPerPage == 0) {\r\n            return noOfPages;\r\n        }\r\n        return noOfPages + 1;\r\n    }\r\n\r\n    private int getPage(HttpServletRequest request, int noOfPages) {\r\n        String cur = request.getParameter(\"currentPage\");\r\n        if ((cur == null) || (cur.isEmpty())) {\r\n            return 1;\r\n        }\r\n\r\n        int currentPage = Integer.parseInt(cur);\r\n        switch (request.getParameter(\"pageAction\")) {\r\n            case \"firstPage\":\r\n                return 1;\r\n            case \"prevPage\": {\r\n                currentPage--;\r\n                if (currentPage < 1) {\r\n                    return 1;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"nextPage\": {\r\n                currentPage++;\r\n                if (currentPage > noOfPages) {\r\n                    return noOfPages;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"lastPage\":\r\n                return noOfPages;\r\n        }\r\n\r\n        String newpage = request.getParameter(\"newPage\");\r\n        if ((newpage != null) && (!newpage.isEmpty())) {\r\n            int newPage = Integer.parseInt(newpage);\r\n            return newPage;\r\n        }\r\n        return currentPage;\r\n\r\n    }\r\n\r\n    private int getAdminIndex(ArrayList<Role> roleList) {\r\n        int index = 0;\r\n        for (Role role : roleList) {\r\n            if (role.getName().equals(\"Admin\")) {\r\n                return index;\r\n            }\r\n            index++;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private ArrayList<Role> getRoleList() {\r\n        ArrayList<Role> roleList = userDAO.getAllRoles();\r\n        int index = getAdminIndex(roleList);\r\n        if (index != -1) {\r\n            roleList.remove(getAdminIndex(roleList));\r\n        }\r\n        return roleList;\r\n    }\r\n\r\n    private ArrayList<User> getAllUsersOfPage(int page, ArrayList<User> list) {\r\n        ArrayList<User> ret = new ArrayList<>();\r\n        int start = rowPerPage * (page - 1) + 1;\r\n        int end = rowPerPage * page;\r\n        if (start < 1) {\r\n            start = 1;\r\n        }\r\n        if (end > list.size()) {\r\n            end = list.size();\r\n        }\r\n\r\n        for (int i = start - 1; i < end; i++) {\r\n            ret.add(list.get(i));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private void viewUserList(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        ArrayList<User> list = userDAO.getAllUsers();\r\n\r\n        String rid = request.getParameter(\"roleId\");\r\n        if (rid != null && !rid.isEmpty()) {\r\n            int roleId = Integer.parseInt(rid);\r\n            request.setAttribute(\"roleId\", roleId);\r\n            if (roleId != 0) {\r\n                list = getUsersMatchRole(roleId, list);\r\n            }\r\n        }\r\n\r\n        String keyWord = request.getParameter(\"keyWord\");\r\n        if (keyWord != null && !keyWord.isEmpty()) {\r\n            list = getUsersContainKeyWord(keyWord, list);\r\n        }\r\n\r\n        String sortBy = request.getParameter(\"sortBy\");\r\n        if (sortBy != null && !sortBy.isEmpty()) {\r\n            switch (sortBy) {\r\n                case \"Name\":\r\n                    Collections.sort(list, new User.SortByName());\r\n                    break;\r\n                case \"Email\":\r\n                    Collections.sort(list, new User.SortByEmail());\r\n                    break;\r\n                case \"Role\":\r\n                    Collections.sort(list, new User.SortByRole());\r\n                    break;\r\n                case \"Status\":\r\n                    Collections.sort(list, new User.SortByStatus());\r\n                    break;\r\n            }\r\n        }\r\n\r\n        int noOfPages = getNoOfPages(list);\r\n        int currentPage = getPage(request, noOfPages);\r\n        list = getAllUsersOfPage(currentPage, list);\r\n\r\n        request.setAttribute(\"list\", list);\r\n        request.setAttribute(\"roleList\", getRoleList());\r\n        request.setAttribute(\"keyWord\", keyWord);\r\n        request.setAttribute(\"sortOptions\", allSortOptions());\r\n        request.setAttribute(\"sortBy\", sortBy);\r\n        request.setAttribute(\"currentPage\", currentPage);\r\n        request.setAttribute(\"noOfPages\", noOfPages);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/user/userlist.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void changeUserStatus(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException {\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        System.out.println(userId);\r\n        userDAO.changeUserStatus(userId);\r\n        response.sendRedirect(\"../user\");\r\n    }\r\n\r\n    private void saveChanges(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        boolean successful = true;\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        User user = userDAO.getUserById(userId);\r\n        String name = request.getParameter(\"name\");\r\n        if (name == null || name.isEmpty()) {\r\n            request.setAttribute(\"nameErr\", \"Name is blank!\");\r\n            successful = false;\r\n        } else {\r\n            if (name.length() > 50) {\r\n                successful = false;\r\n                request.setAttribute(\"nameErr\", \"Name can not exceed 50 characters!\");\r\n            }\r\n        }\r\n        Part filePart = request.getPart(\"newAvatar\");\r\n        if (filePart != null && filePart.getSize() != 0) {\r\n            String workingDir = getWorkingDir();\r\n            String workingFolder = \"assets\\\\img\";\r\n            try {\r\n                avatarHandler.changeAvatar(userId, workingFolder, workingDir, filePart);\r\n            } catch (SQLException | IOException e) {\r\n                successful = false;\r\n                request.setAttribute(\"avtErr\", \"Upload image failed!\");\r\n            }\r\n        }\r\n\r\n        user.setName(name);\r\n        user.setRole(Integer.parseInt(request.getParameter(\"roleId\")));\r\n        if (successful) {\r\n            try {\r\n                userDAO.updateUser(user);\r\n            } catch (SQLException e) {\r\n                request.setAttribute(\"updateErr\", \"Update failed! Please try again later!\");\r\n                successful = false;\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../user\");\r\n        } else {\r\n            request.setAttribute(\"user\", user);\r\n            request.setAttribute(\"roleList\", getRoleList());\r\n            request.getRequestDispatcher(\"/WEB-INF/views/user/userdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void assignSubject(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        boolean successful = true;\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        int subjectId = Integer.parseInt(request.getParameter(\"subjectId\"));\r\n\r\n        try {\r\n            userDAO.assignSubject(userId, subjectId);\r\n        } catch (SQLException e) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Assign subject failed!\");\r\n        }\r\n\r\n        if (successful) {\r\n            String contextPath = request.getServletContext().getContextPath();\r\n            String redirectPage = contextPath + \"/user/details\";\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"userId\", userId);\r\n            session.setAttribute(\"currentPage\", \"assignSubject\");\r\n            response.sendRedirect(redirectPage);\r\n        } else {\r\n            request.setAttribute(\"user\", userDAO.getUserById(userId));\r\n            request.setAttribute(\"roleList\", getRoleList());\r\n            ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);\r\n            request.setAttribute(\"subjectList\", subjectList);\r\n            request.setAttribute(\"unassignedSubjectList\", getAllSubjectsNotInCharged(subjectList));\r\n            request.setAttribute(\"currentPage\", \"assignSubject\");\r\n            request.getRequestDispatcher(\"/WEB-INF/views/user/userdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void removeSubject(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        boolean successful = true;\r\n        int userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        int subjectId = Integer.parseInt(request.getParameter(\"subjectId\"));\r\n\r\n        try {\r\n            userDAO.removeAssignedSubject(userId, subjectId);\r\n        } catch (SQLException e) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Remove subject failed!\");\r\n        }\r\n\r\n        if (successful) {\r\n            String contextPath = request.getServletContext().getContextPath();\r\n            String redirectPage = contextPath + \"/user/details\";\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"userId\", userId);\r\n            session.setAttribute(\"currentPage\", \"assignSubject\");\r\n            response.sendRedirect(redirectPage);\r\n        } else {\r\n            request.setAttribute(\"user\", userDAO.getUserById(userId));\r\n            request.setAttribute(\"roleList\", getRoleList());\r\n            ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);\r\n            request.setAttribute(\"subjectList\", subjectList);\r\n            request.setAttribute(\"unassignedSubjectList\", getAllSubjectsNotInCharged(subjectList));\r\n            request.setAttribute(\"currentPage\", \"assignSubject\");\r\n            request.getRequestDispatcher(\"/WEB-INF/views/user/userdetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void updateUser(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"changeStatus\":\r\n                changeUserStatus(request, response);\r\n                break;\r\n            case \"saveChanges\":\r\n                saveChanges(request, response);\r\n                break;\r\n            case \"assignSubject\":\r\n                assignSubject(request, response);\r\n                break;\r\n            case \"removeSubject\":\r\n                removeSubject(request, response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private boolean isSubjectAssigned(ArrayList<Subject> subjectList, Subject s) {\r\n        for (Subject subject : subjectList) {\r\n            if (subject.getId() == s.getId()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private ArrayList<Subject> getAllSubjectsNotInCharged(ArrayList<Subject> subjectList) {\r\n        SubjectDAO subjectDAO = new SubjectDAO();\r\n        ArrayList<Subject> allSubject = subjectDAO.getAllSubject();\r\n        ArrayList<Subject> ret = new ArrayList<>();\r\n        for (Subject s : allSubject) {\r\n            if (!isSubjectAssigned(subjectList, s)) {\r\n                ret.add(s);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private void viewUserDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        int userId;\r\n        HttpSession session = request.getSession();\r\n        if (session.getAttribute(\"userId\") != null) {\r\n            userId = (int) session.getAttribute(\"userId\");\r\n            session.removeAttribute(\"userId\");\r\n        } else {\r\n            userId = Integer.parseInt(request.getParameter(\"userId\"));\r\n        }\r\n        User user = userDAO.getUserById(userId);\r\n\r\n        request.setAttribute(\"currentPage\", session.getAttribute(\"currentPage\"));\r\n        session.removeAttribute(\"currentPage\");\r\n\r\n        request.setAttribute(\"user\", user);\r\n        request.setAttribute(\"roleList\", getRoleList());\r\n        ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);\r\n        request.setAttribute(\"subjectList\", subjectList);\r\n        request.setAttribute(\"unassignedSubjectList\", getAllSubjectsNotInCharged(subjectList));\r\n        request.getRequestDispatcher(\"/WEB-INF/views/user/userdetails.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void goToPage(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        request.setAttribute(\"roleList\", getRoleList());\r\n        request.getRequestDispatcher(\"/WEB-INF/views/user/newuser.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void addUser(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        boolean successful = true;\r\n        User user = new User();\r\n        String name = request.getParameter(\"name\");\r\n        if (name == null || name.isEmpty()) {\r\n            request.setAttribute(\"nameErr\", \"Name is blank!\");\r\n            successful = false;\r\n        } else {\r\n            if (name.length() > 50) {\r\n                successful = false;\r\n                request.setAttribute(\"nameErr\", \"Name can not exceed 50 characters!\");\r\n            }\r\n        }\r\n        user.setName(name);\r\n        user.setRole(Integer.parseInt(request.getParameter(\"roleId\")));\r\n        String avt = request.getParameter(\"avt\");\r\n        Part filePart = request.getPart(\"avatar\");\r\n        if (filePart == null || filePart.getSize() == 0) {\r\n            if (avt == null || avt.isEmpty()) {\r\n                user.setAvatar(\"assets/img/default_avt.jpg\");\r\n            } else {\r\n                user.setAvatar(avt);\r\n            }\r\n        } else {\r\n            String workingDir = getWorkingDir();\r\n            String workingFolder = \"assets\\\\img\";\r\n            user.setAvatar(avatarHandler.uploadAvatar(workingFolder, workingDir, filePart, avt));\r\n        }\r\n        String email = request.getParameter(\"email\");\r\n        user.setEmail(email);\r\n        if (email == null || email.isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"emailErr\", \"Email is blank!\");\r\n        } else {\r\n            if (email.length() > 35) {\r\n                successful = false;\r\n                request.setAttribute(\"emailErr\", \"Email can not exceed 35 characters!\");\r\n            } else {\r\n                if (!EmailValidator.validate(email)) {\r\n                    successful = false;\r\n                    request.setAttribute(\"emailErr\", \"Please enter a valid email!\");\r\n                } else {\r\n                    if (userDAO.checkEmailExist(email)) {\r\n                        successful = false;\r\n                        request.setAttribute(\"emailErr\", \"Email has already been registered, please head to login!\");\r\n                    } else {\r\n                        try {\r\n                            user.setStatus(2);\r\n                            String password = PasswordGenerator.generateRandomPassword();\r\n                            userDAO.addUser(user, password);\r\n                            String receiver = user.getEmail();\r\n                            String subject = \"Password for Knowledge Revising System\";\r\n                            String content = \"Hi, you have been invited to join our Knowledge Revising System website \\n\\n\";\r\n                            content += \"Please login by your email with password \" + password + \" to access our system.\";\r\n                            SendMail.sendMail(receiver, subject, content);\r\n                        } catch (SQLException e) {\r\n                            successful = false;\r\n                            request.setAttribute(\"err\", \"Failed to add user, please try again later!\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../user\");\r\n        } else {\r\n            request.setAttribute(\"user\", user);\r\n            request.setAttribute(\"roleList\", getRoleList());\r\n            request.getRequestDispatcher(\"/WEB-INF/views/user/newuser.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void newUser(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"goToPage\":\r\n                goToPage(request, response);\r\n                break;\r\n            case \"addUser\":\r\n                addUser(request, response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/UserServlet.java b/src/java/controller/UserServlet.java
--- a/src/java/controller/UserServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/UserServlet.java	(date 1721635964767)
@@ -1,8 +1,11 @@
 package controller;
 
+import model.User;
+import model.Role;
 import common.AvatarHandler;
 import common.EmailValidator;
 import common.PasswordGenerator;
+import common.StringFormatter;
 import dal.SubjectDAO;
 import dal.UserDAO;
 import java.io.IOException;
@@ -20,7 +23,6 @@
 import java.util.Collections;
 import mail.SendMail;
 import model.subject.Subject;
-import model.user.*;
 
 @MultipartConfig
 @WebServlet(name = "UserServlet", urlPatterns = {"/user", "/user/update", "/user/details", "/user/new"})
@@ -44,6 +46,7 @@
     }
 
     UserDAO userDAO = new UserDAO();
+    SubjectDAO subjectDAO = new SubjectDAO();
     AvatarHandler avatarHandler = new AvatarHandler();
     private final int rowPerPage = 6;
 
@@ -56,13 +59,11 @@
     protected void doGet(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
         doPost(request, response);
-
     }
 
     @Override
     protected void doPost(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
-
         String contextPath = request.getServletContext().getContextPath();
         String loginPage = contextPath + "/login.jsp";
         String homePage = contextPath + "/home";
@@ -257,6 +258,15 @@
         int currentPage = getPage(request, noOfPages);
         list = getAllUsersOfPage(currentPage, list);
 
+        HttpSession session = request.getSession();
+        if (session.getAttribute("successful") != null) {
+            request.setAttribute("successful", session.getAttribute("successful"));
+            session.removeAttribute("successful");
+        } else if (session.getAttribute("err") != null) {
+            request.setAttribute("err", session.getAttribute("err"));
+            session.removeAttribute("err");
+        }
+
         request.setAttribute("list", list);
         request.setAttribute("roleList", getRoleList());
         request.setAttribute("keyWord", keyWord);
@@ -269,9 +279,23 @@
 
     private void changeUserStatus(HttpServletRequest request, HttpServletResponse response)
             throws IOException {
+        HttpSession session = request.getSession();
         int userId = Integer.parseInt(request.getParameter("userId"));
-        System.out.println(userId);
-        userDAO.changeUserStatus(userId);
+        String action;
+        User user = userDAO.getUserById(userId);
+        if (user.getStatus() == 0) {
+            action = "Activated";
+        } else {
+            action = "Deactivated";
+        }
+        try {
+            userDAO.changeUserStatus(userId);
+            session.setAttribute("successful", action + " account "
+                    + user.getEmail() + " successfully!");
+        } catch (SQLException e) {
+            session.setAttribute("err", action + " account "
+                    + user.getEmail() + " failed!");
+        }
         response.sendRedirect("../user");
     }
 
@@ -280,7 +304,7 @@
         boolean successful = true;
         int userId = Integer.parseInt(request.getParameter("userId"));
         User user = userDAO.getUserById(userId);
-        String name = request.getParameter("name");
+        String name = StringFormatter.removeDoubleSpaces(request.getParameter("name").trim());
         if (name == null || name.isEmpty()) {
             request.setAttribute("nameErr", "Name is blank!");
             successful = false;
@@ -314,6 +338,8 @@
         }
 
         if (successful) {
+            HttpSession session = request.getSession();
+            session.setAttribute("successful", "Updated account " + user.getEmail() + " successfully!");
             response.sendRedirect("../user");
         } else {
             request.setAttribute("user", user);
@@ -341,6 +367,9 @@
             HttpSession session = request.getSession();
             session.setAttribute("userId", userId);
             session.setAttribute("currentPage", "assignSubject");
+            session.setAttribute("successful", "Assign subject "
+                    + subjectDAO.getSubjectMatchId(subjectId).getCode()
+                    + " successfully!");
             response.sendRedirect(redirectPage);
         } else {
             request.setAttribute("user", userDAO.getUserById(userId));
@@ -372,6 +401,9 @@
             HttpSession session = request.getSession();
             session.setAttribute("userId", userId);
             session.setAttribute("currentPage", "assignSubject");
+            session.setAttribute("successful", "Deleted subject "
+                    + subjectDAO.getSubjectMatchId(subjectId).getCode()
+                    + " successfully!");
             response.sendRedirect(redirectPage);
         } else {
             request.setAttribute("user", userDAO.getUserById(userId));
@@ -435,14 +467,21 @@
         }
         User user = userDAO.getUserById(userId);
 
+        request.setAttribute("successful", session.getAttribute("successful"));
+        session.removeAttribute("successful");
+
         request.setAttribute("currentPage", session.getAttribute("currentPage"));
         session.removeAttribute("currentPage");
 
         request.setAttribute("user", user);
         request.setAttribute("roleList", getRoleList());
-        ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);
-        request.setAttribute("subjectList", subjectList);
-        request.setAttribute("unassignedSubjectList", getAllSubjectsNotInCharged(subjectList));
+
+        if (user.getRole() < 3) {
+            ArrayList<Subject> subjectList = userDAO.getAllSubjectsInCharged(userId);
+            request.setAttribute("subjectList", subjectList);
+            request.setAttribute("unassignedSubjectList", getAllSubjectsNotInCharged(subjectList));
+        }
+
         request.getRequestDispatcher("/WEB-INF/views/user/userdetails.jsp").forward(request, response);
     }
 
@@ -456,7 +495,7 @@
             throws IOException, ServletException {
         boolean successful = true;
         User user = new User();
-        String name = request.getParameter("name");
+        String name = StringFormatter.removeDoubleSpaces(request.getParameter("name").trim());
         if (name == null || name.isEmpty()) {
             request.setAttribute("nameErr", "Name is blank!");
             successful = false;
@@ -481,7 +520,7 @@
             String workingFolder = "assets\\img";
             user.setAvatar(avatarHandler.uploadAvatar(workingFolder, workingDir, filePart, avt));
         }
-        String email = request.getParameter("email");
+        String email = request.getParameter("email").trim();
         user.setEmail(email);
         if (email == null || email.isEmpty()) {
             successful = false;
@@ -518,6 +557,8 @@
         }
 
         if (successful) {
+            HttpSession session = request.getSession();
+            session.setAttribute("successful", "Added account " + email + " successfully!");
             response.sendRedirect("../user");
         } else {
             request.setAttribute("user", user);
@@ -528,13 +569,18 @@
 
     private void newUser(HttpServletRequest request, HttpServletResponse response)
             throws IOException, ServletException {
-        switch (request.getParameter("action")) {
-            case "goToPage":
-                goToPage(request, response);
-                break;
-            case "addUser":
-                addUser(request, response);
-                break;
+        String action = request.getParameter("action");
+        if (action != null) {
+            switch (request.getParameter("action")) {
+                case "addUser":
+                    addUser(request, response);
+                    break;
+                default:
+                    goToPage(request, response);
+                    break;
+            }
+        } else {
+            goToPage(request, response);
         }
     }
 
Index: src/java/controller/LessonServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport common.MaterialHandler;\r\nimport dal.LessonDAO;\r\nimport dal.MaterialDAO;\r\nimport dal.SubjectDAO;\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletContext;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.MultipartConfig;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport jakarta.servlet.http.Part;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport model.Lesson;\r\nimport model.user.User;\r\n\r\n@MultipartConfig\r\n@WebServlet(urlPatterns = {\"/lesson\", \"/lesson/new\", \"/lesson/insert\", \"/lesson/details\", \"/lesson/update\"})\r\npublic class LessonServlet extends HttpServlet {\r\n\r\n    private final int rowPerPage = 6;\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet LessonListServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet LessonListServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doPost(request, response);\r\n    }\r\n\r\n    private String getWorkingDir() {\r\n        String directory = getServletContext().getRealPath(\"\") + \"\";\r\n        return directory.replace(\"\\\\build\\\\web\\\\\", \"\\\\web\\\\\");\r\n    }\r\n\r\n    LessonDAO lessonDAO = new LessonDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n    MaterialDAO materialDAO = new MaterialDAO();\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n        String contextPath = request.getServletContext().getContextPath();\r\n        String loginPage = contextPath + \"/login.jsp\";\r\n        String homePage = contextPath + \"/home\";\r\n        UserDAO userDAO = new UserDAO();\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(loginPage);\r\n        } else {\r\n            User u = userDAO.getUserById(user.getId());\r\n            if (u != null && u.getEmail() != null) {\r\n                session.setAttribute(\"user\", u);\r\n                if (user.getRole() > 1) {\r\n                    response.sendRedirect(homePage);\r\n                } else {\r\n                    String action = request.getServletPath();\r\n                    switch (action) {\r\n                        case \"/lesson\":\r\n                            viewLessonList(request, response);\r\n                            break;\r\n                        case \"/lesson/new\":\r\n                            newLesson(request, response);\r\n                            break;\r\n                        case \"/lesson/insert\":\r\n                            insertNewLesson(request, response);\r\n                            break;\r\n                        case \"/lesson/details\":\r\n                            viewLessonDetails(request, response);\r\n                            break;\r\n                        case \"/lesson/update\":\r\n                            updateLesson(request, response);\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                response.sendRedirect(loginPage);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private ArrayList<Lesson> getAllLessonsOfSubject(ArrayList<Lesson> lessonList, int subjectId) {\r\n        ArrayList<Lesson> ret = new ArrayList<>();\r\n        for (Lesson lesson : lessonList) {\r\n            if (lesson.getSubjectId() == subjectId) {\r\n                ret.add(lesson);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private ArrayList<Lesson> getAllLessonsMatchKeyWord(ArrayList<Lesson> lessonList, String keyWord) {\r\n        keyWord = keyWord.toLowerCase();\r\n        ArrayList<Lesson> ret = new ArrayList<>();\r\n        for (Lesson lesson : lessonList) {\r\n            if (lesson.getName().toLowerCase().contains(keyWord)) {\r\n                ret.add(lesson);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private int getNoOfPages(ArrayList<Lesson> list) {\r\n        int length = list.size();\r\n        if (length == 0) {\r\n            return 1;\r\n        }\r\n        int noOfPages = length / rowPerPage;\r\n        if (length % rowPerPage == 0) {\r\n            return noOfPages;\r\n        }\r\n        return noOfPages + 1;\r\n    }\r\n\r\n    private int getPage(HttpServletRequest request, int noOfPages) {\r\n        String cur = request.getParameter(\"currentPage\");\r\n        if ((cur == null) || (cur.isEmpty())) {\r\n            return 1;\r\n        }\r\n\r\n        int currentPage = Integer.parseInt(cur);\r\n        switch (request.getParameter(\"pageAction\")) {\r\n            case \"firstPage\":\r\n                return 1;\r\n            case \"prevPage\": {\r\n                currentPage--;\r\n                if (currentPage < 1) {\r\n                    return 1;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"nextPage\": {\r\n                currentPage++;\r\n                if (currentPage > noOfPages) {\r\n                    return noOfPages;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"lastPage\":\r\n                return noOfPages;\r\n        }\r\n\r\n        String newpage = request.getParameter(\"newPage\");\r\n        if ((newpage != null) && (!newpage.isEmpty())) {\r\n            int newPage = Integer.parseInt(newpage);\r\n            return newPage;\r\n        }\r\n        return currentPage;\r\n\r\n    }\r\n\r\n    private ArrayList<Lesson> getAllLessonsOfPage(int page, ArrayList<Lesson> list) {\r\n        ArrayList<Lesson> ret = new ArrayList<>();\r\n        int start = rowPerPage * (page - 1) + 1;\r\n        int end = rowPerPage * page;\r\n        if (start < 1) {\r\n            start = 1;\r\n        }\r\n        if (end > list.size()) {\r\n            end = list.size();\r\n        }\r\n\r\n        for (int i = start - 1; i < end; i++) {\r\n            ret.add(list.get(i));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private ArrayList<String> getSortOptions() {\r\n        ArrayList<String> ret = new ArrayList<>();\r\n        ret.add(\"Order\");\r\n        ret.add(\"Name\");\r\n        ret.add(\"Status\");\r\n        ret.add(\"Subject\");\r\n        return ret;\r\n    }\r\n\r\n    private void viewLessonList(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        ArrayList<Lesson> lessonList = lessonDAO.getAllLessons();\r\n\r\n        String sid = request.getParameter(\"subjectId\");\r\n        if (sid != null && !sid.isEmpty() && !sid.equals(\"all\")) {\r\n            int subjectId = Integer.parseInt(sid);\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            lessonList = getAllLessonsOfSubject(lessonList, subjectId);\r\n        }\r\n\r\n        String sortBy = request.getParameter(\"sortBy\");\r\n        if (sortBy != null) {\r\n            switch (sortBy) {\r\n                case \"Name\":\r\n                    Collections.sort(lessonList, new Lesson.SortByName());\r\n                    break;\r\n                case \"Status\":\r\n                    Collections.sort(lessonList, new Lesson.SortByStatus());\r\n                    break;\r\n                case \"Subject\":\r\n                    Collections.sort(lessonList, new Lesson.SortBySubject());\r\n                    break;\r\n                default:\r\n                    Collections.sort(lessonList, new Lesson.SortByOrder());\r\n                    break;\r\n            }\r\n        } else {\r\n            Collections.sort(lessonList, new Lesson.SortByOrder());\r\n        }\r\n        request.setAttribute(\"sortBy\", sortBy);\r\n\r\n        String keyWord = request.getParameter(\"keyWord\");\r\n        if (keyWord != null && !keyWord.isEmpty()) {\r\n            lessonList = getAllLessonsMatchKeyWord(lessonList, keyWord);\r\n        }\r\n        request.setAttribute(\"keyWord\", keyWord);\r\n\r\n        int noOfPages = getNoOfPages(lessonList);\r\n        int currentPage = getPage(request, noOfPages);\r\n        lessonList = getAllLessonsOfPage(currentPage, lessonList);\r\n        request.setAttribute(\"currentPage\", currentPage);\r\n        request.setAttribute(\"noOfPages\", noOfPages);\r\n\r\n        request.setAttribute(\"latestOrder\", lessonDAO.getLatestOrder());\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n        request.setAttribute(\"sortOptions\", getSortOptions());\r\n        request.setAttribute(\"list\", lessonList);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessonlist.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void goToPage(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n        request.getRequestDispatcher(\"/WEB-INF/views/lesson/newlesson.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void newLesson(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"goToPage\":\r\n                goToPage(request, response);\r\n                break;\r\n            case \"addNew\":\r\n                insertNewLesson(request, response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void insertNewLesson(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String name = request.getParameter(\"name\");\r\n        int subjectId = Integer.parseInt(request.getParameter(\"subjectId\"));\r\n        boolean successful = true;\r\n\r\n        if (name.isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Input is empty!\");\r\n        } else if (name.length() > 100) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Lesson name can not exceed 100 characters!\");\r\n        }\r\n\r\n        if (successful) {\r\n            try {\r\n                lessonDAO.addLesson(name, subjectId);\r\n            } catch (SQLException e) {\r\n                successful = false;\r\n                request.setAttribute(\"err\", \"Lesson name already exist!\");\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../lesson\");\r\n        } else {\r\n            request.setAttribute(\"name\", name);\r\n            request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.getRequestDispatcher(\"/WEB-INF/views/lesson/newlesson.jsp\").forward(request, response);\r\n        }\r\n\r\n    }\r\n\r\n    private void viewLessonDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int lessonId;\r\n        HttpSession session = request.getSession();\r\n\r\n        if (session.getAttribute(\"lessonId\") != null) {\r\n            lessonId = (int) session.getAttribute(\"lessonId\");\r\n            session.removeAttribute(\"lessonId\");\r\n        } else {\r\n            lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        }\r\n        request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n\r\n        request.setAttribute(\"currentPage\", session.getAttribute(\"currentPage\"));\r\n        session.removeAttribute(\"currentPage\");\r\n        request.setAttribute(\"materialList\", materialDAO.getAllMaterialOfALesson(lessonId));\r\n        request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessondetails.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void changeLessonStatus(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException {\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        try {\r\n            lessonDAO.changeStatus(lessonId);\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        response.sendRedirect(\"../lesson\");\r\n    }\r\n\r\n    private void update(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        boolean successful = true;\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        Lesson lesson = lessonDAO.getLessonMatchId(lessonId);\r\n        String name = request.getParameter(\"name\");\r\n        lesson.setName(name);\r\n        if (name.isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Input is empty!\");\r\n        } else if (name.length() > 100) {\r\n            successful = false;\r\n            request.setAttribute(\"err\", \"Lesson name can not exceed 100 characters!\");\r\n        }\r\n\r\n        if (successful) {\r\n            try {\r\n                lessonDAO.updateLesson(lesson);\r\n            } catch (SQLException e) {\r\n                successful = false;\r\n                request.setAttribute(\"err\", \"Lesson name already exist!\");\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../lesson\");\r\n        } else {\r\n            request.setAttribute(\"lesson\", lesson);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void changeOrder(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        String action = request.getParameter(\"orderAction\");\r\n        try {\r\n            lessonDAO.changeOrder(lessonId, action);\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        response.sendRedirect(\"../lesson\");\r\n    }\r\n\r\n    private void insertMaterial(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        boolean successful = true;\r\n        Part filePart = request.getPart(\"file\");\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n\r\n        if (filePart == null || filePart.getSize() == 0) {\r\n            successful = false;\r\n            request.setAttribute(\"fileErr\", \"Please choose a file\");\r\n        } else {\r\n            String workingDir = getWorkingDir();\r\n            String workingFolder = \"assets\\\\material\";\r\n            try {\r\n                MaterialHandler.addMaterial(lessonId, workingFolder, workingDir, filePart);\r\n            } catch (SQLException | IOException e) {\r\n                successful = false;\r\n                request.setAttribute(\"fileErr\", \"Import material failed\");\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"lessonId\", lessonId);\r\n            session.setAttribute(\"currentPage\", \"material\");\r\n            String contextPath = request.getServletContext().getContextPath();\r\n            String detailsPage = contextPath + \"/lesson/details\";\r\n            response.sendRedirect(detailsPage);\r\n        } else {\r\n            request.setAttribute(\"currentPage\", \"material\");\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n            request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void removeMaterial(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        boolean successful = true;\r\n        int lessonId = Integer.parseInt(request.getParameter(\"lessonId\"));\r\n        int materialId = Integer.parseInt(request.getParameter(\"materialId\"));\r\n        String workingDir = getWorkingDir();\r\n\r\n        try {\r\n            MaterialHandler.removeMaterial(lessonId, materialId, workingDir);\r\n        } catch (SQLException e) {\r\n            successful = false;\r\n            request.setAttribute(\"fileErr\", \"Delete file failed!\");\r\n        }\r\n\r\n        if (successful) {\r\n            HttpSession session = request.getSession();\r\n            session.setAttribute(\"lessonId\", lessonId);\r\n            session.setAttribute(\"currentPage\", \"material\");\r\n            String contextPath = request.getServletContext().getContextPath();\r\n            String detailsPage = contextPath + \"/lesson/details\";\r\n            response.sendRedirect(detailsPage);\r\n        } else {\r\n            request.setAttribute(\"currentPage\", \"material\");\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n            request.getRequestDispatcher(\"/WEB-INF/views/lesson/lessondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void updateLesson(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"changeStatus\":\r\n                changeLessonStatus(request, response);\r\n                break;\r\n            case \"changeOrder\":\r\n                changeOrder(request, response);\r\n                break;\r\n            case \"updateLesson\":\r\n                update(request, response);\r\n                break;\r\n            case \"insertMaterial\":\r\n                insertMaterial(request, response);\r\n                break;\r\n            case \"removeMaterial\":\r\n                removeMaterial(request, response);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/LessonServlet.java b/src/java/controller/LessonServlet.java
--- a/src/java/controller/LessonServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/LessonServlet.java	(date 1721635964766)
@@ -1,11 +1,11 @@
 package controller;
 
 import common.MaterialHandler;
+import common.StringFormatter;
 import dal.LessonDAO;
 import dal.MaterialDAO;
 import dal.SubjectDAO;
 import dal.UserDAO;
-import jakarta.servlet.ServletContext;
 import java.io.IOException;
 import java.io.PrintWriter;
 import jakarta.servlet.ServletException;
@@ -20,7 +20,8 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import model.Lesson;
-import model.user.User;
+import model.User;
+import model.subject.Subject;
 
 @MultipartConfig
 @WebServlet(urlPatterns = {"/lesson", "/lesson/new", "/lesson/insert", "/lesson/details", "/lesson/update"})
@@ -63,7 +64,6 @@
     @Override
     protected void doPost(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
-
         String contextPath = request.getServletContext().getContextPath();
         String loginPage = contextPath + "/login.jsp";
         String homePage = contextPath + "/home";
@@ -199,7 +199,6 @@
         ret.add("Order");
         ret.add("Name");
         ret.add("Status");
-        ret.add("Subject");
         return ret;
     }
 
@@ -207,12 +206,21 @@
             throws ServletException, IOException {
         ArrayList<Lesson> lessonList = lessonDAO.getAllLessons();
 
-        String sid = request.getParameter("subjectId");
-        if (sid != null && !sid.isEmpty() && !sid.equals("all")) {
-            int subjectId = Integer.parseInt(sid);
-            request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-            lessonList = getAllLessonsOfSubject(lessonList, subjectId);
-        }
+        int subjectId;
+        HttpSession session = request.getSession();
+        if (session.getAttribute("subjectId") != null) {
+            subjectId = (int) session.getAttribute("subjectId");
+            session.removeAttribute("subjectId");
+        } else {
+            String sid = request.getParameter("subjectId");
+            if (sid != null && !sid.isEmpty() && !sid.equals("all")) {
+                subjectId = Integer.parseInt(sid);
+            } else {
+                subjectId = subjectDAO.getAllSubject().get(0).getId();
+            }
+        }
+        request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
+        lessonList = getAllLessonsOfSubject(lessonList, subjectId);
 
         String sortBy = request.getParameter("sortBy");
         if (sortBy != null) {
@@ -223,15 +231,13 @@
                 case "Status":
                     Collections.sort(lessonList, new Lesson.SortByStatus());
                     break;
-                case "Subject":
-                    Collections.sort(lessonList, new Lesson.SortBySubject());
-                    break;
                 default:
                     Collections.sort(lessonList, new Lesson.SortByOrder());
                     break;
             }
         } else {
             Collections.sort(lessonList, new Lesson.SortByOrder());
+            sortBy = "Order";
         }
         request.setAttribute("sortBy", sortBy);
 
@@ -247,7 +253,13 @@
         request.setAttribute("currentPage", currentPage);
         request.setAttribute("noOfPages", noOfPages);
 
-        request.setAttribute("latestOrder", lessonDAO.getLatestOrder());
+        request.setAttribute("successful", session.getAttribute("successful"));
+        session.removeAttribute("successful");
+
+        request.setAttribute("err", session.getAttribute("err"));
+        session.removeAttribute("err");
+
+        request.setAttribute("latestOrder", lessonDAO.getLatestOrder(subjectId));
         request.setAttribute("subjectList", subjectDAO.getAllSubject());
         request.setAttribute("sortOptions", getSortOptions());
         request.setAttribute("list", lessonList);
@@ -257,24 +269,32 @@
     private void goToPage(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
         request.setAttribute("subjectList", subjectDAO.getAllSubject());
+        request.setAttribute("subject",
+                subjectDAO.getSubjectMatchId(Integer.parseInt(request.getParameter("subjectId"))));
         request.getRequestDispatcher("/WEB-INF/views/lesson/newlesson.jsp").forward(request, response);
     }
 
     private void newLesson(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
-        switch (request.getParameter("action")) {
-            case "goToPage":
-                goToPage(request, response);
-                break;
-            case "addNew":
-                insertNewLesson(request, response);
-                break;
+        String action = request.getParameter("action");
+        if (action != null) {
+            switch (request.getParameter("action")) {
+                case "addNew":
+                    insertNewLesson(request, response);
+                    break;
+                default:
+                    goToPage(request, response);
+                    break;
+            }
+        } else {
+            goToPage(request, response);
         }
     }
 
     private void insertNewLesson(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
         String name = request.getParameter("name");
+        name = StringFormatter.removeDoubleSpaces(name.trim());
         int subjectId = Integer.parseInt(request.getParameter("subjectId"));
         boolean successful = true;
 
@@ -287,15 +307,23 @@
         }
 
         if (successful) {
-            try {
-                lessonDAO.addLesson(name, subjectId);
-            } catch (SQLException e) {
-                successful = false;
-                request.setAttribute("err", "Lesson name already exist!");
+            if (lessonDAO.isLessonExist(name, subjectId)) {
+                successful = false;
+                request.setAttribute("err", "Lesson name already exist!");
+            } else {
+                try {
+                    lessonDAO.addLesson(name, subjectId);
+                } catch (SQLException e) {
+                    successful = false;
+                    request.setAttribute("err", "Adding lesson failed!");
+                }
             }
         }
 
         if (successful) {
+            HttpSession session = request.getSession();
+            session.setAttribute("subjectId", subjectId);
+            session.setAttribute("successful", "Added lesson " + name + " successfully!");
             response.sendRedirect("../lesson");
         } else {
             request.setAttribute("name", name);
@@ -319,6 +347,9 @@
         }
         request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
 
+        request.setAttribute("fileSuccessful", session.getAttribute("fileSuccessful"));
+        session.removeAttribute("fileSuccessful");
+
         request.setAttribute("currentPage", session.getAttribute("currentPage"));
         session.removeAttribute("currentPage");
         request.setAttribute("materialList", materialDAO.getAllMaterialOfALesson(lessonId));
@@ -327,11 +358,20 @@
 
     private void changeLessonStatus(HttpServletRequest request, HttpServletResponse response)
             throws IOException {
+        HttpSession session = request.getSession();
         int lessonId = Integer.parseInt(request.getParameter("lessonId"));
+        Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
+        String action;
+        if (lesson.isStatus()) {
+            action = "Deactivated";
+        } else {
+            action = "Activated";
+        }
         try {
             lessonDAO.changeStatus(lessonId);
+            session.setAttribute("successful", action + " lesson " + lesson.getName() + " successfully!");
         } catch (SQLException e) {
-            System.out.println(e.getMessage());
+            session.setAttribute("err", action + " lesson " + lesson.getName() + " failed!");
         }
         response.sendRedirect("../lesson");
     }
@@ -342,25 +382,35 @@
         int lessonId = Integer.parseInt(request.getParameter("lessonId"));
         Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
         String name = request.getParameter("name");
-        lesson.setName(name);
-        if (name.isEmpty()) {
-            successful = false;
-            request.setAttribute("err", "Input is empty!");
-        } else if (name.length() > 100) {
-            successful = false;
-            request.setAttribute("err", "Lesson name can not exceed 100 characters!");
-        }
+        name = StringFormatter.removeDoubleSpaces(name.trim());
+        if (!name.equals(lesson.getName())) {
+            lesson.setName(name);
+            if (name.isEmpty()) {
+                successful = false;
+                request.setAttribute("err", "Input is empty!");
+            } else if (name.length() > 100) {
+                successful = false;
+                request.setAttribute("err", "Lesson name can not exceed 100 characters!");
+            }
 
-        if (successful) {
-            try {
-                lessonDAO.updateLesson(lesson);
-            } catch (SQLException e) {
-                successful = false;
-                request.setAttribute("err", "Lesson name already exist!");
+            if (successful) {
+                if (lessonDAO.isLessonExist(name, lesson.getSubjectId())) {
+                    successful = false;
+                    request.setAttribute("err", "Lesson name already exist!");
+                } else {
+                    try {
+                        lessonDAO.updateLesson(lesson);
+                    } catch (SQLException e) {
+                        successful = false;
+                        request.setAttribute("err", "Update lesson failed!");
+                    }
+                }
             }
         }
 
         if (successful) {
+            HttpSession session = request.getSession();
+            session.setAttribute("successful", "Updated lesson successfully!");
             response.sendRedirect("../lesson");
         } else {
             request.setAttribute("lesson", lesson);
@@ -370,13 +420,22 @@
 
     private void changeOrder(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
+        HttpSession session = request.getSession();
         int lessonId = Integer.parseInt(request.getParameter("lessonId"));
         String action = request.getParameter("orderAction");
         try {
             lessonDAO.changeOrder(lessonId, action);
+            session.setAttribute("successful", "Move lesson "
+                    + lessonDAO.getLessonMatchId(lessonId).getName()
+                    + " " + action + " successfully!");
         } catch (SQLException e) {
-            System.out.println(e.getMessage());
+            session.setAttribute("err", "Move lesson "
+                    + lessonDAO.getLessonMatchId(lessonId).getName()
+                    + " " + action + " failed!");
         }
+
+        session.setAttribute("subjectId",
+                lessonDAO.getLessonMatchId(lessonId).getSubjectId());
         response.sendRedirect("../lesson");
     }
 
@@ -404,6 +463,7 @@
             HttpSession session = request.getSession();
             session.setAttribute("lessonId", lessonId);
             session.setAttribute("currentPage", "material");
+            session.setAttribute("fileSuccessful", "Added material successfully!");
             String contextPath = request.getServletContext().getContextPath();
             String detailsPage = contextPath + "/lesson/details";
             response.sendRedirect(detailsPage);
@@ -432,6 +492,7 @@
             HttpSession session = request.getSession();
             session.setAttribute("lessonId", lessonId);
             session.setAttribute("currentPage", "material");
+            session.setAttribute("fileSuccessful", "Remove material successfully!");
             String contextPath = request.getServletContext().getContextPath();
             String detailsPage = contextPath + "/lesson/details";
             response.sendRedirect(detailsPage);
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"DuplicatedCode\" enabled=\"true\" level=\"WEAK WARNING\" enabled_by_default=\"true\">\r\n      <Languages>\r\n        <language minSize=\"54\" name=\"Java\" />\r\n      </Languages>\r\n    </inspection_tool>\r\n    <inspection_tool class=\"HtmlUnknownAttribute\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"myValues\">\r\n        <value>\r\n          <list size=\"1\">\r\n            <item index=\"0\" class=\"java.lang.String\" itemvalue=\"main\" />\r\n          </list>\r\n        </value>\r\n      </option>\r\n      <option name=\"myCustomValuesEnabled\" value=\"true\" />\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1721635964760)
@@ -3,7 +3,7 @@
     <option name="myName" value="Project Default" />
     <inspection_tool class="DuplicatedCode" enabled="true" level="WEAK WARNING" enabled_by_default="true">
       <Languages>
-        <language minSize="54" name="Java" />
+        <language minSize="47" name="Java" />
       </Languages>
     </inspection_tool>
     <inspection_tool class="HtmlUnknownAttribute" enabled="true" level="WARNING" enabled_by_default="true">
Index: src/java/controller/login/LoginServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.login;\r\n\r\nimport dal.UserDAO;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport mail.GenerateVerifyCode;\r\nimport mail.SendMail;\r\n\r\n@WebServlet(name = \"LoginServlet\", urlPatterns = {\"/login\"})\r\npublic class LoginServlet extends HttpServlet {\r\n    \r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        HttpSession session = request.getSession();\r\n        User u = (User) session.getAttribute(\"user\");\r\n        if (u != null) {\r\n            response.sendRedirect(\"home\");\r\n        } else {\r\n            String email = request.getParameter(\"email\");\r\n            String password = request.getParameter(\"password\");\r\n            UserDAO userDAO = new UserDAO();\r\n            try {\r\n                User user = userDAO.login(email, password);\r\n                if (user != null || user.getEmail() == null) {\r\n                    switch (user.getStatus()) {\r\n                        case 2:\r\n                            request.setAttribute(\"user\", user);\r\n                            request.getRequestDispatcher(\"/WEB-INF/account/setnewpassword.jsp\").forward(request, response);\r\n                            break;\r\n                        case 0:\r\n                            String receiver = user.getEmail();\r\n                            String subject = \"Your activation code\";\r\n                            String activationCode = GenerateVerifyCode.GenerateCode();\r\n                            String content = \"Your activation code is: \" + activationCode;\r\n                            SendMail.sendMail(receiver, subject, content);\r\n                            \r\n                            request.setAttribute(\"activationCode\", activationCode);\r\n                            request.setAttribute(\"user\", user);\r\n                            request.getRequestDispatcher(\"/WEB-INF/account/enteractivationcode.jsp\").forward(request, response);\r\n                            break;\r\n                        default:\r\n                            session.setAttribute(\"user\", user);\r\n                            switch (user.getRole()) {\r\n                                case 0:\r\n                                case 1:\r\n                                    response.sendRedirect(\"dashboard\");\r\n                                    break;\r\n                                default:\r\n                                    response.sendRedirect(\"home\");\r\n                            }\r\n                            \r\n                            break;\r\n                    }\r\n                } else {\r\n                    session.setAttribute(\"message\", \"Invalid email or password\");\r\n                    response.sendRedirect(\"login.jsp\");\r\n                }\r\n            } catch (SQLException e) {\r\n                throw new ServletException(\"Login failed\", e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n    \r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/login/LoginServlet.java b/src/java/controller/login/LoginServlet.java
--- a/src/java/controller/login/LoginServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/login/LoginServlet.java	(date 1721635964774)
@@ -1,7 +1,7 @@
 package controller.login;
 
 import dal.UserDAO;
-import model.user.User;
+import model.User;
 
 import java.io.IOException;
 import java.sql.SQLException;
Index: web/WEB-INF/views/user/userlist.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>User list</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"assets/js/config.js\"></script>\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n                            <div>\r\n                                <form action=\"${pageContext.request.contextPath}/user/new\">\r\n                                    <input type=\"hidden\" name=\"action\" value=\"goToPage\"/>\r\n                                    <button class=\"btn btn-primary px-3\" \r\n                                            type=\"submit\">\r\n                                        <i class=\"fa fa-plus-square mr-3\"></i>\r\n                                        New user\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">User /</span> User list</h4>\r\n\r\n                            <form id=\"searchBar\" class=\"d-flex\" action=\"${pageContext.request.contextPath}/user\">\r\n                                <div class=\"input-group mr-3\" style=\"overflow: auto;\">\r\n                                    <label for=\"roleSelect\">Role: </label>\r\n                                    <select style=\"height: 38px;\" name=\"roleId\" id=\"roleSelect\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('roleSelect').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;document.getElementById('roleSelect').style.height = '38px';\">\r\n                                        <c:if test=\"${requestScope.roleId == null || requestScope.roleId == 0}\">\r\n                                            <option value=\"0\" selected>All Roles</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.roleId != null && requestScope.roleId != 0}\">\r\n                                            <option value=\"0\">All Roles</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.roleList}\" var=\"role\">\r\n                                            <c:if test=\"${requestScope.roleId == role.id}\">\r\n                                                <option value=\"${role.id}\" selected>${role.name}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.roleId != role.id}\">\r\n                                                <option value=\"${role.id}\">${role.name}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <label for=\"sortBy\">Sort by </label>\r\n                                    <select style=\"height: 38px;\" name=\"sortBy\" id=\"sortBy\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('sortBy').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;document.getElementById('sortBy').style.height = '38px';\">\r\n                                        <c:if test=\"${requestScope.sortBy == null || requestScope.sortBy.isEmpty()\r\n                                                      || requestScope.sortBy.equals('None')}\">\r\n                                              <option value=\"None\" selected>None</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.sortBy != null && !requestScope.sortBy.isEmpty()\r\n                                                      && !requestScope.sortBy.equals('None')}\">\r\n                                              <option value=\"None\">None</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.sortOptions}\" var=\"option\">\r\n                                            <c:if test=\"${requestScope.sortBy.equals(option)}\">\r\n                                                <option value=\"${option}\" selected>${option}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${!requestScope.sortBy.equals(option)}\">\r\n                                                <option value=\"${option}\">${option}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <input type=\"text\" name=\"keyWord\" class=\"form-control\" placeholder=\"Search\" value=\"${requestScope.keyWord}\"\r\n                                           style=\"float: right; width: 10px;\"/>\r\n                                    <button style=\"height: 38px; float: right;\" \r\n                                            class=\"btn btn-outline-primary mr-2\" type=\"submit\">Search</button>\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                            <!-- Basic Bootstrap Table -->\r\n                            <div class=\"card\">\r\n                                <h5 class=\"card-header\">Question list</h5>\r\n                                <div class=\"table-responsive text-nowrap\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Name</th>\r\n                                                <th>Email</th>\r\n                                                <th>Role</th>\r\n                                                <th>Status</th>\r\n                                                <th>Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody class=\"table-border-bottom-0\">\r\n                                            <c:forEach items=\"${requestScope.list}\" var=\"user\">\r\n                                                <tr>\r\n                                                    <c:if test=\"${user.status == 1}\">\r\n                                                        <td style=\"color: #696cff;\">${user.id}</td>\r\n                                                        <td style=\"color: #696cff;\">${user.name}\r\n                                                            <img src=\"${pageContext.request.scheme}://${pageContext.request.serverName}:${pageContext.request.serverPort}${pageContext.request.contextPath}/${user.avatar}\" \r\n                                                                 alt=\"Avatar\" class=\"rounded-circle\" \r\n                                                                 style=\"height: 20px; width: 20px;\"/></td>\r\n                                                        <td style=\"color: #696cff;\">${user.email}</td>\r\n                                                        <td style=\"color: #696cff;\">${user.r.name}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-success\">Active</span>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <form action=\"${pageContext.request.contextPath}/user/details\" method=\"post\">\r\n                                                                <input type=\"hidden\" name=\"userId\" value=\"${user.id}\"/>\r\n                                                                <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-primary mr-1\"\r\n                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\">\r\n                                                                    <i class=\"bx bx-edit\"></i>\r\n                                                                </button>\r\n                                                            </form>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left\" type=\"button\" class=\"btn btn-icon btn-outline-danger\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Deactivate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${user.id}, 'Deactivate', '${user.email}')\">\r\n                                                                <i class=\"bx bx-x\"></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${user.status == 0}\">\r\n                                                        <td style=\"color: gray;\">${user.id}</td>\r\n                                                        <td style=\"color: gray;\">${user.name}</td>\r\n                                                        <td style=\"color: gray;\">${user.email}</td>\r\n                                                        <td style=\"color: gray;\">${user.r.name}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-danger\">Inactive</span>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-secondary mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\" disabled>\r\n                                                                <i class=\"bx bx-edit\"></i>\r\n                                                            </button>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left\" type=\"button\" class=\"btn btn-icon btn-outline-success\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Activate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${user.id}, 'Activate', '${user.email}')\">\r\n                                                                <i class=\"bx bx-check\"></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${user.status == 2}\">\r\n                                                        <td class=\"text-warning\">${user.id}</td>\r\n                                                        <td class=\"text-warning\">${user.name}</td>\r\n                                                        <td class=\"text-warning\">${user.email}</td>\r\n                                                        <td class=\"text-warning\">${user.r.name}</td>\r\n                                                        <td>\r\n                                                            <span class=\"badge rounded-pill bg-info\">Unverified</span>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <form action=\"${pageContext.request.contextPath}/user/details\" method=\"post\">\r\n                                                                <input type=\"hidden\" name=\"userId\" value=\"${user.id}\"/>\r\n                                                                <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-primary mr-1\"\r\n                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\">\r\n                                                                    <i class=\"bx bx-edit\"></i>\r\n                                                                </button>\r\n                                                            </form>\r\n                                                        </td>\r\n                                                    </c:if>\r\n                                                </tr>\r\n                                            </c:forEach>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n                                        <form action=\"${pageContext.request.contextPath}/user/update\">\r\n                                            <input type=\"hidden\" name=\"userId\" id=\"userId\"/>\r\n                                            <input type=\"hidden\" name=\"action\" value=\"changeStatus\"/>\r\n                                            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"modalCenterTitle\"></h5>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            class=\"btn-close\"\r\n                                                            data-bs-dismiss=\"modal\"\r\n                                                            aria-label=\"Close\"></button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        <h6 id=\"modalBodyText\"></h5>\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                                            No\r\n                                                        </button>\r\n                                                        <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!--/ Basic Bootstrap Table -->\r\n\r\n\r\n                            </div>\r\n\r\n                            <!-- / Content -->\r\n\r\n                            <form action=\"${pageContext.request.contextPath}/user\">\r\n                                <input type=\"hidden\" name=\"roleId\" value=\"${requestScope.roleId}\"/>\r\n                                <input type=\"hidden\" name=\"sortBy\" value=\"${requestScope.sortBy}\"/>\r\n                                <input type=\"hidden\" name=\"keyWord\" value=\"${requestScope.keyWord}\"/>\r\n                                <input type=\"hidden\" name=\"pageAction\" id=\"pageAction\"/>\r\n                                <input type=\"hidden\" name=\"newPage\" id=\"newPage\"/>\r\n                                <input type=\"hidden\" name=\"currentPage\" value=\"${requestScope.currentPage}\"/>\r\n                                <div class=\"card mb-4\">\r\n                                    <!-- Basic Pagination -->\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-lg-6\">\r\n                                                <small class=\"text-light fw-medium\">Basic</small>\r\n                                                <div class=\"demo-inline-spacing\">\r\n                                                    <!-- Basic Pagination -->\r\n                                                    <nav aria-label=\"Page navigation\">\r\n                                                        <ul class=\"pagination\">\r\n                                                            <li class=\"page-item first\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'firstPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-left\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            <li class=\"page-item prev\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'prevPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevron-left\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            <c:forEach begin=\"1\" end=\"${requestScope.noOfPages}\" var=\"page\">\r\n                                                                <c:if test=\"${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||\r\n                                                                              (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}\">\r\n                                                                    <c:if test=\"${page == requestScope.currentPage}\">\r\n                                                                        <li class=\"page-item active\">\r\n                                                                            <button class=\"page-link\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${page != requestScope.currentPage}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <input type=\"hidden\" name=\"page\" value=\"${page}\"/>\r\n                                                                            <button class=\"page-link\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${(page == 2) && (page < requestScope.currentPage - 1)}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <button class=\"page-link\">...</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <button class=\"page-link\">...</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                </c:if>\r\n                                                            </c:forEach>\r\n                                                            <li class=\"page-item next\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'nextPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n\r\n                                                            <li class=\"page-item last\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'lastPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </nav>\r\n                                                    <!--/ Basic Pagination -->\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                        </div>\r\n                        <!-- Content wrapper -->\r\n\r\n\r\n                    </div>\r\n                    <!-- / Layout page -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <script>\r\n            function assignValue(userId, action, email) {\r\n                document.getElementById(\"userId\").value = userId;\r\n                document.getElementById(\"modalCenterTitle\").innerHTML = action;\r\n                let text1 = \"Are you sure you want to \";\r\n                let text2 = \" user \";\r\n                let text3 = \" ?\";\r\n                let s = text1 + action.toLowerCase() + text2 + email + text3;\r\n                document.getElementById(\"modalBodyText\").innerHTML = s;\r\n            }\r\n        </script>\r\n\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js assets/vendor/js/core.js -->\r\n\r\n        <script src=\"assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n\r\n        <script src=\"js/sider.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/user/userlist.jsp b/web/WEB-INF/views/user/userlist.jsp
--- a/web/WEB-INF/views/user/userlist.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/user/userlist.jsp	(date 1721635964785)
@@ -85,7 +85,6 @@
 
                             <div>
                                 <form action="${pageContext.request.contextPath}/user/new">
-                                    <input type="hidden" name="action" value="goToPage"/>
                                     <button class="btn btn-primary px-3" 
                                             type="submit">
                                         <i class="fa fa-plus-square mr-3"></i>
@@ -154,9 +153,18 @@
 
                             </form>
 
+                            <div class="row mb-3">
+                                <c:if test="${requestScope.successful != null && !requestScope.successful.isEmpty()}">
+                                    <h6 class="text-success">${requestScope.successful}</h6>
+                                </c:if>
+                                <c:if test="${requestScope.err != null && !requestScope.err.isEmpty()}">
+                                    <h6 class="text-danger">${requestScope.err}</h6>
+                                </c:if>
+                            </div>
+
                             <!-- Basic Bootstrap Table -->
                             <div class="card">
-                                <h5 class="card-header">Question list</h5>
+                                <h5 class="card-header">User list</h5>
                                 <div class="table-responsive text-nowrap">
                                     <table class="table">
                                         <thead>
@@ -174,10 +182,12 @@
                                                 <tr>
                                                     <c:if test="${user.status == 1}">
                                                         <td style="color: #696cff;">${user.id}</td>
-                                                        <td style="color: #696cff;">${user.name}
+                                                        <td style="color: #696cff;">
                                                             <img src="${pageContext.request.scheme}://${pageContext.request.serverName}:${pageContext.request.serverPort}${pageContext.request.contextPath}/${user.avatar}" 
                                                                  alt="Avatar" class="rounded-circle" 
-                                                                 style="height: 20px; width: 20px;"/></td>
+                                                                 style="height: 20px; width: 20px;"/>
+                                                            ${user.name}
+                                                        </td>
                                                         <td style="color: #696cff;">${user.email}</td>
                                                         <td style="color: #696cff;">${user.r.name}</td>
                                                         <td>
@@ -307,9 +317,10 @@
                                                                     <i class="tf-icon bx bx-chevron-left"></i>
                                                                 </button>
                                                             </li>
+                                                            <c:set var="noOfPages" value="${requestScope.noOfPages}"></c:set>
                                                             <c:forEach begin="1" end="${requestScope.noOfPages}" var="page">
-                                                                <c:if test="${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||
-                                                                              (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}">
+                                                                <c:if test="${(page == 1) || (page == 2) || (Math.abs(page - requestScope.currentPage) <= 1)
+                                                                              || (page == noOfPages) || (page == noOfPages - 1)}">
                                                                     <c:if test="${page == requestScope.currentPage}">
                                                                         <li class="page-item active">
                                                                             <button class="page-link"
@@ -325,16 +336,17 @@
                                                                                     onclick="document.getElementById('newPage').value = ${page}">${page}</button>
                                                                         </li>
                                                                     </c:if>
-                                                                    <c:if test="${(page == 2) && (page < requestScope.currentPage - 1)}">
-                                                                        <li class="page-item">
-                                                                            <button class="page-link">...</button>
-                                                                        </li>
-                                                                    </c:if>
-                                                                    <c:if test="${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}">
-                                                                        <li class="page-item">
-                                                                            <button class="page-link">...</button>
-                                                                        </li>
-                                                                    </c:if>
+                                                                </c:if>
+                                                                <c:set var="currentPage" value="${requestScope.currentPage}"></c:set>
+                                                                <c:if test="${(page == currentPage - 2) && (page > 2)}">
+                                                                    <li class="page-item">
+                                                                        <button class="page-link">...</button>
+                                                                    </li>
+                                                                </c:if>
+                                                                <c:if test="${(page == currentPage + 2) && (page < noOfPages - 1)}">
+                                                                    <li class="page-item">
+                                                                        <button class="page-link">...</button>
+                                                                    </li>
                                                                 </c:if>
                                                             </c:forEach>
                                                             <li class="page-item next">
Index: web/WEB-INF/views/user/userdetails.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>User details</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n        <script>\r\n            function setActiveTab(currentPage) {\r\n                if (currentPage === 'enterData' || currentPage === null || currentPage === '') {\r\n                    document.getElementById(\"navs-pills-enter-data\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = true;\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonAssignSubject\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonAssignSubject\").ariaSelected = false;\r\n                } else {\r\n                    document.getElementById(\"navs-pills-assign-subject\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonAssignSubject\").ariaSelected = true;\r\n                    document.getElementById(\"buttonAssignSubject\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = false;\r\n                }\r\n            }\r\n            function getActiveTab() {\r\n                if (document.getElementById(\"buttonAssignSubject\").className === 'nav-link active') {\r\n                    return \"assignSubject\";\r\n                } else {\r\n                    return \"enterData\";\r\n                }\r\n            }\r\n            function setActiveTabForRefresh() {\r\n                document.getElementById('currentPage').value = getActiveTab();\r\n            }\r\n        </script>\r\n\r\n    </head>\r\n\r\n    <body onload=\"setActiveTab('${requestScope.currentPage}');\">\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">User /</span> User details</h4>\r\n                            <form action=\"${pageContext.request.contextPath}/user/update\" method=\"post\"\r\n                                  enctype=\"multipart/form-data\">\r\n                                <input type=\"hidden\" name=\"userId\" value=\"${requestScope.user.id}\"/>\r\n                                <input type=\"hidden\" name=\"action\" id=\"action\"/>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"nav-align-top mb-4\">\r\n                                        <ul class=\"nav nav-pills mb-3\" role=\"tablist\">\r\n                                            <li class=\"nav-item\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    id=\"buttonEnterData\"\r\n                                                    role=\"tab\"\r\n                                                    data-bs-toggle=\"tab\"\r\n                                                    data-bs-target=\"#navs-pills-enter-data\"\r\n                                                    aria-controls=\"navs-pills-enter-data\">\r\n                                                    Update user details\r\n                                                </button>\r\n                                            </li>\r\n                                            <c:if test=\"${requestScope.user.role < 3}\">\r\n                                                <li class=\"nav-item\">\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        id=\"buttonAssignSubject\"\r\n                                                        role=\"tab\"\r\n                                                        data-bs-toggle=\"tab\"\r\n                                                        data-bs-target=\"#navs-pills-assign-subject\"\r\n                                                        aria-controls=\"navs-pills-assign-subject\">\r\n                                                        Assign subjects\r\n                                                    </button>\r\n                                                </li>\r\n                                            </c:if>\r\n                                        </ul>\r\n                                        <div class=\"tab-content\" style=\"width: 100%;\">\r\n                                            <div class=\"tab-pane fade\" id=\"navs-pills-enter-data\" role=\"tabpanel\">\r\n                                                <div class=\"card mb-4\">\r\n                                                    <h5 class=\"card-header mb-3\">User Details for ${requestScope.user.name}</h5>\r\n                                                    <!-- Account -->\r\n                                                    <div class=\"card-body\">\r\n                                                        <div class=\"d-flex align-items-start align-items-sm-center gap-4\">\r\n                                                            <img\r\n                                                                src=\"../${requestScope.user.avatar}\"\r\n                                                                alt=\"user-avatar\"\r\n                                                                class=\"d-block rounded\"\r\n                                                                height=\"100\"\r\n                                                                width=\"100\"\r\n                                                                id=\"uploadedAvatar\"/>\r\n                                                            <div class=\"button-wrapper\">\r\n                                                                <label for=\"upload\" class=\"btn btn-primary me-2 mb-4\" tabindex=\"0\">\r\n                                                                    <span class=\"d-none d-sm-block\">Upload new photo</span>\r\n                                                                    <i class=\"bx bx-upload d-block d-sm-none\"></i>\r\n                                                                    <input\r\n                                                                        type=\"file\"\r\n                                                                        id=\"upload\"\r\n                                                                        class=\"account-file-input\"\r\n                                                                        accept=\"image/png, image/jpeg\"\r\n                                                                        hidden\r\n                                                                        name=\"newAvatar\"/>\r\n                                                                </label>\r\n                                                                <button type=\"button\" class=\"btn btn-outline-secondary account-image-reset mb-4 me-2\">\r\n                                                                    <i class=\"bx bx-reset d-block d-sm-none\"></i>\r\n                                                                    <span class=\"d-none d-sm-block\">Reset</span>\r\n                                                                </button>\r\n\r\n                                                                <p class=\"text-muted mb-0\">Allowed JPG, GIF or PNG. Max size of 800K</p>\r\n                                                                <c:if test=\"${requestScope.avtErr != null && !requestScope.avtErr.isEmpty()}\">\r\n                                                                    <div>\r\n                                                                        <h6 style=\"color: red;\">${requestScope.avtErr}</h6>\r\n                                                                    </div>\r\n                                                                </c:if>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr class=\"my-0\" />\r\n                                                    <div class=\"card-body\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"mb-3 col-md-6\">\r\n                                                                <label for=\"name\" class=\"form-label\">Name</label>\r\n                                                                <input\r\n                                                                    class=\"form-control\"\r\n                                                                    type=\"text\"\r\n                                                                    id=\"name\"\r\n                                                                    name=\"name\"\r\n                                                                    value=\"${requestScope.user.name}\"\r\n                                                                    autofocus />\r\n                                                                <c:if test=\"${requestScope.nameErr != null && !requestScope.nameErr.isEmpty()}\">\r\n                                                                    <h6 style=\"color: red;\">${requestScope.nameErr}</h6>\r\n                                                                </c:if>\r\n                                                            </div>\r\n                                                            <div class=\"mb-3 col-md-6\">\r\n                                                                <label for=\"email\" class=\"form-label\">E-mail</label>\r\n                                                                <input\r\n                                                                    class=\"form-control\"\r\n                                                                    type=\"text\"\r\n                                                                    id=\"email\"\r\n                                                                    name=\"email\"\r\n                                                                    value=\"${requestScope.user.email}\"\r\n                                                                    placeholder=\"john.doe@example.com\" \r\n                                                                    readonly/>\r\n                                                            </div>\r\n                                                            <div class=\"mb-3 col-md-6\">\r\n                                                                <label for=\"roleSelect\" class=\"form-label\">Role</label>\r\n                                                                <select id=\"roleSelect\" class=\"select2 form-select\" name=\"roleId\">\r\n                                                                    <c:forEach items=\"${requestScope.roleList}\" var=\"role\">\r\n                                                                        <c:if test=\"${requestScope.user.role == role.id}\">\r\n                                                                            <option value=\"${role.id}\" selected>${role.name}</option>\r\n                                                                        </c:if>\r\n                                                                        <c:if test=\"${requestScope.user.role != role.id}\">\r\n                                                                            <option value=\"${role.id}\">${role.name}</option>\r\n                                                                        </c:if>\r\n                                                                    </c:forEach>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class=\"mb-3 col-md-6\">\r\n                                                                <label class=\"form-label\" for=\"status\">Status</label>\r\n                                                                <div class=\"form-control\" id=\"status\">\r\n                                                                    <c:if test=\"${requestScope.user.status == 1}\">\r\n                                                                        <span class=\"badge rounded-pill bg-success\" >Active</span>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${requestScope.user.status == 0}\">\r\n                                                                        <span class=\"badge rounded-pill bg-danger\" >Inactive</span>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${requestScope.user.status == 2}\">\r\n                                                                        <span class=\"badge rounded-pill bg-info\" >Unverified</span>\r\n                                                                    </c:if>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"mt-2\">\r\n                                                            <button type=\"submit\" class=\"btn btn-primary me-2\"\r\n                                                                    onclick=\"document.getElementById('action').value = 'saveChanges'\">Save changes</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!-- /Account -->\r\n                                                </div>\r\n                                            </div>\r\n                                            <c:if test=\"${requestScope.user.role < 3}\">\r\n                                                <div class=\"tab-pane fade\" id=\"navs-pills-assign-subject\" role=\"tabpanel\">\r\n                                                    <div class=\"input-group mr-3\" style=\"overflow: auto;\">\r\n                                                        <label for=\"subjectId\">Subject: </label>\r\n                                                        <select style=\"height: 38px;\" name=\"subjectId\" id=\"subjectId\" class=\"mr-3 ml-3\" \r\n                                                                onmousedown=\"if (this.options.length > 5) {\r\n                                                                            this.size = 5;\r\n                                                                            document.getElementById('sortBy').style.height = '115px';\r\n                                                                        }\"  \r\n                                                                onblur=\"this.size = 0;\r\n                                                                        document.getElementById('sortBy').style.height = '38px';\">\r\n                                                            <c:forEach items=\"${requestScope.unassignedSubjectList}\" var=\"subject\">\r\n                                                                <c:if test=\"${requestScope.subject.id == subject.id}\">\r\n                                                                    <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                                                </c:if>\r\n                                                                <c:if test=\"${requestScope.subject.id != subject.id}\">\r\n                                                                    <option value=\"${subject.id}\">${subject.code}</option>\r\n                                                                </c:if>\r\n                                                            </c:forEach>\r\n                                                        </select>\r\n                                                        <button style=\"height: 38px; float: right;\" \r\n                                                                class=\"btn btn-outline-primary mr-2\" type=\"submit\"\r\n                                                                onclick=\"document.getElementById('action').value = 'assignSubject';\">Assign subject</button>\r\n                                                        <c:if test=\"${requestScope.err != null && !requestScope.err.isEmpty()}\">\r\n                                                            <h6 style=\"color: red;\">${requestScope.err}</h6>\r\n                                                        </c:if>\r\n                                                    </div>\r\n                                                    <div class=\"card\">\r\n                                                        <h5 class=\"card-header\">Subject list</h5>\r\n                                                        <div class=\"table-responsive text-nowrap\">\r\n                                                            <table class=\"table\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th>#</th>\r\n                                                                        <th>Code</th>\r\n                                                                        <th>Name</th>\r\n                                                                        <th></th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody class=\"table-border-bottom-0\">\r\n                                                                    <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                                                        <tr>\r\n                                                                            <td class=\"text-primary\">${subject.id}</td>\r\n                                                                            <td class=\"text-primary\">${subject.code}</td>\r\n                                                                            <td class=\"text-primary\">${subject.name}</td>\r\n                                                                            <td>\r\n                                                                                <button class=\"btn btn-icon btn-outline-danger\"\r\n                                                                                        type=\"button\"\r\n                                                                                        style=\"height: 25px; width: 25px; float: left;\"\r\n                                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Remove\"\r\n                                                                                        onclick=\"\r\n                                                                                                document.getElementById('modalSubjectId').value = ${subject.id};\"\r\n                                                                                        data-bs-toggle=\"modal\" data-bs-target=\"#modalAssign\">\r\n                                                                                    <i class=\"bx bx-trash\"></i>\r\n                                                                                </button>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                    </c:forEach>\r\n                                                                </tbody>\r\n                                                            </table>\r\n\r\n                                                        </div>\r\n\r\n                                                        <!--/ Basic Bootstrap Table -->\r\n\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </c:if>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n                            <a class=\"btn btn-primary\" href=\"${pageContext.request.contextPath}/user\">Back</a>\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <div class=\"modal fade\" id=\"modalAssign\" tabindex=\"-1\" aria-hidden=\"true\">\r\n            <form action=\"${pageContext.request.contextPath}/user/update\">\r\n                <input type=\"hidden\" name=\"userId\" value=\"${requestScope.user.id}\"/>\r\n                <input type=\"hidden\" name=\"action\" value=\"removeSubject\"/>\r\n                <input type=\"hidden\" name=\"subjectId\" id=\"modalSubjectId\"/>\r\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"modalCenterTitle\">Remove subject</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <h5 id=\"modalOrderBodyText\">Are you sure you want to remove subject?</h5>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                No\r\n                            </button>\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n        <script src=\"../assets/js/pages-account-settings-account.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/user/userdetails.jsp b/web/WEB-INF/views/user/userdetails.jsp
--- a/web/WEB-INF/views/user/userdetails.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/user/userdetails.jsp	(date 1721635964784)
@@ -251,7 +251,7 @@
                                             </div>
                                             <c:if test="${requestScope.user.role < 3}">
                                                 <div class="tab-pane fade" id="navs-pills-assign-subject" role="tabpanel">
-                                                    <div class="input-group mr-3" style="overflow: auto;">
+                                                    <div class="input-group mr-3 mb-3" style="overflow: auto;">
                                                         <label for="subjectId">Subject: </label>
                                                         <select style="height: 38px;" name="subjectId" id="subjectId" class="mr-3 ml-3" 
                                                                 onmousedown="if (this.options.length > 5) {
@@ -276,6 +276,14 @@
                                                             <h6 style="color: red;">${requestScope.err}</h6>
                                                         </c:if>
                                                     </div>
+                                                    <div class="row mb-3">
+                                                        <h5 style="color: black;">${requestScope.user.name}</h5>
+                                                    </div>
+                                                    <c:if test="${requestScope.successful != null && !requestScope.successful.isEmpty()}">
+                                                        <div class="row mb-3">
+                                                            <h6 class="text-success">${requestScope.successful}</h6>
+                                                        </div>
+                                                    </c:if>
                                                     <div class="card">
                                                         <h5 class="card-header">Subject list</h5>
                                                         <div class="table-responsive text-nowrap">
Index: web/WEB-INF/views/user/newuser.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>New Question</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">User /</span> New user</h4>\r\n\r\n                            <form action=\"${pageContext.request.contextPath}/user/new\" method=\"post\"\r\n                                  enctype=\"multipart/form-data\">\r\n                                <input type=\"hidden\" name=\"action\" value=\"addUser\"/>\r\n                                <input type=\"hidden\" name=\"isAvatarChanged\" id=\"isAvatarChanged\" value=\"false\"/>\r\n                                <input type=\"hidden\" name=\"avt\" value=\"${requestScope.user.avatar}\"/>\r\n\r\n                                <c:if test=\"${requestScope.user != null && requestScope.user.avatar != null \r\n                                              && !requestScope.user.avatar.isEmpty()}\">\r\n                                    <c:set var=\"avtSrc\" value=\"../${requestScope.user.avatar}\"></c:set>\r\n                                </c:if>\r\n                                <c:if test=\"${requestScope.user == null || requestScope.user.avatar == null \r\n                                              || requestScope.user.avatar.isEmpty()}\">\r\n                                    <c:set var=\"avtSrc\" value=\"../assets/img/default_avt.jpg\"></c:set>\r\n                                </c:if>\r\n\r\n                                <div class=\"card mb-4\">\r\n                                    <h5 class=\"card-header mb-3\">New user</h5>\r\n                                    <!-- Account -->\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"d-flex align-items-start align-items-sm-center gap-4\">\r\n                                            <img\r\n                                                src=\"${avtSrc}\"\r\n                                                alt=\"user-avatar\"\r\n                                                class=\"d-block rounded\"\r\n                                                height=\"100\"\r\n                                                width=\"100\"\r\n                                                id=\"uploadedAvatar\"/>\r\n                                            <div class=\"button-wrapper\">\r\n                                                <label for=\"upload\" class=\"btn btn-primary me-2 mb-4\" tabindex=\"0\">\r\n                                                    <span class=\"d-none d-sm-block\">Upload new photo</span>\r\n                                                    <i class=\"bx bx-upload d-block d-sm-none\"></i>\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        id=\"upload\"\r\n                                                        class=\"account-file-input\"\r\n                                                        accept=\"image/png, image/jpeg\"\r\n                                                        hidden\r\n                                                        name=\"avatar\"\r\n                                                        onclick=\"document.getElementById('isAvatarChanged').value = 'true';\"/>\r\n                                                </label>\r\n                                                <button type=\"button\" class=\"btn btn-outline-secondary account-image-reset mb-4\"\r\n                                                        onclick=\"document.getElementById('isAvatarChanged').value = 'false';\">\r\n                                                    <i class=\"bx bx-reset d-block d-sm-none\"></i>\r\n                                                    <span class=\"d-none d-sm-block\">Reset</span>\r\n                                                </button>\r\n\r\n                                                <p class=\"text-muted mb-0\">Allowed JPG, GIF or PNG. Max size of 800K</p>\r\n                                                <c:if test=\"${requestScope.avtErr != null && !requestScope.avtErr.isEmpty()}\">\r\n                                                    <div>\r\n                                                        <h6 style=\"color: red;\">${requestScope.avtErr}</h6>\r\n                                                    </div>\r\n                                                </c:if>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr class=\"my-0\" />\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"mb-3 col-md-6\">\r\n                                                <label for=\"name\" class=\"form-label\">Name</label>\r\n                                                <input\r\n                                                    class=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    id=\"name\"\r\n                                                    name=\"name\"\r\n                                                    value=\"${requestScope.user.name}\"\r\n                                                    autofocus />\r\n                                                <c:if test=\"${requestScope.nameErr != null && !requestScope.nameErr.isEmpty()}\">\r\n                                                    <h6 style=\"color: red;\">${requestScope.nameErr}</h6>\r\n                                                </c:if>\r\n                                            </div>\r\n                                            <div class=\"mb-3 col-md-6\">\r\n                                                <label for=\"email\" class=\"form-label\">E-mail</label>\r\n                                                <input\r\n                                                    class=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    id=\"email\"\r\n                                                    name=\"email\"\r\n                                                    value=\"${requestScope.user.email}\"\r\n                                                    placeholder=\"john.doe@example.com\"/>\r\n                                                <c:if test=\"${requestScope.emailErr != null && !requestScope.emailErr.isEmpty()}\">\r\n                                                    <h6 style=\"color: red;\">${requestScope.emailErr}</h6>\r\n                                                </c:if>\r\n                                            </div>\r\n                                            <div class=\"mb-3 col-md-6\">\r\n                                                <label for=\"roleSelect\" class=\"form-label\">Role</label>\r\n                                                <select id=\"roleSelect\" class=\"select2 form-select\" name=\"roleId\">\r\n                                                    <c:forEach items=\"${requestScope.roleList}\" var=\"role\">\r\n                                                        <c:if test=\"${requestScope.user.role == role.id}\">\r\n                                                            <option value=\"${role.id}\" selected>${role.name}</option>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${requestScope.user.role != role.id}\">\r\n                                                            <option value=\"${role.id}\">${role.name}</option>\r\n                                                        </c:if>\r\n                                                    </c:forEach>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class=\"mb-3 col-md-6\">\r\n                                                <label class=\"form-label\" for=\"status\">Status</label>\r\n                                                <div class=\"form-control\" id=\"status\">\r\n                                                    <span class=\"badge rounded-pill bg-info\" >Unverified</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"mt-2\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary me-2\">Add user</button>\r\n                                        </div>\r\n                                        <c:if test=\"${requestScope.err != null && !requestScope.err.isEmpty()}\">\r\n                                            <h5 style=\"color: red;\">${requestScope.err}</h5>\r\n                                        </c:if>\r\n                                    </div>\r\n                                    <!-- /Account -->\r\n                                </div>\r\n                            </form>\r\n\r\n                            <hr class=\"my-5\" />\r\n\r\n\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n        <script src=\"../assets/js/pages-account-settings-account.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/user/newuser.jsp b/web/WEB-INF/views/user/newuser.jsp
--- a/web/WEB-INF/views/user/newuser.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/user/newuser.jsp	(date 1721635964784)
@@ -204,7 +204,7 @@
 
                             <hr class="my-5" />
 
-
+                            <a class="btn btn-primary" href="${pageContext.request.contextPath}/user">Back</a>
 
                         </div>
                         <!-- / Content -->
Index: web/WEB-INF/views/question/questionlist.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>Question list</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"assets/js/config.js\"></script>\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n                            <div>\r\n                                <form action=\"${pageContext.request.contextPath}/question/new\">\r\n                                    <input type=\"hidden\" name=\"subjectId\" value=\"${requestScope.subject.id}\"/>\r\n                                    <input type=\"hidden\" name=\"lessonId\" value=\"${requestScope.lesson.id}\"/>\r\n                                    <input type=\"hidden\" name=\"action\" value=\"newQuestion\"/>\r\n                                    <button class=\"btn btn-primary px-3\">\r\n                                        <i class=\"fa fa-plus-square mr-3\"></i>\r\n                                        New question\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Question /</span> Question list</h4>\r\n\r\n                            <form id=\"searchBar\" class=\"d-flex\" action=\"${pageContext.request.contextPath}/question\">\r\n                                <div class=\"input-group mr-3\" style=\"overflow: auto;\">\r\n                                    <label for=\"subjectselect\">Subject: </label>\r\n                                    <select style=\"height: 38px;\" name=\"subjectid\" id=\"subjectselect\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('subjectselect').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;document.getElementById('subjectselect').style.height = '38px';\">\r\n                                        <c:if test=\"${(requestScope.subject == null)}\">\r\n                                            <option selected>All subjects</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${(requestScope.subject != null)}\">\r\n                                            <option>All subjects</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                            <c:if test=\"${subject.id == requestScope.subject.id}\">\r\n                                                <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${subject.id != requestScope.subject.id}\">\r\n                                                <option value=\"${subject.id}\">${subject.code}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <label for=\"lessonSelect\">Lesson: </label>\r\n                                    <select style=\"height: 38px;\" name=\"lessonId\" id=\"lessonSelect\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('lessonSelect').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;\r\n                                                    document.getElementById('lessonSelect').style.height = '38px';\">\r\n                                        <c:if test=\"${(requestScope.lesson == null)}\">\r\n                                            <option selected>All lessons</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${(requestScope.lesson != null)}\">\r\n                                            <option>All lessons</option>\r\n                                        </c:if>\r\n                                        <c:forEach items=\"${requestScope.lessonList}\" var=\"lesson\">\r\n                                            <c:if test=\"${lesson.id == requestScope.lesson.id}\">\r\n                                                <option value=\"${lesson.id}\" selected>${lesson.name}</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${lesson.id != requestScope.lesson.id}\">\r\n                                                <option value=\"${lesson.id}\">${lesson.name}</option>\r\n                                            </c:if>\r\n                                        </c:forEach>\r\n                                    </select>\r\n                                    <span style=\"height: 38px;\" class=\"input-group-text\"><i class=\"tf-icons bx bx-search\"></i></span>\r\n                                    <input type=\"text\" name=\"keyword\" class=\"form-control\" placeholder=\"Search\" value=\"${requestScope.keyword}\"/>\r\n                                    <button style=\"height: 38px;\" class=\"btn btn-outline-primary mr-2\" type=\"submit\">Search</button>\r\n                                    <label for=\"sortBy\">Sort by: </label>\r\n                                    <select style=\"height: 38px;\" name=\"sortBy\" id=\"sortBy\" class=\"mr-3 ml-3\" \r\n                                            onchange=\"document.getElementById('searchBar').submit();\"\r\n                                            onmousedown=\"if (this.options.length > 5) {\r\n                                                        this.size = 5;\r\n                                                        document.getElementById('sortBy').style.height = '115px';\r\n                                                    }\"  \r\n                                            onblur=\"this.size = 0;\r\n                                                    document.getElementById('sortBy').style.height = '38px';\">\r\n                                        <c:if test=\"${(requestScope.sortBy == null)}\">\r\n                                            <option value=\"none\" selected>None</option>\r\n                                            <option value=\"content\">Content</option>\r\n                                            <option value=\"Subject\">Subject</option>\r\n                                            <option value=\"lesson\">Lesson</option>\r\n                                            <option value=\"status\">Status</option>\r\n                                        </c:if>\r\n                                        <c:if test=\"${requestScope.sortBy != null}\">\r\n                                            <c:if test=\"${requestScope.sortBy == 'none'}\">\r\n                                                <option value=\"none\" selected>None</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'none'}\">\r\n                                                <option value=\"none\">None</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy == 'content'}\">\r\n                                                <option value=\"content\" selected>Content</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'content'}\">\r\n                                                <option value=\"content\">Content</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy == 'subject'}\">\r\n                                                <option value=\"subject\" selected>Subject</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'subject'}\">\r\n                                                <option value=\"subject\">Subject</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy == 'lesson'}\">\r\n                                                <option value=\"lesson\" selected>Lesson</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'lesson'}\">\r\n                                                <option value=\"lesson\">Lesson</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy == 'status'}\">\r\n                                                <option value=\"status\" selected>Status</option>\r\n                                            </c:if>\r\n                                            <c:if test=\"${requestScope.sortBy != 'status'}\">\r\n                                                <option value=\"status\">Status</option>\r\n                                            </c:if>\r\n                                        </c:if>\r\n                                    </select>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n\r\n                            <!-- Basic Bootstrap Table -->\r\n\r\n                            <div class=\"card\">\r\n                                <h5 class=\"card-header\">Question list</h5>\r\n                                <div class=\"table-responsive text-nowrap\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Content</th>\r\n                                                <th>Subject</th>\r\n                                                <th>Lesson</th>\r\n                                                <th>Status</th>\r\n                                                <th>Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody class=\"table-border-bottom-0\">\r\n                                            <c:forEach items=\"${requestScope.list}\" var=\"question\">\r\n                                                <tr>\r\n                                                    <c:if test=\"${question.status}\">\r\n                                                        <td style=\"color: #696cff;\">${question.id}</td>\r\n                                                        <td style=\"color: #696cff;\">${question.content}</td>\r\n                                                        <td style=\"color: #696cff;\">${question.lesson.subject.code}</td>\r\n                                                        <td style=\"color: #696cff;\">${question.lesson.name}</td>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${!question.status}\">\r\n                                                        <td>${question.id}</td>\r\n                                                        <td>${question.content}</td>\r\n                                                        <td>${question.lesson.subject.code}</td>\r\n                                                        <td>${question.lesson.name}</td>\r\n                                                    </c:if>\r\n                                                    <td>\r\n                                                        <c:if test=\"${question.status}\">\r\n                                                            <span class=\"badge rounded-pill bg-success\">Active</span>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${!question.status}\">\r\n                                                            <span class=\"badge rounded-pill bg-danger\">Inactive</span>\r\n                                                        </c:if>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <c:if test=\"${question.status}\">\r\n                                                            <form action=\"${pageContext.request.contextPath}/question/details\" id=\"questionDetails\">\r\n                                                                <input type=\"hidden\" name=\"questionId\" value=\"${question.id}\"/>\r\n                                                                <button style=\"height: 25px; width: 25px; float: left;\" type=\"submit\" class=\"btn btn-icon btn-outline-primary mr-1\"\r\n                                                                        data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\">\r\n                                                                    <i class=\"bx bx-edit\"></i>\r\n                                                                </button>\r\n                                                            </form>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" type=\"button\" class=\"btn btn-icon btn-outline-danger\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Deactivate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${question.id}, 'deactivate')\">\r\n                                                                <i class=\"bx bx-x\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                        <c:if test=\"${!question.status}\">\r\n                                                            <button style=\"height: 25px; width: 25px; float: left;\" class=\"btn btn-icon btn-outline-secondary mr-1\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"View details\" disabled>\r\n                                                                <i class=\"bx bx-edit\"></i>\r\n                                                            </button>\r\n                                                            <button style=\"height: 25px; width: 25px; float: left\" type=\"button\" class=\"btn btn-icon btn-outline-success\"\r\n                                                                    data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Activate\"\r\n                                                                    data-bs-toggle=\"modal\" data-bs-target=\"#modal\" onclick=\"assignValue(${question.id}, 'activate')\">\r\n                                                                <i class=\"bx bx-check me-1\"></i>\r\n                                                            </button>\r\n                                                        </c:if>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </c:forEach>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n                                        <form action=\"${pageContext.request.contextPath}/question/update\">\r\n                                            <input type=\"hidden\" name=\"questionId\" id=\"questionId\"/>\r\n                                            <input type=\"hidden\" name=\"action\" value=\"changeStatus\"/>\r\n                                            <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"modalCenterTitle\">Activate / Deactivate</h5>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            class=\"btn-close\"\r\n                                                            data-bs-dismiss=\"modal\"\r\n                                                            aria-label=\"Close\"></button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        <h5 id=\"modalBodyText\"></h5>\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                                            No\r\n                                                        </button>\r\n                                                        <button type=\"submit\" class=\"btn btn-primary\">Yes</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!--/ Basic Bootstrap Table -->\r\n\r\n\r\n                            </div>\r\n                            <!-- / Content -->\r\n\r\n                            <form action=\"${pageContext.request.contextPath}/question\">\r\n                                <input type=\"hidden\" name=\"subjectId\" value=\"${requestScope.subject.id}\"/>\r\n                                <input type=\"hidden\" name=\"lessonId\" value=\"${requestScope.lesson.id}\"/>\r\n                                <input type=\"hidden\" name=\"sortBy\" value=\"${requestScope.sortBy}\"/>\r\n                                <input type=\"hidden\" name=\"keyword\" value=\"${requestScope.keyword}\"/>\r\n                                <input type=\"hidden\" name=\"pageAction\" id=\"pageAction\"/>\r\n                                <input type=\"hidden\" name=\"newPage\" id=\"newPage\"/>\r\n                                <input type=\"hidden\" name=\"currentPage\" value=\"${requestScope.currentPage}\"/>\r\n                                <div class=\"card mb-4\">\r\n                                    <!-- Basic Pagination -->\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-lg-6\">\r\n                                                <small class=\"text-light fw-medium\">Basic</small>\r\n                                                <div class=\"demo-inline-spacing\">\r\n                                                    <!-- Basic Pagination -->\r\n                                                    <nav aria-label=\"Page navigation\">\r\n                                                        <ul class=\"pagination\">\r\n                                                            <li class=\"page-item first\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'firstPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-left\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            <li class=\"page-item prev\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'prevPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevron-left\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            <c:forEach begin=\"1\" end=\"${requestScope.noOfPages}\" var=\"page\">\r\n                                                                <c:if test=\"${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||\r\n                                                                              (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}\">\r\n                                                                    <c:if test=\"${page == requestScope.currentPage}\">\r\n                                                                        <li class=\"page-item active\">\r\n                                                                            <button class=\"page-link\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${page != requestScope.currentPage}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <input type=\"hidden\" name=\"page\" value=\"${page}\"/>\r\n                                                                            <button class=\"page-link\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('newPage').value = ${page}\">${page}</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${(page == 2) && (page < requestScope.currentPage - 1)}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <button class=\"page-link\">...</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}\">\r\n                                                                        <li class=\"page-item\">\r\n                                                                            <button class=\"page-link\">...</button>\r\n                                                                        </li>\r\n                                                                    </c:if>\r\n                                                                </c:if>\r\n                                                            </c:forEach>\r\n                                                            <li class=\"page-item next\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'nextPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n\r\n                                                            <li class=\"page-item last\">\r\n                                                                <button class=\"page-link\"\r\n                                                                        type=\"submit\"\r\n                                                                        onclick=\"document.getElementById('pageAction').value = 'lastPage';\">\r\n                                                                    <i class=\"tf-icon bx bx-chevrons-right\"></i>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </nav>\r\n                                                    <!--/ Basic Pagination -->\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                        </div>\r\n                        <!-- Content wrapper -->\r\n\r\n\r\n                    </div>\r\n                    <!-- / Layout page -->\r\n                </div>\r\n            </div>\r\n            <!-- / Layout wrapper -->\r\n\r\n            <script>\r\n                function assignValue(questionId, action) {\r\n                    document.getElementById(\"questionId\").value = questionId;\r\n                    let text1 = \"Are you sure you want to \";\r\n                    let text2 = \" question?\";\r\n                    let s = text1 + action + text2;\r\n                    document.getElementById(\"modalBodyText\").innerHTML = s;\r\n                }\r\n            </script>\r\n\r\n            <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n            <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n            <script src=\"../lib/easing/easing.min.js\"></script>\r\n            <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n            <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n            <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n            <!-- Template Javascript -->\r\n            <script src=\"../js/main.js\"></script>\r\n\r\n            <!-- Core JS -->\r\n            <!-- build:js assets/vendor/js/core.js -->\r\n\r\n            <script src=\"assets/vendor/libs/jquery/jquery.js\"></script>\r\n            <script src=\"assets/vendor/libs/popper/popper.js\"></script>\r\n            <script src=\"assets/vendor/js/bootstrap.js\"></script>\r\n            <script src=\"assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n            <script src=\"assets/vendor/js/menu.js\"></script>\r\n\r\n            <!-- endbuild -->\r\n\r\n            <!-- Vendors JS -->\r\n            <script src=\"assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n            <!-- Main JS -->\r\n            <script src=\"assets/js/main.js\"></script>\r\n\r\n            <!-- Page JS -->\r\n            <script src=\"assets/js/dashboards-analytics.js\"></script>\r\n\r\n            <!-- Place this tag in your head or just before your close body tag. -->\r\n            <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n            \r\n            <script src=\"js/sider.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/question/questionlist.jsp b/web/WEB-INF/views/question/questionlist.jsp
--- a/web/WEB-INF/views/question/questionlist.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/question/questionlist.jsp	(date 1721635964783)
@@ -87,7 +87,6 @@
                                 <form action="${pageContext.request.contextPath}/question/new">
                                     <input type="hidden" name="subjectId" value="${requestScope.subject.id}"/>
                                     <input type="hidden" name="lessonId" value="${requestScope.lesson.id}"/>
-                                    <input type="hidden" name="action" value="newQuestion"/>
                                     <button class="btn btn-primary px-3">
                                         <i class="fa fa-plus-square mr-3"></i>
                                         New question
@@ -98,10 +97,12 @@
                             <h4 class="py-3 mb-4"><span class="text-muted fw-light">Question /</span> Question list</h4>
 
                             <form id="searchBar" class="d-flex" action="${pageContext.request.contextPath}/question">
+                                <input type="hidden" name="change" id="change"/>
                                 <div class="input-group mr-3" style="overflow: auto;">
                                     <label for="subjectselect">Subject: </label>
-                                    <select style="height: 38px;" name="subjectid" id="subjectselect" class="mr-3 ml-3" 
-                                            onchange="document.getElementById('searchBar').submit();"
+                                    <select style="height: 38px;" name="subjectId" id="subjectselect" class="mr-3 ml-3" 
+                                            onchange="document.getElementById('change').value = 'subject';
+                                                    document.getElementById('searchBar').submit();"
                                             onmousedown="if (this.options.length > 5) {
                                                         this.size = 5;
                                                         document.getElementById('subjectselect').style.height = '115px';
@@ -124,7 +125,8 @@
                                     </select>
                                     <label for="lessonSelect">Lesson: </label>
                                     <select style="height: 38px;" name="lessonId" id="lessonSelect" class="mr-3 ml-3" 
-                                            onchange="document.getElementById('searchBar').submit();"
+                                            onchange="document.getElementById('change').value = 'lesson';
+                                                    document.getElementById('searchBar').submit();"
                                             onmousedown="if (this.options.length > 5) {
                                                         this.size = 5;
                                                         document.getElementById('lessonSelect').style.height = '115px';
@@ -158,51 +160,29 @@
                                                     }"  
                                             onblur="this.size = 0;
                                                     document.getElementById('sortBy').style.height = '38px';">
-                                        <c:if test="${(requestScope.sortBy == null)}">
-                                            <option value="none" selected>None</option>
-                                            <option value="content">Content</option>
-                                            <option value="Subject">Subject</option>
-                                            <option value="lesson">Lesson</option>
-                                            <option value="status">Status</option>
-                                        </c:if>
-                                        <c:if test="${requestScope.sortBy != null}">
-                                            <c:if test="${requestScope.sortBy == 'none'}">
-                                                <option value="none" selected>None</option>
-                                            </c:if>
-                                            <c:if test="${requestScope.sortBy != 'none'}">
-                                                <option value="none">None</option>
-                                            </c:if>
-                                            <c:if test="${requestScope.sortBy == 'content'}">
-                                                <option value="content" selected>Content</option>
+                                        <c:forEach items="${requestScope.sortOptions}" var="option">
+                                            <c:if test="${requestScope.sortBy == option}">
+                                                <option value="${option}" selected>${option}</option>
                                             </c:if>
-                                            <c:if test="${requestScope.sortBy != 'content'}">
-                                                <option value="content">Content</option>
+                                            <c:if test="${requestScope.sortBy != option}">
+                                                <option value="${option}">${option}</option>
                                             </c:if>
-                                            <c:if test="${requestScope.sortBy == 'subject'}">
-                                                <option value="subject" selected>Subject</option>
-                                            </c:if>
-                                            <c:if test="${requestScope.sortBy != 'subject'}">
-                                                <option value="subject">Subject</option>
-                                            </c:if>
-                                            <c:if test="${requestScope.sortBy == 'lesson'}">
-                                                <option value="lesson" selected>Lesson</option>
-                                            </c:if>
-                                            <c:if test="${requestScope.sortBy != 'lesson'}">
-                                                <option value="lesson">Lesson</option>
-                                            </c:if>
-                                            <c:if test="${requestScope.sortBy == 'status'}">
-                                                <option value="status" selected>Status</option>
-                                            </c:if>
-                                            <c:if test="${requestScope.sortBy != 'status'}">
-                                                <option value="status">Status</option>
-                                            </c:if>
-                                        </c:if>
-                                    </select>
-                                </div>
+                                        </c:forEach>
+                                    </select>
+                                </div>
+
+
+                            </form>
+
+                            <div class="row mb-3">
+                                <c:if test="${requestScope.successful != null && !requestScope.successful.isEmpty()}">
+                                    <h6 class="text-success">${requestScope.successful}</h6>
+                                </c:if>
+                                <c:if test="${requestScope.err != null && !requestScope.err.isEmpty()}">
+                                    <h6 class="text-danger">${requestScope.err}</h6>
+                                </c:if>
+                            </div>
 
-
-                            </form>
-
                             <!-- Basic Bootstrap Table -->
 
                             <div class="card">
@@ -340,9 +320,10 @@
                                                                     <i class="tf-icon bx bx-chevron-left"></i>
                                                                 </button>
                                                             </li>
+                                                            <c:set var="noOfPages" value="${requestScope.noOfPages}"></c:set>
                                                             <c:forEach begin="1" end="${requestScope.noOfPages}" var="page">
-                                                                <c:if test="${(page == 1) || (page == 2) || (page == requestScope.noOfPages) ||
-                                                                              (page == requestScope.noOfPages - 1) || (Math.abs(page - requestScope.currentPage) <= 1)}">
+                                                                <c:if test="${(page == 1) || (page == 2) || (Math.abs(page - requestScope.currentPage) <= 1)
+                                                                              || (page == noOfPages) || (page == noOfPages - 1)}">
                                                                     <c:if test="${page == requestScope.currentPage}">
                                                                         <li class="page-item active">
                                                                             <button class="page-link"
@@ -358,16 +339,17 @@
                                                                                     onclick="document.getElementById('newPage').value = ${page}">${page}</button>
                                                                         </li>
                                                                     </c:if>
-                                                                    <c:if test="${(page == 2) && (page < requestScope.currentPage - 1)}">
-                                                                        <li class="page-item">
-                                                                            <button class="page-link">...</button>
-                                                                        </li>
-                                                                    </c:if>
-                                                                    <c:if test="${(page == requestScope.currentPage + 1) && (requestScope.currentPage + 1 < requestScope.noOfPages - 1)}">
-                                                                        <li class="page-item">
-                                                                            <button class="page-link">...</button>
-                                                                        </li>
-                                                                    </c:if>
+                                                                </c:if>
+                                                                <c:set var="currentPage" value="${requestScope.currentPage}"></c:set>
+                                                                <c:if test="${(page == currentPage - 2) && (page > 2)}">
+                                                                    <li class="page-item">
+                                                                        <button class="page-link">...</button>
+                                                                    </li>
+                                                                </c:if>
+                                                                <c:if test="${(page == currentPage + 2) && (page < noOfPages - 1)}">
+                                                                    <li class="page-item">
+                                                                        <button class="page-link">...</button>
+                                                                    </li>
                                                                 </c:if>
                                                             </c:forEach>
                                                             <li class="page-item next">
@@ -405,50 +387,51 @@
                 </div>
             </div>
             <!-- / Layout wrapper -->
+        </div>
 
-            <script>
-                function assignValue(questionId, action) {
-                    document.getElementById("questionId").value = questionId;
-                    let text1 = "Are you sure you want to ";
-                    let text2 = " question?";
-                    let s = text1 + action + text2;
-                    document.getElementById("modalBodyText").innerHTML = s;
-                }
-            </script>
+        <script>
+            function assignValue(questionId, action) {
+                document.getElementById("questionId").value = questionId;
+                let text1 = "Are you sure you want to ";
+                let text2 = " question?";
+                let s = text1 + action + text2;
+                document.getElementById("modalBodyText").innerHTML = s;
+            }
+        </script>
 
-            <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
-            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
-            <script src="../lib/easing/easing.min.js"></script>
-            <script src="../lib/waypoints/waypoints.min.js"></script>
-            <script src="../lib/counterup/counterup.min.js"></script>
-            <script src="../lib/owlcarousel/owl.carousel.min.js"></script>
+        <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
+        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
+        <script src="../lib/easing/easing.min.js"></script>
+        <script src="../lib/waypoints/waypoints.min.js"></script>
+        <script src="../lib/counterup/counterup.min.js"></script>
+        <script src="../lib/owlcarousel/owl.carousel.min.js"></script>
 
-            <!-- Template Javascript -->
-            <script src="../js/main.js"></script>
+        <!-- Template Javascript -->
+        <script src="../js/main.js"></script>
 
-            <!-- Core JS -->
-            <!-- build:js assets/vendor/js/core.js -->
+        <!-- Core JS -->
+        <!-- build:js assets/vendor/js/core.js -->
 
-            <script src="assets/vendor/libs/jquery/jquery.js"></script>
-            <script src="assets/vendor/libs/popper/popper.js"></script>
-            <script src="assets/vendor/js/bootstrap.js"></script>
-            <script src="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
-            <script src="assets/vendor/js/menu.js"></script>
+        <script src="assets/vendor/libs/jquery/jquery.js"></script>
+        <script src="assets/vendor/libs/popper/popper.js"></script>
+        <script src="assets/vendor/js/bootstrap.js"></script>
+        <script src="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
+        <script src="assets/vendor/js/menu.js"></script>
 
-            <!-- endbuild -->
+        <!-- endbuild -->
 
-            <!-- Vendors JS -->
-            <script src="assets/vendor/libs/apex-charts/apexcharts.js"></script>
+        <!-- Vendors JS -->
+        <script src="assets/vendor/libs/apex-charts/apexcharts.js"></script>
 
-            <!-- Main JS -->
-            <script src="assets/js/main.js"></script>
+        <!-- Main JS -->
+        <script src="assets/js/main.js"></script>
 
-            <!-- Page JS -->
-            <script src="assets/js/dashboards-analytics.js"></script>
+        <!-- Page JS -->
+        <script src="assets/js/dashboards-analytics.js"></script>
 
-            <!-- Place this tag in your head or just before your close body tag. -->
-            <script async defer src="https://buttons.github.io/buttons.js"></script>
-            
-            <script src="js/sider.js"></script>
+        <!-- Place this tag in your head or just before your close body tag. -->
+        <script async defer src="https://buttons.github.io/buttons.js"></script>
+
+        <script src="js/sider.js"></script>
     </body>
 </html>
Index: src/java/controller/DashboardServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport dal.*;\r\n\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\n\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport model.classes.Classes;\r\nimport model.Question;\r\nimport model.subject.Subject;\r\nimport model.user.User;\r\n\r\n@WebServlet(name = \"DashboardServlet\", urlPatterns = {\"/dashboard\"})\r\npublic class DashboardServlet extends HttpServlet {\r\n\r\n    UserDAO userDAO = new UserDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n    ClassDAO classDAO = new ClassDAO();\r\n    QuestionDAO questionDAO = new QuestionDAO();\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet DashboardServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet DashboardServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    private boolean isEqualDate(Date date1, Date date2) {\r\n        return date1.getDay() == date2.getDay() && date1.getMonth() == date2.getMonth()\r\n                && date1.getYear() == date2.getYear();\r\n    }\r\n\r\n    private void getUserStatistics(HttpServletRequest request) {\r\n        ArrayList<User> userList = userDAO.getAllUsers();\r\n        int newUsersToday = 0;\r\n        Date today = new Date();\r\n        for (User user : userList) {\r\n            if (isEqualDate(today, user.getDateCreated())) {\r\n                newUsersToday++;\r\n            }\r\n        }\r\n        request.setAttribute(\"newUsersToday\", newUsersToday);\r\n        request.setAttribute(\"userList\", userList);\r\n    }\r\n\r\n    private void getClassStastistic(HttpServletRequest request) {\r\n        ArrayList<Classes> classList = classDAO.getAllClasses();\r\n        request.setAttribute(\"classList\", classList);\r\n    }\r\n\r\n    private void getSubjectStastistics(HttpServletRequest request) {\r\n        ArrayList<Subject> subjectList = subjectDAO.getAllSubject();\r\n        request.setAttribute(\"subjectList\", subjectList);\r\n    }\r\n\r\n    private void getQuestionStastistic(HttpServletRequest request) {\r\n        ArrayList<Question> questionList = questionDAO.getAllQuestions();\r\n        request.setAttribute(\"questionList\", questionList);\r\n\r\n    }\r\n\r\n    private void getStatistic(HttpServletRequest request) {\r\n        getUserStatistics(request);\r\n        getSubjectStastistics(request);\r\n        getClassStastistic(request);\r\n        getQuestionStastistic(request);\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String contextPath = request.getServletContext().getContextPath();\r\n        String loginPage = contextPath + \"/login.jsp\";\r\n        String homePage = contextPath + \"/home\";\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(loginPage);\r\n        } else {\r\n            User u = userDAO.getUserById(user.getId());\r\n            if (u != null && u.getEmail() != null) {\r\n                session.setAttribute(\"user\", u);\r\n                if (user.getRole() > 1) {\r\n                    response.sendRedirect(homePage);\r\n                } else {\r\n                    getStatistic(request);\r\n                    request.getRequestDispatcher(\"/WEB-INF/dashboard/dashboard.jsp\").forward(request, response);\r\n                }\r\n            } else {\r\n                response.sendRedirect(loginPage);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doGet(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/DashboardServlet.java b/src/java/controller/DashboardServlet.java
--- a/src/java/controller/DashboardServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/DashboardServlet.java	(date 1721635964765)
@@ -1,24 +1,20 @@
 package controller;
 
 import dal.*;
-
 import java.io.IOException;
 import java.io.PrintWriter;
-
 import jakarta.servlet.ServletException;
 import jakarta.servlet.annotation.WebServlet;
 import jakarta.servlet.http.HttpServlet;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
-
 import java.util.ArrayList;
 import java.util.Date;
-
 import model.classes.Classes;
 import model.Question;
 import model.subject.Subject;
-import model.user.User;
+import model.User;
 
 @WebServlet(name = "DashboardServlet", urlPatterns = {"/dashboard"})
 public class DashboardServlet extends HttpServlet {
Index: web/WEB-INF/views/question/questiondetails.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>Question details</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/../assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n\r\n\r\n    </head>\r\n\r\n    <body>\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Question /</span> Question details</h4>\r\n                            <form action=\"${pageContext.request.contextPath}/question/update\" method=\"post\">\r\n                                <div class=\"col-xxl\">\r\n                                    <div class=\"card mb-4\">\r\n                                        <div class=\"card-header d-flex align-items-center justify-content-between mb-3\">\r\n                                            <small class=\"text-muted float-end\">Input question and answers content</small>\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <input type=\"hidden\" name=\"questionId\" value=\"${requestScope.question.id}\"/>\r\n                                            <input type=\"hidden\" name=\"action\" value=\"answerChange\"/>\r\n\r\n                                            <div class=\"row mb-5\">\r\n                                                <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname2\">Question</label>\r\n                                                <div class=\"col-sm-10\">\r\n                                                    <textarea name=\"question\" id=\"basic-icon-default-fullname2\"\r\n                                                              class=\"form-control border-top-0 border-right-0 border-left-0 p-0\" \r\n                                                              rows=\"5\" placeholder=\"Question content\" readonly>${requestScope.question.content}</textarea>\r\n                                                </div>\r\n                                            </div>\r\n                                            <c:forEach items=\"${requestScope.answers}\" var=\"answer\">\r\n                                                <div class=\"row mb-3\">\r\n                                                    <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname\">Answer</label>\r\n\r\n                                                    <div class=\"col-sm-10\">\r\n                                                        <div class=\"input-group\">\r\n                                                            <c:if test=\"${answer.isCorrect}\">\r\n                                                                <span style=\"height: 38px; width: 38px;\" class=\"input-group-text\"></span>\r\n                                                                <input\r\n                                                                    class=\"form-check-input mt-0 ml-2\"\r\n                                                                    type=\"checkbox\" style=\"align-self: center; \"\r\n                                                                    name=\"${answer.id}isCorrect\"\r\n                                                                    disabled\r\n                                                                    checked/>\r\n                                                            </c:if>\r\n                                                            <c:if test=\"${!answer.isCorrect}\">\r\n                                                                <span style=\"height: 38px; width: 38px;\" class=\"input-group-text\"></span>\r\n                                                                <input\r\n                                                                    class=\"form-check-input mt-0 ml-2\"\r\n                                                                    name=\"${answer.id}isCorrect\"\r\n                                                                    type=\"checkbox\" style=\"align-self: center; \"\r\n                                                                    disabled/>\r\n                                                            </c:if>\r\n\r\n                                                            <input type=\"text\" class=\"form-control\" id=\"basic-icon-default-fullname\"\r\n                                                                   name=\"${answer.id}\"\r\n                                                                   value=\"${answer.content}\"\r\n                                                                   readonly/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </c:forEach>\r\n                                            <div class=\"row mb-3\">\r\n                                                <div class=\"row justify-content-end\">\r\n                                                    <div class=\"col-sm-10\">\r\n                                                        <button type=\"submit\" class=\"btn btn-primary\" disabled>Update answer</button>\r\n                                                        <h3>${requestScope.err}</h3>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/question/questiondetails.jsp b/web/WEB-INF/views/question/questiondetails.jsp
--- a/web/WEB-INF/views/question/questiondetails.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/question/questiondetails.jsp	(date 1721635964783)
@@ -87,7 +87,15 @@
 
 
                             <h4 class="py-3 mb-4"><span class="text-muted fw-light">Question /</span> Question details</h4>
-                            <form action="${pageContext.request.contextPath}/question/update" method="post">
+                            <div class="mb-3">
+                                <label for="subject">Subject: </label>
+                                <input type="text" style="width: 100px;"
+                                       value="${requestScope.question.lesson.subject.code}" readonly id="subject"/>
+                                <label for="lesson">Lesson: </label>
+                                <input type="text" style="width: 500px;" 
+                                       value="${requestScope.question.lesson.name}" readonly id="lesson"/>
+                            </div>
+                            <form action="${pageContext.request.contextPath}/question/update">
                                 <div class="col-xxl">
                                     <div class="card mb-4">
                                         <div class="card-header d-flex align-items-center justify-content-between mb-3">
@@ -95,21 +103,37 @@
                                         </div>
                                         <div class="card-body">
                                             <input type="hidden" name="questionId" value="${requestScope.question.id}"/>
-                                            <input type="hidden" name="action" value="answerChange"/>
-
+                                            <input type="hidden" name="action" id="action"/>
+                                            <input type="hidden" name="deletedId" id="deletedId"/>
                                             <div class="row mb-5">
                                                 <label class="col-sm-2 col-form-label" for="basic-icon-default-fullname2">Question</label>
                                                 <div class="col-sm-10">
                                                     <textarea name="question" id="basic-icon-default-fullname2"
                                                               class="form-control border-top-0 border-right-0 border-left-0 p-0" 
-                                                              rows="5" placeholder="Question content" readonly>${requestScope.question.content}</textarea>
+                                                              rows="5" placeholder="Question content">${requestScope.question.content}</textarea>
                                                 </div>
                                             </div>
-                                            <c:forEach items="${requestScope.answers}" var="answer">
+                                            <c:if test="${requestScope.questionErr != null}">
                                                 <div class="row mb-3">
-                                                    <label class="col-sm-2 col-form-label" for="basic-icon-default-fullname">Answer</label>
-
+                                                    <div class="col-sm-2"></div>
+                                                    <div class="col-sm-10">
+                                                        <h5 style="color: red;">${requestScope.questionErr}</h5>
+                                                    </div>
+                                                </div>
+                                            </c:if>
+                                            <c:if test="${requestScope.answerErr != null}">
+                                                <div class="row mb-3">
+                                                    <div class="col-sm-2"></div>
                                                     <div class="col-sm-10">
+                                                        <h5 style="color: red;">${requestScope.answerErr}</h5>
+                                                    </div>
+                                                </div>
+                                            </c:if>
+                                            <c:forEach items="${requestScope.answerList}" var="answer">
+                                                <div class="row mb-3">
+                                                    <label class="col-sm-2 col-form-label" for="basic-icon-default-fullname">Answer</label>
+
+                                                    <div class="col-sm-9">
                                                         <div class="input-group">
                                                             <c:if test="${answer.isCorrect}">
                                                                 <span style="height: 38px; width: 38px;" class="input-group-text"></span>
@@ -117,7 +141,6 @@
                                                                     class="form-check-input mt-0 ml-2"
                                                                     type="checkbox" style="align-self: center; "
                                                                     name="${answer.id}isCorrect"
-                                                                    disabled
                                                                     checked/>
                                                             </c:if>
                                                             <c:if test="${!answer.isCorrect}">
@@ -125,24 +148,41 @@
                                                                 <input
                                                                     class="form-check-input mt-0 ml-2"
                                                                     name="${answer.id}isCorrect"
-                                                                    type="checkbox" style="align-self: center; "
-                                                                    disabled/>
+                                                                    type="checkbox" style="align-self: center;"/>
                                                             </c:if>
 
                                                             <input type="text" class="form-control" id="basic-icon-default-fullname"
                                                                    name="${answer.id}"
-                                                                   value="${answer.content}"
-                                                                   readonly/>
+                                                                   value="${answer.content}"/>
                                                         </div>
                                                     </div>
+                                                    <c:if test="${requestScope.answerList.size() > 2}">
+                                                        <div class="col-sm-1">
+                                                            <button style="height: 38px; width: 38px;" class="btn btn-icon"
+                                                                    type="submit"
+                                                                    onclick="document.getElementById('action').value = 'deleteAnswer';
+                                                                            document.getElementById('deletedId').value = ${answer.id};">
+                                                                <i style="color: red;" class="bx bx-trash"></i>
+                                                            </button>
+                                                        </div>
+                                                    </c:if>
                                                 </div>
                                             </c:forEach>
                                             <div class="row mb-3">
-                                                <div class="row justify-content-end">
-                                                    <div class="col-sm-10">
-                                                        <button type="submit" class="btn btn-primary" disabled>Update answer</button>
-                                                        <h3>${requestScope.err}</h3>
-                                                    </div>
+                                                <div class="col-sm-2"></div>
+                                                <div class="col-sm-10">
+                                                    <button type="submit" style="height: 38px; width: 38px;" 
+                                                            class="btn btn-icon btn-primary"
+                                                            onclick="document.getElementById('action').value = 'addAnswer';">
+                                                        <i class="bx bx-plus"></i>
+                                                    </button>
+                                                </div>
+                                            </div>
+                                            <div class="row mb-3">
+                                                <div class="col-sm-2"></div>
+                                                <div class="col-sm-10">
+                                                    <button type="submit" class="btn btn-primary">Update answer</button>
+                                                    <h3>${requestScope.err}</h3>
                                                 </div>
                                             </div>
                                         </div>
@@ -151,6 +191,8 @@
                             </form>
                             <hr class="my-5" />
 
+                            <a class="btn btn-primary" href="${pageContext.request.contextPath}/question">Back</a>
+
                         </div>
                         <!-- / Content -->
 
Index: src/java/controller/google/SignUpGoogle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.google;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n@WebServlet(\"/signup-google\")\r\npublic class SignUpGoogle extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, SQLException {\r\n        // Retrieve form data\r\n        String fullName = request.getParameter(\"fullName\");\r\n        String email = request.getParameter(\"email\");\r\n        String password = request.getParameter(\"password\");\r\n        String repassword = request.getParameter(\"repassword\");\r\n        String avt = \"assets/img/default_avt.jpg\";\r\n        int role = 3;\r\n        int status = 1;\r\n        HttpSession session = request.getSession();\r\n        UserDAO dao = new UserDAO();\r\n        if (fullName == null || email == null || password == null || repassword == null) {\r\n            session.setAttribute(\"message\", \"Please fill in all fields.\");\r\n            response.sendRedirect(\"set-password.jsp\");\r\n        } else if (dao.checkEmailExist(email)) {\r\n            session.setAttribute(\"message\", \"Email already exists.\");\r\n            response.sendRedirect(\"set-password.jsp\");\r\n        } else if (!password.equals(repassword)) {\r\n            session.setAttribute(\"message\", \"Passwords do not match.\");\r\n            response.sendRedirect(\"set-password.jsp\");\r\n        } else {\r\n            User user = new User();\r\n            user.setName(fullName);\r\n            user.setEmail(email);\r\n            user.setRole(role);\r\n            user.setAvatar(avt);\r\n            user.setStatus(status);\r\n            try {\r\n                dao.userSignUp(user, password);\r\n                session.setAttribute(\"message\", \"Sign-up successful.\");\r\n                response.sendRedirect(\"login.jsp\");\r\n            } catch (SQLException ex) {\r\n\r\n                session.setAttribute(\"message\", ex.getMessage());\r\n                response.sendRedirect(\"set-password.jsp\");\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            processRequest(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            processRequest(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/google/SignUpGoogle.java b/src/java/controller/google/SignUpGoogle.java
--- a/src/java/controller/google/SignUpGoogle.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/google/SignUpGoogle.java	(date 1721635964774)
@@ -7,7 +7,7 @@
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
-import model.user.User;
+import model.User;
 
 import java.io.IOException;
 import java.sql.SQLException;
Index: database/database design.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-- Create the database\r\ncreate DATABASE `KMS-G6-SE1808`;\r\nUSE `KMS-G6-SE1808`;\r\n\r\ncreate table `role`\r\n(\r\n    id   int(1) primary key,\r\n    name varchar(7)\r\n);\r\n-- Create the 'user' table\r\nCREATE TABLE user\r\n(\r\n    id           INT AUTO_INCREMENT PRIMARY KEY,\r\n    name         VARCHAR(50),\r\n    email        VARCHAR(35) UNIQUE,\r\n    avt          VARCHAR(100) default 'assets/img/default_avt.jpg',\r\n    password     VARCHAR(60),\r\n    role         INT(1),\r\n    status       int(1),\r\n    date_created date         default (curdate()),\r\n\r\n    foreign key (role) references `role` (id)\r\n);\r\n\r\nCREATE TABLE contact\r\n(\r\n    email   VARCHAR(35),\r\n    name    VARCHAR(255),\r\n    subject VARCHAR(255),\r\n    message TEXT\r\n);\r\n\r\n-- Create the 'subject' table\r\nCREATE TABLE subject\r\n(\r\n    id                   INT AUTO_INCREMENT PRIMARY KEY,\r\n    code                 VARCHAR(7) UNIQUE,\r\n    name                 VARCHAR(255),\r\n    status               BIT DEFAULT 0,\r\n    exam_no_of_questions tinyint\r\n);\r\n\r\n-- Create the 'subject_in_charged' table\r\nCREATE TABLE subject_in_charged\r\n(\r\n    user_id    INT,\r\n    subject_id INT,\r\n    PRIMARY KEY (user_id, subject_id),\r\n    FOREIGN KEY (user_id) REFERENCES user (id),\r\n    FOREIGN KEY (subject_id) REFERENCES subject (id)\r\n);\r\n\r\n-- Create the 'class' table\r\nCREATE TABLE class\r\n(\r\n    id   INT AUTO_INCREMENT PRIMARY KEY,\r\n    code VARCHAR(40) UNIQUE\r\n);\r\n\r\n-- Create the 'group' table\r\nCREATE TABLE `group`\r\n(\r\n    id            INT AUTO_INCREMENT PRIMARY KEY,\r\n    class_id      INT,\r\n    subject_id    INT,\r\n    instructor_id INT,\r\n    FOREIGN KEY (class_id) REFERENCES class (id),\r\n    FOREIGN KEY (subject_id) REFERENCES subject (id),\r\n    FOREIGN KEY (instructor_id) REFERENCES user (id)\r\n);\r\n\r\n-- Create the 'student_group' table\r\nCREATE TABLE student_group\r\n(\r\n    student_id INT,\r\n    group_id   INT,\r\n    PRIMARY KEY (student_id, group_id),\r\n    FOREIGN KEY (student_id) REFERENCES user (id),\r\n    FOREIGN KEY (group_id) REFERENCES `group` (id)\r\n);\r\n\r\n-- Create the 'group_announcement' table\r\nCREATE TABLE group_announcement\r\n(\r\n    id           INT AUTO_INCREMENT PRIMARY KEY,\r\n    group_id     INT,\r\n    announcement TEXT,\r\n    FOREIGN KEY (group_id) REFERENCES `group` (id)\r\n);\r\n\r\n-- Create the 'flashcard_set' table\r\nCREATE TABLE flashcard_set\r\n(\r\n    id         INT AUTO_INCREMENT PRIMARY KEY,\r\n    name       VARCHAR(255),\r\n    subject_id INT,\r\n    created_by INT,\r\n    FOREIGN KEY (created_by) REFERENCES user (id),\r\n    FOREIGN KEY (subject_id) REFERENCES subject (id)\r\n);\r\n\r\n-- Create the 'flashcard_question' table\r\nCREATE TABLE flashcard_question\r\n(\r\n    id               INT AUTO_INCREMENT PRIMARY KEY,\r\n    term             text,\r\n    definition       text,\r\n    flashcard_set_id INT,\r\n    FOREIGN KEY (flashcard_set_id) REFERENCES flashcard_set (id)\r\n);\r\n\r\n-- Create the 'lesson' table\r\ncreate table lesson\r\n(\r\n    id         int auto_increment primary key,\r\n    name       varchar(100) unique not null,\r\n    `order`    int                 not null,\r\n    subject_id int                 not null,\r\n    status     bit default 1,\r\n\r\n    foreign key (subject_id) references subject (id)\r\n);\r\n\r\ncreate table material\r\n(\r\n    id  int auto_increment primary key,\r\n    uri varchar(100)\r\n);\r\n\r\ncreate table material_lesson\r\n(\r\n    material_id int,\r\n    lesson_id   int,\r\n\r\n    primary key (material_id, lesson_id),\r\n    foreign key (material_id) references material (id),\r\n    foreign key (lesson_id) references lesson (id)\r\n);\r\n\r\ncreate table question\r\n(\r\n    id        int auto_increment primary key,\r\n    content   varchar(255) not null,\r\n    lesson_id int default null,\r\n    status    bit          not null,\r\n\r\n    foreign key (lesson_id) references lesson (id)\r\n);\r\n\r\ncreate table answer\r\n(\r\n    id          int auto_increment primary key,\r\n    content     varchar(255) not null,\r\n    is_correct  bit          not null,\r\n    question_id int          not null,\r\n\r\n    foreign key (question_id) references question (id)\r\n);\r\n\r\ncreate table test\r\n(\r\n    id             int primary key,\r\n    name           varchar(255),\r\n    no_of_question smallint\r\n);\r\n\r\ncreate table test_group\r\n(\r\n    test_id  int,\r\n    group_id int,\r\n\r\n    foreign key (test_id) references test (id),\r\n    foreign key (group_id) references `group` (id)\r\n);\r\n\r\ncreate table test_lesson\r\n(\r\n    test_id   int,\r\n    lesson_id int,\r\n\r\n    foreign key (test_id) references test (id),\r\n    foreign key (lesson_id) references `lesson` (id)\r\n);\r\n\r\ncreate table result\r\n(\r\n    id              int auto_increment primary key,\r\n    correct_answers int,\r\n    score           tinyint,\r\n    date_taken      date,\r\n    attempt         int,\r\n    user_id         int,\r\n    exam_subject_id int,\r\n    test_id         int,\r\n\r\n    foreign key (user_id) references user (id),\r\n    foreign key (exam_subject_id) references subject (id),\r\n    foreign key (test_id) references test (id)\r\n);\r\n\r\ncreate table result_details\r\n(\r\n    id          int primary key auto_increment,\r\n    result_id   int,\r\n    question_id int,\r\n    is_scored   bit,\r\n    content     varchar(255),\r\n\r\n    foreign key (result_id) references result (id)\r\n);\r\n\r\ncreate table result_answer_selected\r\n(\r\n    id                int auto_increment primary key,\r\n    result_details_id int,\r\n    answer_id         int,\r\n    content           varchar(100),\r\n    is_correct        bit,\r\n    is_selected       bit,\r\n\r\n    foreign key (result_details_id) references result_details (id)\r\n);\r\n\r\ninsert into role(id, name)\r\nvalues (0, 'Admin'),\r\n       (1, 'Manager'),\r\n       (2, 'Teacher'),\r\n       (3, 'Student');\r\n\r\n-- Insert users\r\nINSERT INTO user (name, email, password, role, status)\r\nVALUES ('ThuyBT02', 'thuybt02@fpt.edu.vn', 'password', 2, 1),\r\n       ('KienNT', 'kiennt@fpt.edu.vn', 'password', 2, 1),\r\n       ('HungNM142', 'hungnm142@fpt.edu.vn', 'password', 2, 1),\r\n       ('LinhDTT43', 'linhdtt43@fpt.edu.vn', 'password', 2, 1),\r\n       ('Hoannn6', 'hoannn6@fpt.edu.vn', 'password', 2, 1),\r\n       ('Doan Binh An', 'ExampleEmail@fpt.edu.vn', 'password', 3, 1),\r\n       ('admin', 'admin1@email.com', 'a', 0, 1),\r\n       ('manager', 'manager1@email.com', 'a', 1, 1),\r\n       ('teacher', 'teacher1@email.com', 'a', 2, 1),\r\n       ('student', 'student1@email.com', 'a', 3, 1),\r\n       ('Duong Quan Hao', 'ngunguoi123ys@gmail.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6',\r\n        0, 1);\r\n\r\nupdate user\r\nset avt = 'assets/img/annandmaryann.png'\r\nwhere email = 'ngunguoi123ys@gmail.com';\r\n\r\n-- Insert subjects\r\nINSERT INTO subject (code, name, status, exam_no_of_questions)\r\nVALUES ('PRN212', 'Basis Cross-Platform Application Programming With .NET', 1, 50),\r\n       ('SWP391', 'Application development project', 1, 50),\r\n       ('SWR302', 'Software Requirement', 1, 50),\r\n       ('SWT301', 'Software Testing', 1, 50),\r\n       ('FER202', 'Front-End web development with React', 1, 50);\r\n\r\n-- Insert classes\r\nINSERT INTO class (code)\r\nVALUES ('SE1808-NET'),\r\n       ('SE1840-KS'),\r\n       ('SE1827-NJ');\r\n\r\n-- Insert groups\r\nINSERT INTO `group` (class_id, subject_id, instructor_id)\r\nVALUES ((SELECT id FROM class WHERE code = 'SE1808-NET'), (SELECT id FROM subject WHERE code = 'PRN212'),\r\n        (SELECT id FROM user WHERE email = 'thuybt02@fpt.edu.vn')),\r\n       ((SELECT id FROM class WHERE code = 'SE1808-NET'), (SELECT id FROM subject WHERE code = 'SWP391'),\r\n        (SELECT id FROM user WHERE email = 'kiennt@fpt.edu.vn')),\r\n       ((SELECT id FROM class WHERE code = 'SE1840-KS'), (SELECT id FROM subject WHERE code = 'SWR302'),\r\n        (SELECT id FROM user WHERE email = 'hungnm142@fpt.edu.vn')),\r\n       ((SELECT id FROM class WHERE code = 'SE1840-KS'), (SELECT id FROM subject WHERE code = 'SWT301'),\r\n        (SELECT id FROM user WHERE email = 'linhdtt43@fpt.edu.vn')),\r\n       ((SELECT id FROM class WHERE code = 'SE1827-NJ'), (SELECT id FROM subject WHERE code = 'FER202'),\r\n        (SELECT id FROM user WHERE email = 'hoannn6@fpt.edu.vn'));\r\n\r\n-- Insert student groups without duplicates\r\nINSERT INTO student_group (student_id, group_id)\r\nVALUES ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1827-NJ')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'FER202'))),\r\n       ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1808-NET')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'PRN212'))),\r\n       ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1808-NET')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'SWP391'))),\r\n       ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1840-KS')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'SWR302'))),\r\n       ((SELECT id FROM user WHERE email = 'ExampleEmail@fpt.edu.vn'), (SELECT id\r\n                                                                        FROM `group`\r\n                                                                        WHERE class_id = (SELECT id FROM class WHERE code = 'SE1840-KS')\r\n                                                                          AND subject_id = (SELECT id FROM subject WHERE code = 'SWT301')));\r\n\r\n-- Insert subject in charged\r\nINSERT INTO subject_in_charged (user_id, subject_id)\r\nVALUES ((SELECT id FROM user WHERE email = 'thuybt02@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'PRN212')),\r\n       ((SELECT id FROM user WHERE email = 'kiennt@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'SWP391')),\r\n       ((SELECT id FROM user WHERE email = 'hungnm142@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'SWR302')),\r\n       ((SELECT id FROM user WHERE email = 'linhdtt43@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'SWT301')),\r\n       ((SELECT id FROM user WHERE email = 'hoannn6@fpt.edu.vn'), (SELECT id FROM subject WHERE code = 'FER202'));\r\n\r\ninsert into lesson(name, `order`, subject_id)\r\nvalues ('Introduction to .NET Platform - Visual Studio.NET', 1, (select id from subject where code = 'PRN212')),\r\n       ('C# Programming', 2, (select id from subject where code = 'PRN212')),\r\n       ('Object-Oriented Programming', 3, (select id from subject where code = 'PRN212')),\r\n       ('Collections and Generics', 4, (select id from subject where code = 'PRN212')),\r\n       ('Design Pattern in .NET', 5, (select id from subject where code = 'PRN212')),\r\n       ('Delegate ,Event_LINQ', 6, (select id from subject where code = 'PRN212')),\r\n       ('Building Windows Presentation Foundation (WPF) Application', 7,\r\n        (select id from subject where code = 'PRN212')),\r\n       ('Working with Databases Using Entity Framework Core', 8, (select id from subject where code = 'PRN212')),\r\n       ('Working with Files and System.IO', 9, (select id from subject where code = 'PRN212')),\r\n       ('Working with XML and JSON Serializing', 10, (select id from subject where code = 'PRN212')),\r\n       ('Concurrency Programming', 11, (select id from subject where code = 'PRN212'));\r\n\r\nINSERT INTO question(content, lesson_id, status)\r\nVALUES ('What is the difference between `String` and `string` in C#?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('Can ASP.NET Core work with the .NET Framework?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('What are the components of MVC (Model-View-Controller)?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('What is inheritance in .NET?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('What’s the difference between a class and an object?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),\r\n       ('What is managed code in .NET?',\r\n        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1);\r\n\r\nINSERT INTO answer(content, is_correct, question_id)\r\nVALUES ('`String` is an alias for `System.String`.', 1,\r\n        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),\r\n       ('`string` is an alias for `System.String`.', 0,\r\n        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),\r\n       ('There is no difference; they are interchangeable.', 0,\r\n        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),\r\n       ('`String` is a value type, and `string` is a reference type.', 0,\r\n        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),\r\n\r\n       ('No, ASP.NET Core only works with .NET Core.', 0,\r\n        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),\r\n       ('Yes, ASP.NET Core can work with both .NET Core and .NET Framework.', 1,\r\n        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),\r\n       ('ASP.NET Core is independent of any framework.', 0,\r\n        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),\r\n       ('ASP.NET Core is deprecated.', 0,\r\n        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),\r\n\r\n       ('Model, View, and Controller', 1,\r\n        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),\r\n       ('Model, ViewModel, and Controller', 0,\r\n        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),\r\n       ('Model, View, and Service', 0,\r\n        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),\r\n       ('Model, View, and Middleware', 0,\r\n        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),\r\n\r\n       ('It allows a class to inherit properties from an interface.', 0,\r\n        (select id from question where content = 'What is inheritance in .NET?')),\r\n       ('It promotes code reusability by allowing a class to inherit properties and behaviors from another class.', 1,\r\n        (select id from question where content = 'What is inheritance in .NET?')),\r\n       ('It is a way to create new classes from existing classes.', 0,\r\n        (select id from question where content = 'What is inheritance in .NET?')),\r\n       ('It is used to implement multiple inheritance.', 0,\r\n        (select id from question where content = 'What is inheritance in .NET?')),\r\n\r\n       ('A class is an instance of an object.', 0,\r\n        (select id from question where content = 'What’s the difference between a class and an object?')),\r\n       ('A class is a blueprint for creating objects.', 1,\r\n        (select id from question where content = 'What’s the difference between a class and an object?')),\r\n       ('An object is a blueprint for creating classes.', 0,\r\n        (select id from question where content = 'What’s the difference between a class and an object?')),\r\n       ('There is no difference; they are synonyms.', 0,\r\n        (select id from question where content = 'What’s the difference between a class and an object?')),\r\n\r\n       ('Code that runs outside the .NET runtime environment.', 0,\r\n        (select id from question where content = 'What is managed code in .NET?')),\r\n       ('Code that directly interacts with the operating system.', 0,\r\n        (select id from question where content = 'What is managed code in .NET?')),\r\n       ('Code that runs within the .NET runtime environment.', 1,\r\n        (select id from question where content = 'What is managed code in .NET?')),\r\n       ('Code that is written in unmanaged languages.', 0,\r\n        (select id from question where content = 'What is managed code in .NET?'));\r\n\r\ninsert into material(uri)\r\nvalues ('assets\\\\material\\\\Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),\r\n       ('assets\\\\material\\\\Chapter 02 - C# Programming.pptx');\r\n\r\ninsert into material_lesson (material_id, lesson_id)\r\nvalues ((select id\r\n         from material\r\n         where uri = 'assets\\\\material\\\\Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),\r\n        (SELECT id FROM lesson WHERE name = 'Introduction to .NET Platform - Visual Studio.NET')),\r\n\r\n       ((select id from material where uri = 'assets\\\\material\\\\Chapter 02 - C# Programming.pptx'),\r\n        (SELECT id FROM lesson WHERE name = 'C# Programming'));\r\n\r\nupdate user\r\nset avt = '../assets/img/admin1.png'\r\nwhere email = 'admin1@email.com';\r\n\r\n-- Insert sample flashcard sets with created_by column\r\nINSERT INTO flashcard_set (name, subject_id, created_by)\r\nVALUES ('PRN: OOP Basics', (SELECT id FROM subject WHERE code = 'PRN212'),\r\n        (SELECT id FROM user WHERE email = 'admin1@email.com')),\r\n       ('SWR: Agile Principles', (SELECT id FROM subject WHERE code = 'SWR302'),\r\n        (SELECT id FROM user WHERE email = 'admin1@email.com'));\r\n\r\n-- Insert sample flashcard questions\r\nINSERT INTO flashcard_question (term, definition, flashcard_set_id)\r\nVALUES ('Inheritance', 'A mechanism where a new class can inherit properties and methods of an existing class.',\r\n        (SELECT id FROM flashcard_set WHERE name = 'PRN: OOP Basics')),\r\n       ('Encapsulation', 'A principle of wrapping data and code as a single unit.',\r\n        (SELECT id FROM flashcard_set WHERE name = 'PRN: OOP Basics')),\r\n       ('Scrum', 'An agile process framework for managing complex knowledge work.',\r\n        (SELECT id FROM flashcard_set WHERE name = 'SWR: Agile Principles')),\r\n       ('Kanban',\r\n        'A method for managing the creation of products with an emphasis on continual delivery while not overburdening the development team.',\r\n        (SELECT id FROM flashcard_set WHERE name = 'SWR: Agile Principles'));\r\n\r\nselect *\r\nfrom flashcard_question;\r\nselect *\r\nfrom subject;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/database/database design.sql b/database/database design.sql
--- a/database/database design.sql	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/database/database design.sql	(date 1721635964762)
@@ -113,10 +113,10 @@
 create table lesson
 (
     id         int auto_increment primary key,
-    name       varchar(100) unique not null,
-    `order`    int                 not null,
-    subject_id int                 not null,
-    status     bit default 1,
+    name       varchar(100),
+    `order`    int,
+    subject_id int,
+    status		bit default 1,
 
     foreign key (subject_id) references subject (id)
 );
@@ -140,46 +140,43 @@
 create table question
 (
     id        int auto_increment primary key,
-    content   varchar(255) not null,
-    lesson_id int default null,
-    status    bit          not null,
-
-    foreign key (lesson_id) references lesson (id)
+    content   varchar(255),
+    lesson_id int,
+    status    bit,
+    
+    foreign key (lesson_id) references lesson(id)
 );
 
 create table answer
 (
     id          int auto_increment primary key,
-    content     varchar(255) not null,
-    is_correct  bit          not null,
-    question_id int          not null,
+    content     varchar(255),
+    is_correct  bit,
+    question_id int,
 
     foreign key (question_id) references question (id)
 );
 
-create table test
-(
-    id             int primary key,
-    name           varchar(255),
-    no_of_question smallint
+create table test(
+	id				int primary key,
+    name			varchar(255),
+	no_of_question 	smallint
 );
 
-create table test_group
-(
-    test_id  int,
-    group_id int,
-
-    foreign key (test_id) references test (id),
-    foreign key (group_id) references `group` (id)
+create table test_group(
+	test_id		int,
+    group_id 	int,
+    
+    foreign key (test_id) references test(id),
+    foreign key (group_id) references `group`(id)
 );
 
-create table test_lesson
-(
-    test_id   int,
-    lesson_id int,
-
-    foreign key (test_id) references test (id),
-    foreign key (lesson_id) references `lesson` (id)
+create table test_lesson(
+	test_id		int,
+    lesson_id 	int,
+    
+    foreign key (test_id) references test(id),
+    foreign key (lesson_id) references `lesson`(id)
 );
 
 create table result
@@ -191,11 +188,11 @@
     attempt         int,
     user_id         int,
     exam_subject_id int,
-    test_id         int,
+    test_id 		int,
 
     foreign key (user_id) references user (id),
     foreign key (exam_subject_id) references subject (id),
-    foreign key (test_id) references test (id)
+    foreign key (test_id) references test(id)
 );
 
 create table result_details
@@ -203,22 +200,22 @@
     id          int primary key auto_increment,
     result_id   int,
     question_id int,
-    is_scored   bit,
-    content     varchar(255),
+    is_scored	bit,
+    content		varchar(255),
 
-    foreign key (result_id) references result (id)
+    foreign key (result_id) references result(id)
 );
 
 create table result_answer_selected
 (
-    id                int auto_increment primary key,
-    result_details_id int,
-    answer_id         int,
-    content           varchar(100),
-    is_correct        bit,
-    is_selected       bit,
+    id                	int auto_increment primary key,
+    result_details_id 	int,
+    answer_id         	int,
+    content				varchar(100),
+    is_correct			bit,
+    is_selected       	bit,
 
-    foreign key (result_details_id) references result_details (id)
+    foreign key (result_details_id) references result_details(id)
 );
 
 insert into role(id, name)
@@ -229,22 +226,21 @@
 
 -- Insert users
 INSERT INTO user (name, email, password, role, status)
-VALUES ('ThuyBT02', 'thuybt02@fpt.edu.vn', 'password', 2, 1),
-       ('KienNT', 'kiennt@fpt.edu.vn', 'password', 2, 1),
-       ('HungNM142', 'hungnm142@fpt.edu.vn', 'password', 2, 1),
-       ('LinhDTT43', 'linhdtt43@fpt.edu.vn', 'password', 2, 1),
-       ('Hoannn6', 'hoannn6@fpt.edu.vn', 'password', 2, 1),
-       ('Doan Binh An', 'ExampleEmail@fpt.edu.vn', 'password', 3, 1),
-       ('admin', 'admin1@email.com', 'a', 0, 1),
-       ('manager', 'manager1@email.com', 'a', 1, 1),
-       ('teacher', 'teacher1@email.com', 'a', 2, 1),
-       ('student', 'student1@email.com', 'a', 3, 1),
+VALUES ('ThuyBT02', 'thuybt02@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
+       ('KienNT', 'kiennt@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
+       ('HungNM142', 'hungnm142@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
+       ('LinhDTT43', 'linhdtt43@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
+       ('Hoannn6', 'hoannn6@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
+       ('Doan Binh An', 'ExampleEmail@fpt.edu.vn', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 3, 1),
+       ('admin', 'admin1@email.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 0, 1),
+       ('manager', 'manager1@email.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 1, 1),
+       ('teacher', 'teacher1@email.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 2, 1),
+       ('student', 'student1@email.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6', 3, 1),
        ('Duong Quan Hao', 'ngunguoi123ys@gmail.com', '$2a$12$lL4NJHo5/Ng0cUmAj3Iig.lOqejnHA4uVnU9A82rDIVq9Lbqxj9m6',
-        0, 1);
-
-update user
-set avt = 'assets/img/annandmaryann.png'
-where email = 'ngunguoi123ys@gmail.com';
+			0, 1);
+	
+update user set avt = 'assets/img/annandmaryann.png' where email = 'ngunguoi123ys@gmail.com';
+update user set avt = 'assets/img/admin1.png' where email = 'admin1@email.com';
 
 -- Insert subjects
 INSERT INTO subject (code, name, status, exam_no_of_questions)
@@ -311,99 +307,256 @@
        ('Collections and Generics', 4, (select id from subject where code = 'PRN212')),
        ('Design Pattern in .NET', 5, (select id from subject where code = 'PRN212')),
        ('Delegate ,Event_LINQ', 6, (select id from subject where code = 'PRN212')),
-       ('Building Windows Presentation Foundation (WPF) Application', 7,
-        (select id from subject where code = 'PRN212')),
+       ('Building Windows Presentation Foundation (WPF) Application', 7, (select id from subject where code = 'PRN212')),
        ('Working with Databases Using Entity Framework Core', 8, (select id from subject where code = 'PRN212')),
        ('Working with Files and System.IO', 9, (select id from subject where code = 'PRN212')),
        ('Working with XML and JSON Serializing', 10, (select id from subject where code = 'PRN212')),
-       ('Concurrency Programming', 11, (select id from subject where code = 'PRN212'));
+       ('Concurrency Programming', 11, (select id from subject where code = 'PRN212')),
+       ('Introduction to the course', 1, (select id from subject where code = 'SWT301')),
+       ('Fundamentals of testing', 2, (select id from subject where code = 'SWT301')),
+       ('Testing throughout the software life cycle', 3, (select id from subject where code = 'SWT301')),
+       ('Static techniques', 4, (select id from subject where code = 'SWT301')),
+       ('Test techniques', 5, (select id from subject where code = 'SWT301')),
+       ('Test management', 6, (select id from subject where code = 'SWT301')),
+       ('Test management tools', 7,(select id from subject where code = 'SWT301'));
 
-INSERT INTO question(content, lesson_id, status)
-VALUES ('What is the difference between `String` and `string` in C#?',
-        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
-       ('Can ASP.NET Core work with the .NET Framework?',
-        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
-       ('What are the components of MVC (Model-View-Controller)?',
-        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
-       ('What is inheritance in .NET?',
-        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
-       ('What’s the difference between a class and an object?',
-        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1),
-       ('What is managed code in .NET?',
-        (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'), 1);
+set @lesson_id = (select id from lesson where name = 'Introduction to .NET Platform - Visual Studio.NET'
+        and subject_id = (select id from subject where code = 'PRN212'));
+INSERT INTO question(content, status, lesson_id)
+VALUES ('What is the difference between `String` and `string` in C#?', 1, @lesson_id),
+       ('Can ASP.NET Core work with the .NET Framework?', 1, @lesson_id),
+       ('What are the components of MVC (Model-View-Controller)?', 1, @lesson_id),
+       ('What is inheritance in .NET?', 1, @lesson_id),
+       ('What’s the difference between a class and an object?', 1, @lesson_id),
+       ('What is managed code in .NET?', 1, @lesson_id);
 
+set @question_id = (select id from question where content = 'What is the difference between `String` and `string` in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer(content, is_correct, question_id)
+VALUES ('`String` is an alias for `System.String`.', 1, @question_id),
+       ('`string` is an alias for `System.String`.', 0, @question_id),
+       ('There is no difference; they are interchangeable.', 0, @question_id),
+       ('`String` is a value type, and `string` is a reference type.', 0, @question_id);
+
+set @question_id = (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?'
+					and lesson_id = @lesson_id);
 INSERT INTO answer(content, is_correct, question_id)
-VALUES ('`String` is an alias for `System.String`.', 1,
-        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),
-       ('`string` is an alias for `System.String`.', 0,
-        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),
-       ('There is no difference; they are interchangeable.', 0,
-        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),
-       ('`String` is a value type, and `string` is a reference type.', 0,
-        (select id from question where content = 'What is the difference between `String` and `string` in C#?')),
+VALUES ('No, ASP.NET Core only works with .NET Core.', 0, @question_id),
+       ('Yes, ASP.NET Core can work with both .NET Core and .NET Framework.', 1, @question_id),
+       ('ASP.NET Core is independent of any framework.', 0, @question_id),
+       ('ASP.NET Core is deprecated.', 0, @question_id);
+       
+set @question_id = (select id from question where content = 'What are the components of MVC (Model-View-Controller)?'
+					and lesson_id = @lesson_id);       
+INSERT INTO answer(content, is_correct, question_id)
+VALUES ('Model, View, and Controller', 1, @question_id),
+       ('Model, ViewModel, and Controller', 0, @question_id),
+       ('Model, View, and Service', 0, @question_id),
+       ('Model, View, and Middleware', 0, @question_id);
+       
+set @question_id = (select id from question where content = 'What is inheritance in .NET?'
+					and lesson_id = @lesson_id);           
+INSERT INTO answer(content, is_correct, question_id)
+VALUES ('It allows a class to inherit properties from an interface.', 0, @question_id),
+       ('It promotes code reusability by allowing a class to inherit properties and behaviors from another class.', 1, @question_id),
+       ('It is a way to create new classes from existing classes.', 0, @question_id),
+       ('It is used to implement multiple inheritance.', 0, @question_id);
+       
+set @question_id = (select id from question where content = 'What’s the difference between a class and an object?'
+					and lesson_id = @lesson_id);      
+INSERT INTO answer(content, is_correct, question_id)
+VALUES ('A class is an instance of an object.', 0, @question_id),
+       ('A class is a blueprint for creating objects.', 1, @question_id),
+       ('An object is a blueprint for creating classes.', 0, @question_id),
+       ('There is no difference; they are synonyms.', 0, @question_id);
+       
+set @question_id = (select id from question where content = 'What is managed code in .NET?'
+					and lesson_id = @lesson_id);  
+INSERT INTO answer(content, is_correct, question_id)
+VALUES ('Code that runs outside the .NET runtime environment.', 0, @question_id),
+       ('Code that directly interacts with the operating system.', 0, @question_id),
+       ('Code that runs within the .NET runtime environment.', 1, @question_id),
+       ('Code that is written in unmanaged languages.', 0, @question_id);
+       
+set @lesson_id = (select id from lesson where name = 'Object-Oriented Programming'
+        and subject_id = (select id from subject where code = 'PRN212'));
+INSERT INTO question (content, status, lesson_id) VALUES
+('What is Object-Oriented Programming (OOP)?', 1, @lesson_id),
+('What are the four fundamental principles of OOP?', 1, @lesson_id),
+('Explain the concept of a class and an object in C#.', 1, @lesson_id),
+('What is encapsulation and how is it implemented in C#?', 1, @lesson_id),
+('Describe inheritance and provide an example in C#.', 1, @lesson_id),
+('What is polymorphism and how is it achieved in C#?', 1, @lesson_id),
+('Explain abstraction with an example in C#.', 1, @lesson_id),
+('What are access modifiers in C# and what are their types?', 1, @lesson_id),
+('How do you create a constructor in C# and what is its purpose?', 1, @lesson_id),
+('What is the difference between a class and an interface in C#?', 1, @lesson_id),
+('How can you implement multiple inheritance in C#?', 1, @lesson_id),
+('What is method overloading and method overriding in C#?', 1, @lesson_id),
+('Explain the concept of properties in C#.', 1, @lesson_id),
+('What is the difference between a field and a property in C#?', 1, @lesson_id),
+('How do you implement an abstract class in C#?', 1, @lesson_id),
+('What is the purpose of the `virtual` keyword in C#?', 1, @lesson_id),
+('Explain the use of the `sealed` keyword in C#.', 1, @lesson_id),
+('What is the difference between `public`, `private`, `protected`, and `internal` access modifiers?', 1, @lesson_id);
+
+set @question_id = (select id from question where content = 'What is Object-Oriented Programming (OOP)?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A programming paradigm based on functions', 0),
+(@question_id, 'A programming paradigm based on objects and classes', 1),
+(@question_id, 'A programming paradigm based on data structures', 0),
+(@question_id, 'A programming paradigm based on algorithms', 0);
+
+set @question_id = (select id from question where content = 'What are the four fundamental principles of OOP?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) Encapsulation, Inheritance, Polymorphism, Abstraction', 1),
+(@question_id, 'B) Encapsulation, Inheritance, Polymorphism, Aggregation', 0),
+(@question_id, 'C) Encapsulation, Inheritance, Polymorphism, Composition', 0),
+(@question_id, 'D) Encapsulation, Inheritance, Polymorphism, Association', 0);
+
+set @question_id = (select id from question where content = 'Explain the concept of a class and an object in C#.'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) A class is an instance of an object', 0),
+(@question_id, 'B) An object is a blueprint of a class', 0),
+(@question_id, 'C) A class is a blueprint for creating objects', 1),
+(@question_id, 'D) An object is a method in a class', 0);
+
+set @question_id = (select id from question where content = 'What is encapsulation and how is it implemented in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) Encapsulation is the process of inheriting properties', 0),
+(@question_id, 'B) Encapsulation is the process of hiding implementation details', 1),
+(@question_id, 'C) Encapsulation is the process of overloading methods', 0),
+(@question_id, 'D) Encapsulation is the process of overriding methods', 0);
+
+set @question_id = (select id from question where content = 'Describe inheritance and provide an example in C#.'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) Inheritance is when a class contains another class', 0),
+(@question_id, 'B) Inheritance is when a class is derived from another class', 1),
+(@question_id, 'C) Inheritance is when a class implements an interface', 0),
+(@question_id, 'D) Inheritance is when a class has multiple constructors', 0);
 
-       ('No, ASP.NET Core only works with .NET Core.', 0,
-        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),
-       ('Yes, ASP.NET Core can work with both .NET Core and .NET Framework.', 1,
-        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),
-       ('ASP.NET Core is independent of any framework.', 0,
-        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),
-       ('ASP.NET Core is deprecated.', 0,
-        (select id from question where content = 'Can ASP.NET Core work with the .NET Framework?')),
+set @question_id = (select id from question where content = 'What is polymorphism and how is it achieved in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) Polymorphism is the ability to take multiple forms', 1),
+(@question_id, 'B) Polymorphism is the ability to inherit multiple classes', 0),
+(@question_id, 'C) Polymorphism is the ability to override methods', 0),
+(@question_id, 'D) Polymorphism is the ability to overload methods', 0);
 
-       ('Model, View, and Controller', 1,
-        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),
-       ('Model, ViewModel, and Controller', 0,
-        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),
-       ('Model, View, and Service', 0,
-        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),
-       ('Model, View, and Middleware', 0,
-        (select id from question where content = 'What are the components of MVC (Model-View-Controller)?')),
+set @question_id = (select id from question where content = 'Explain abstraction with an example in C#.'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) Abstraction is the process of hiding implementation details', 1),
+(@question_id, 'B) Abstraction is the process of inheriting properties', 0),
+(@question_id, 'C) Abstraction is the process of overloading methods', 0),
+(@question_id, 'D) Abstraction is the process of overriding methods', 0);
 
-       ('It allows a class to inherit properties from an interface.', 0,
-        (select id from question where content = 'What is inheritance in .NET?')),
-       ('It promotes code reusability by allowing a class to inherit properties and behaviors from another class.', 1,
-        (select id from question where content = 'What is inheritance in .NET?')),
-       ('It is a way to create new classes from existing classes.', 0,
-        (select id from question where content = 'What is inheritance in .NET?')),
-       ('It is used to implement multiple inheritance.', 0,
-        (select id from question where content = 'What is inheritance in .NET?')),
+set @question_id = (select id from question where content = 'What are access modifiers in C# and what are their types?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) Public, Private, Protected, Internal', 1),
+(@question_id, 'B) Public, Private, Protected, External', 0),
+(@question_id, 'C) Public, Private, Protected, Static', 0),
+(@question_id, 'D) Public, Private, Protected, Final', 0);
 
-       ('A class is an instance of an object.', 0,
-        (select id from question where content = 'What’s the difference between a class and an object?')),
-       ('A class is a blueprint for creating objects.', 1,
-        (select id from question where content = 'What’s the difference between a class and an object?')),
-       ('An object is a blueprint for creating classes.', 0,
-        (select id from question where content = 'What’s the difference between a class and an object?')),
-       ('There is no difference; they are synonyms.', 0,
-        (select id from question where content = 'What’s the difference between a class and an object?')),
+set @question_id = (select id from question where content = 'How do you create a constructor in C# and what is its purpose?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) A constructor is created using the `new` keyword and initializes objects', 0),
+(@question_id, 'B) A constructor is created using the `class` keyword and initializes objects', 0),
+(@question_id, 'C) A constructor is created using the `void` keyword and initializes objects', 0),
+(@question_id, 'D) A constructor is created using the class name and initializes objects', 1);
 
-       ('Code that runs outside the .NET runtime environment.', 0,
-        (select id from question where content = 'What is managed code in .NET?')),
-       ('Code that directly interacts with the operating system.', 0,
-        (select id from question where content = 'What is managed code in .NET?')),
-       ('Code that runs within the .NET runtime environment.', 1,
-        (select id from question where content = 'What is managed code in .NET?')),
-       ('Code that is written in unmanaged languages.', 0,
-        (select id from question where content = 'What is managed code in .NET?'));
+set @question_id = (select id from question where content = 'What is the difference between a class and an interface in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) A class can inherit multiple interfaces, but an interface cannot inherit classes', 0),
+(@question_id, 'B) A class can have implementations, but an interface cannot', 0),
+(@question_id, 'C) A class can be instantiated, but an interface cannot', 0),
+(@question_id, 'D) All of the above', 1);
+
+set @question_id = (select id from question where content = 'How can you implement multiple inheritance in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) By using multiple classes', 0),
+(@question_id, 'B) By using multiple interfaces', 1),
+(@question_id, 'C) By using a single class and multiple interfaces', 0),
+(@question_id, 'D) By using multiple classes and interfaces', 0);
+
+set @question_id = (select id from question where content = 'What is method overloading and method overriding in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) Overloading is defining multiple methods with the same name but different parameters; Overriding is redefining a base class method in a derived class', 1),
+(@question_id, 'B) Overloading is redefining a base class method in a derived class; Overriding is defining multiple methods with the same name but different parameters', 0),
+(@question_id, 'C) Overloading is defining multiple methods with the same name and parameters; Overriding is redefining a base class method in a derived class', 0),
+(@question_id, 'D) Overloading is redefining a base class method in a derived class; Overriding is defining multiple methods with the same name and parameters', 0);
+
+set @question_id = (select id from question where content = 'Explain the concept of properties in C#.'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) Properties are methods that provide access to class fields', 0),
+(@question_id, 'B) Properties are variables that store data', 0),
+(@question_id, 'C) Properties are special methods that provide a flexible mechanism to read, write, or compute the value of a private field', 1),
+(@question_id, 'D) Properties are classes that contain methods', 0);
+
+set @question_id = (select id from question where content = 'What is the difference between a field and a property in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) A field is a variable of any type that is declared directly in a class; A property is a member that provides a flexible mechanism to read, write, or compute the value of a private field', 1),
+(@question_id, 'B) A field is a method that provides access to class data; A property is a variable that stores data', 0),
+(@question_id, 'C) A field is a class that contains methods; A property is a method that provides access to class data', 0),
+(@question_id, 'D) A field is a variable that stores data; A property is a method that provides access to class data', 0);
+
+set @question_id = (select id from question where content = 'How do you implement an abstract class in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) By using the `abstract` keyword and providing implementations for all methods', 0),
+(@question_id, 'B) By using the `abstract` keyword and providing implementations for some methods', 1),
+(@question_id, 'C) By using the `abstract` keyword and not providing implementations for any methods', 0),
+(@question_id, 'D) By using the `abstract` keyword and providing implementations for at least one method', 0);
+
+set @question_id = (select id from question where content = 'What is the purpose of the `virtual` keyword in C#?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) To define a method that can be overridden in a derived class', 1),
+(@question_id, 'B) To define a method that cannot be overridden in a derived class', 0),
+(@question_id, 'C) To define a method that must be overridden in a derived class', 0),
+(@question_id, 'D) To define a method that is static', 0);
+
+set @question_id = (select id from question where content = 'Explain the use of the `sealed` keyword in C#.'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) To prevent a class from being inherited', 0),
+(@question_id, 'B) To prevent a method from being overridden', 0),
+(@question_id, 'C) To prevent a class from being instantiated', 0),
+(@question_id, 'D) Both A and B', 1);
+
+set @question_id = (select id from question where content = 'What is the difference between `public`, `private`, `protected`, and `internal` access modifiers?'
+					and lesson_id = @lesson_id);
+INSERT INTO answer (question_id, content, is_correct) VALUES
+(@question_id, 'A) `public` allows access from anywhere; `private` restricts access to the containing class; `protected` allows access within the containing class and derived classes; `internal` allows access within the same assembly', 1),
+(@question_id, 'B) `public` allows access from anywhere; `private` restricts access to the containing class; `protected` allows access within the containing class and derived classes; `internal` allows access within the same namespace', 0),
+(@question_id, 'C) `public` allows access from anywhere; `private` restricts access to the containing class; `protected` allows access within the containing class and derived classes; `internal` allows access within the same project', 0),
+(@question_id, 'D) `public` allows access from anywhere; `private` restricts access to the containing class; `protected` allows access within the containing class and derived classes; `internal` allows access within the same solution', 0);
 
 insert into material(uri)
-values ('assets\\material\\Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),
-       ('assets\\material\\Chapter 02 - C# Programming.pptx');
+values ('assets/material/Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),
+       ('assets/material/Chapter 02 - C# Programming.pptx');
 
 insert into material_lesson (material_id, lesson_id)
 values ((select id
          from material
-         where uri = 'assets\\material\\Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),
+         where uri = 'assets/material/Chapter 01 - Introduction to .NET Platform - Visual Studio.NET.pptx'),
         (SELECT id FROM lesson WHERE name = 'Introduction to .NET Platform - Visual Studio.NET')),
 
-       ((select id from material where uri = 'assets\\material\\Chapter 02 - C# Programming.pptx'),
+       ((select id from material where uri = 'assets/material/Chapter 02 - C# Programming.pptx'),
         (SELECT id FROM lesson WHERE name = 'C# Programming'));
 
-update user
-set avt = '../assets/img/admin1.png'
-where email = 'admin1@email.com';
-
 -- Insert sample flashcard sets with created_by column
 INSERT INTO flashcard_set (name, subject_id, created_by)
 VALUES ('PRN: OOP Basics', (SELECT id FROM subject WHERE code = 'PRN212'),
@@ -426,4 +579,4 @@
 select *
 from flashcard_question;
 select *
-from subject;
+from subject;
\ No newline at end of file
Index: web/WEB-INF/views/question/newquestion.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@page isELIgnored=\"false\" %>\r\n<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\r\n<html\r\n    lang=\"en\"\r\n    class=\"light-style layout-menu-fixed layout-compact\"\r\n    dir=\"ltr\"\r\n    data-theme=\"theme-default\"\r\n    data-assets-path=\"../assets/\"\r\n    data-template=\"vertical-menu-template-free\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta\r\n            name=\"viewport\"\r\n            content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\" />\r\n\r\n        <title>New Question</title>\r\n\r\n        <meta name=\"description\" content=\"\" />\r\n\r\n        <!-- Favicon -->\r\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"../assets/img/favicon/favicon.ico\" />\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n        <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap\"\r\n            rel=\"stylesheet\" />\r\n\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/fonts/boxicons.css\" />\r\n\r\n        <!-- Core CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/core.css\" class=\"template-customizer-core-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/css/theme-default.css\" class=\"template-customizer-theme-css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/css/demo.css\" />\r\n\r\n        <!-- Vendors CSS -->\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css\" />\r\n        <link rel=\"stylesheet\" href=\"../assets/vendor/libs/apex-charts/apex-charts.css\" />\r\n\r\n        <!-- Page CSS -->\r\n\r\n        <!-- Favicon -->\r\n        <link href=\"../img/favicon.ico\" rel=\"icon\">\r\n\r\n        <!-- Google Web Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\"> \r\n\r\n        <!-- Font Awesome -->\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Libraries Stylesheet -->\r\n        <link href=\"../lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Customized Bootstrap Stylesheet -->\r\n        <link href=\"../css/style.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Helpers -->\r\n        <script src=\"../assets/vendor/js/helpers.js\"></script>\r\n        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->\r\n        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->\r\n        <script src=\"../assets/js/config.js\"></script>\r\n        <script>\r\n            function setActiveTab(currentPage) {\r\n                if (currentPage === 'enterData') {\r\n                    document.getElementById(\"navs-pills-enter-data\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = true;\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonImportFile\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonImportFile\").ariaSelected = false;\r\n                } else {\r\n                    document.getElementById(\"navs-pills-import-file\").className = \"tab-pane fade show active\";\r\n                    document.getElementById(\"buttonImportFile\").ariaSelected = true;\r\n                    document.getElementById(\"buttonImportFile\").className = \"nav-link active\";\r\n                    document.getElementById(\"buttonEnterData\").className = \"nav-link\";\r\n                    document.getElementById(\"buttonEnterData\").ariaSelected = false;\r\n                }\r\n            }\r\n            function getActiveTab() {\r\n                if (document.getElementById(\"buttonImportFile\").className === 'nav-link active') {\r\n                    return \"inportFile\";\r\n                } else {\r\n                    return \"enterData\";\r\n                }\r\n            }\r\n            function setActiveTabForRefresh() {\r\n                document.getElementById('currentPage').value = getActiveTab();\r\n            }\r\n        </script>\r\n\r\n    </head>\r\n\r\n    <body onload=\"setActiveTab('${requestScope.currentPage}');\">\r\n        <!-- Layout wrapper -->\r\n        <div class=\"layout-wrapper layout-content-navbar\">\r\n            <div class=\"layout-container\">\r\n                <!-- Menu -->\r\n\r\n                <jsp:include page=\"/WEB-INF/common/sider.jsp\"/>\r\n                <!-- / Menu -->\r\n\r\n                <!-- Layout container -->\r\n                <div class=\"layout-page\">\r\n\r\n                    <!-- Content wrapper -->\r\n                    <div class=\"content-wrapper\">\r\n                        <!-- Content -->\r\n                        <jsp:include page=\"/WEB-INF/common/header.jsp\"/>\r\n\r\n                        <div class=\"container-xxl flex-grow-1 container-p-y\">\r\n\r\n\r\n                            <h4 class=\"py-3 mb-4\"><span class=\"text-muted fw-light\">Question /</span> New question</h4>\r\n\r\n                            <form id=\"newQuestionForm\" method=\"post\" action=\"${pageContext.request.contextPath}/question/new\" enctype=\"multipart/form-data\">\r\n                                <div style=\"width: 100%;\">\r\n                                    <input type=\"hidden\" name=\"action\" id=\"action\"/>\r\n                                    <input type=\"hidden\" name=\"deletedId\" id=\"deletedId\"/>\r\n                                    <input type=\"hidden\" name=\"currentPage\" id=\"currentPage\"/>\r\n                                    <div class=\"row\" style=\"width: 100%\">\r\n                                        <div class=\"input-group mr-3 mb-4\">\r\n                                            <label for=\"subjectselect\">Subject: </label>\r\n                                            <select style=\"height: 38px;\" name=\"subjectId\" id=\"subjectselect\" class=\"mr-3 ml-3\" \r\n                                                    onchange=\"document.getElementById('action').value = 'changeSubjectAndLesson';\r\n                                                            setActiveTabForRefresh();\r\n                                                            document.getElementById('newQuestionForm').submit();\"\r\n                                                    onmousedown=\"if (this.options.length > 5) {\r\n                                                                this.size = 5;\r\n                                                                document.getElementById('subjectselect').style.height = '115px';\r\n                                                            }\"  \r\n                                                    onblur=\"this.size = 0;\r\n                                                            document.getElementById('subjectselect').style.height = '38px';\">\r\n                                                <c:if test=\"${(requestScope.subject == null)}\">\r\n                                                    <option selected>All subjects</option>\r\n                                                </c:if>\r\n                                                <c:if test=\"${(requestScope.subject != null)}\">\r\n                                                    <option>All subjects</option>\r\n                                                </c:if>\r\n                                                <c:forEach items=\"${requestScope.subjectList}\" var=\"subject\">\r\n                                                    <c:if test=\"${subject.id == requestScope.subject.id}\">\r\n                                                        <option value=\"${subject.id}\" selected>${subject.code}</option>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${subject.id != requestScope.subject.id}\">\r\n                                                        <option value=\"${subject.id}\">${subject.code}</option>\r\n                                                    </c:if>\r\n                                                </c:forEach>\r\n                                            </select>\r\n                                            <label for=\"lessonSelect\">Lesson: </label>\r\n                                            <select style=\"height: 38px;\" name=\"lessonId\" id=\"lessonSelect\" class=\"mr-3 ml-3\" \r\n                                                    onchange=\"document.getElementById('action').value = 'changeSubjectAndLesson';\r\n                                                            setActiveTabForRefresh();\r\n                                                            document.getElementById('newQuestionForm').submit();\"\r\n                                                    onmousedown=\"if (this.options.length > 5) {\r\n                                                                this.size = 5;\r\n                                                                document.getElementById('lessonSelect').style.height = '115px';\r\n                                                            }\"  \r\n                                                    onblur=\"this.size = 0;\r\n                                                            document.getElementById('lessonSelect').style.height = '38px';\">\r\n                                                <c:if test=\"${(requestScope.lesson == null)}\">\r\n                                                    <option selected>All lessons</option>\r\n                                                </c:if>\r\n                                                <c:if test=\"${(requestScope.lesson != null)}\">\r\n                                                    <option>All lessons</option>\r\n                                                </c:if>\r\n                                                <c:forEach items=\"${requestScope.lessonList}\" var=\"lesson\">\r\n                                                    <c:if test=\"${lesson.id == requestScope.lesson.id}\">\r\n                                                        <option value=\"${lesson.id}\" selected>${lesson.name}</option>\r\n                                                    </c:if>\r\n                                                    <c:if test=\"${lesson.id != requestScope.lesson.id}\">\r\n                                                        <option value=\"${lesson.id}\">${lesson.name}</option>\r\n                                                    </c:if>\r\n                                                </c:forEach>\r\n                                            </select>\r\n                                            <c:if test=\"${requestScope.lessonErr != null}\">\r\n                                                <h5 style=\"color: red;\">${requestScope.lessonErr}</h5>\r\n                                            </c:if>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"nav-align-top mb-4\">\r\n                                                <ul class=\"nav nav-pills mb-3\" role=\"tablist\">\r\n                                                    <li class=\"nav-item\">\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            id=\"buttonEnterData\"\r\n                                                            role=\"tab\"\r\n                                                            data-bs-toggle=\"tab\"\r\n                                                            data-bs-target=\"#navs-pills-enter-data\"\r\n                                                            aria-controls=\"navs-pills-enter-data\">\r\n                                                            Enter question data\r\n                                                        </button>\r\n                                                    </li>\r\n                                                    <li class=\"nav-item\">\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            id=\"buttonImportFile\"\r\n                                                            role=\"tab\"\r\n                                                            data-bs-toggle=\"tab\"\r\n                                                            data-bs-target=\"#navs-pills-import-file\"\r\n                                                            aria-controls=\"navs-pills-import-file\">\r\n                                                            Import with .xls file\r\n                                                        </button>\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <div class=\"tab-content\" style=\"width: 100%;\">\r\n                                                    <div class=\"tab-pane fade\" id=\"navs-pills-enter-data\" role=\"tabpanel\">\r\n                                                        <div class=\"col-xxl\">\r\n                                                            <div class=\"card mb-4\">\r\n                                                                <div class=\"card-header d-flex align-items-center justify-content-between mb-3\">\r\n                                                                    <small class=\"text-muted float-end\">Input question and answers content</small>\r\n                                                                </div>\r\n                                                                <div class=\"card-body\">\r\n                                                                    <div class=\"row mb-3\">\r\n                                                                        <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname2\">Question</label>\r\n                                                                        <div class=\"col-sm-10\">\r\n                                                                            <textarea name=\"question\" id=\"basic-icon-default-fullname2\"\r\n                                                                                      class=\"form-control border-top-0 border-right-0 border-left-0 p-0\" \r\n                                                                                      rows=\"5\" placeholder=\"Question content\">${requestScope.question.content}</textarea>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <c:if test=\"${requestScope.questionErr != null}\">\r\n                                                                        <div class=\"row mb-3\">\r\n                                                                            <div class=\"col-sm-2\"></div>\r\n                                                                            <div class=\"col-sm-10\">\r\n                                                                                <h5 style=\"color: red;\">${requestScope.questionErr}</h5>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </c:if>\r\n                                                                    <c:if test=\"${requestScope.answerErr != null}\">\r\n                                                                        <div class=\"row mb-3\">\r\n                                                                            <div class=\"col-sm-2\"></div>\r\n                                                                            <div class=\"col-sm-10\">\r\n                                                                                <h5 style=\"color: red;\">${requestScope.answerErr}</h5>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </c:if>\r\n                                                                    <c:forEach items=\"${requestScope.answerList}\" var=\"answer\">\r\n                                                                        <div class=\"row mb-3\">\r\n                                                                            <label class=\"col-sm-2 col-form-label\" for=\"basic-icon-default-fullname\">Answer</label>\r\n\r\n                                                                            <div class=\"col-sm-9\">\r\n                                                                                <div class=\"input-group\">\r\n\r\n                                                                                    <c:if test=\"${answer.isCorrect}\">\r\n                                                                                        <span style=\"height: 38px; width: 38px;\" class=\"input-group-text\"></span>\r\n                                                                                        <input\r\n                                                                                            class=\"form-check-input mt-0 ml-2\"\r\n                                                                                            type=\"checkbox\" style=\"align-self: center; \"\r\n                                                                                            name=\"${answer.id}isCorrect\"\r\n                                                                                            checked/>\r\n                                                                                    </c:if>\r\n                                                                                    <c:if test=\"${!answer.isCorrect}\">\r\n                                                                                        <span style=\"height: 38px; width: 38px;\" class=\"input-group-text\"></span>\r\n                                                                                        <input\r\n                                                                                            class=\"form-check-input mt-0 ml-2\"\r\n                                                                                            name=\"${answer.id}isCorrect\"\r\n                                                                                            type=\"checkbox\" style=\"align-self: center; \"/>\r\n                                                                                    </c:if>\r\n\r\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"basic-icon-default-fullname\"\r\n                                                                                           name=\"${answer.id}\"\r\n                                                                                           value=\"${answer.content}\"/>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <c:if test=\"${requestScope.answerList.size() > 2}\">\r\n                                                                                <div class=\"col-sm-1\">\r\n                                                                                    <button style=\"height: 38px; width: 38px;\" class=\"btn btn-icon\"\r\n                                                                                            type=\"submit\"\r\n                                                                                            onclick=\"document.getElementById('action').value = 'deleteAnswer';\r\n                                                                                                    document.getElementById('deletedId').value = ${answer.id};\">\r\n                                                                                        <i style=\"color: red;\" class=\"bx bx-trash\"></i>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                            </c:if>\r\n                                                                        </div>\r\n                                                                    </c:forEach>\r\n                                                                    <div class=\"row mb-3\">\r\n                                                                        <div class=\"col-sm-2\"></div>\r\n                                                                        <div class=\"col-sm-10\">\r\n                                                                            <button type=\"submit\" style=\"height: 38px; width: 38px;\" \r\n                                                                                    class=\"btn btn-icon btn-primary\"\r\n                                                                                    onclick=\"document.getElementById('action').value = 'addAnswer';\">\r\n                                                                                <i class=\"bx bx-plus\"></i>\r\n                                                                            </button>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"row mb-3\">\r\n                                                                        <div class=\"col-sm-2\"></div>\r\n                                                                        <div class=\"col-sm-10\">\r\n                                                                            <button style=\"height: 38px;\" class=\"btn btn-primary\"\r\n                                                                                    type=\"submit\"\r\n                                                                                    onclick=\"document.getElementById('action').value = 'insertQuestion'\">\r\n                                                                                Add question\r\n                                                                            </button>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"tab-pane fade\" id=\"navs-pills-import-file\" role=\"tabpanel\">\r\n                                                        <div class=\"row mb-3\">\r\n                                                            <label for=\"formFile\" class=\"form-label\">Choose an excel file</label>\r\n                                                            <div class=\"col-sm-9\">\r\n                                                                <input class=\"form-control\" type=\"file\" id=\"formFile\"\r\n                                                                       accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\"\r\n                                                                       name=\"file\"\r\n                                                                       style=\"width: 100%;\"/>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-3\">\r\n                                                                <button\r\n                                                                    style=\"height: 38px;\" class=\"btn btn-primary ml-3\"\r\n                                                                    type=\"submit\"\r\n                                                                    onclick=\"document.getElementById('action').value = 'insertQuestionByFile'\">\r\n                                                                    Import file\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <c:if test=\"${(requestScope.fileErr != null) && (!requestScope.fileErr.isEmpty())}\">\r\n                                                            <div class=\"row mb-3\">\r\n                                                                <h5 style=\"color: red;\">Import file failed</h5>\r\n                                                            </div>\r\n                                                        </c:if>\r\n                                                        <p>\r\n                                                            Please follow this template to import question with Excel file\r\n                                                            <a class=\"btn btn-info\" href=\"template.xlsx\"\r\n                                                               style=\"color: white; text-decoration: none; height: 38px;\" download>Download template</a>\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <hr class=\"my-5\" />\r\n\r\n\r\n\r\n                        </div>\r\n                        <!-- / Content -->\r\n\r\n                        <div class=\"content-backdrop fade\"></div>\r\n                        <jsp:include page=\"/WEB-INF/common/footer.jsp\"/>\r\n                    </div>\r\n                    <!-- Content wrapper -->\r\n\r\n\r\n                </div>\r\n                <!-- / Layout page -->\r\n            </div>\r\n        </div>\r\n        <!-- / Layout wrapper -->\r\n\r\n\r\n\r\n        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"../lib/easing/easing.min.js\"></script>\r\n        <script src=\"../lib/waypoints/waypoints.min.js\"></script>\r\n        <script src=\"../lib/counterup/counterup.min.js\"></script>\r\n        <script src=\"../lib/owlcarousel/owl.carousel.min.js\"></script>\r\n\r\n        <!-- Template Javascript -->\r\n        <script src=\"../js/main.js\"></script>\r\n\r\n        <!-- Core JS -->\r\n        <!-- build:js ../assets/vendor/js/core.js -->\r\n\r\n        <script src=\"../assets/vendor/libs/jquery/jquery.js\"></script>\r\n        <script src=\"../assets/vendor/libs/popper/popper.js\"></script>\r\n        <script src=\"../assets/vendor/js/bootstrap.js\"></script>\r\n        <script src=\"../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js\"></script>\r\n        <script src=\"../assets/vendor/js/menu.js\"></script>\r\n\r\n        <!-- endbuild -->\r\n\r\n        <!-- Vendors JS -->\r\n        <script src=\"../assets/vendor/libs/apex-charts/apexcharts.js\"></script>\r\n\r\n        <!-- Main JS -->\r\n        <script src=\"../assets/js/main.js\"></script>\r\n\r\n        <!-- Page JS -->\r\n        <script src=\"../assets/js/dashboards-analytics.js\"></script>\r\n\r\n        <!-- Place this tag in your head or just before your close body tag. -->\r\n        <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/WEB-INF/views/question/newquestion.jsp b/web/WEB-INF/views/question/newquestion.jsp
--- a/web/WEB-INF/views/question/newquestion.jsp	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/web/WEB-INF/views/question/newquestion.jsp	(date 1721635964782)
@@ -114,16 +114,19 @@
 
                             <h4 class="py-3 mb-4"><span class="text-muted fw-light">Question /</span> New question</h4>
 
-                            <form id="newQuestionForm" method="post" action="${pageContext.request.contextPath}/question/new" enctype="multipart/form-data">
+                            <form id="newQuestionForm" method="post" action="${pageContext.request.contextPath}/question/new" 
+                                  enctype="multipart/form-data">
                                 <div style="width: 100%;">
                                     <input type="hidden" name="action" id="action"/>
                                     <input type="hidden" name="deletedId" id="deletedId"/>
                                     <input type="hidden" name="currentPage" id="currentPage"/>
+                                    <input type="hidden" name="change" id="change"/>
                                     <div class="row" style="width: 100%">
                                         <div class="input-group mr-3 mb-4">
                                             <label for="subjectselect">Subject: </label>
                                             <select style="height: 38px;" name="subjectId" id="subjectselect" class="mr-3 ml-3" 
-                                                    onchange="document.getElementById('action').value = 'changeSubjectAndLesson';
+                                                    onchange="document.getElementById('change').value = 'subject';
+                                                            document.getElementById('action').value = 'changeSubjectAndLesson';
                                                             setActiveTabForRefresh();
                                                             document.getElementById('newQuestionForm').submit();"
                                                     onmousedown="if (this.options.length > 5) {
@@ -149,7 +152,8 @@
                                             </select>
                                             <label for="lessonSelect">Lesson: </label>
                                             <select style="height: 38px;" name="lessonId" id="lessonSelect" class="mr-3 ml-3" 
-                                                    onchange="document.getElementById('action').value = 'changeSubjectAndLesson';
+                                                    onchange="document.getElementById('change').value = 'lesson';
+                                                            document.getElementById('action').value = 'changeSubjectAndLesson';
                                                             setActiveTabForRefresh();
                                                             document.getElementById('newQuestionForm').submit();"
                                                     onmousedown="if (this.options.length > 5) {
@@ -337,7 +341,7 @@
                             </form>
                             <hr class="my-5" />
 
-
+                            <a class="btn btn-primary" href="${pageContext.request.contextPath}/question">Back</a>
 
                         </div>
                         <!-- / Content -->
Index: src/java/controller/google/LoginGoogleServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\r\n * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template\r\n */\r\npackage controller.google;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.google.GooglePojo;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n/**\r\n * @author PC\r\n */\r\n@WebServlet(\"/login-google\")\r\npublic class LoginGoogleServlet extends HttpServlet {\r\n\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    public LoginGoogleServlet() {\r\n        super();\r\n    }\r\n\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        String code = request.getParameter(\"code\");\r\n        if (code == null || code.isEmpty()) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else {\r\n            String accessToken = GoogleUtils.getToken(code);\r\n            GooglePojo googlePojo = GoogleUtils.getUserInfo(accessToken);\r\n            String email = googlePojo.getEmail();\r\n            UserDAO userDAO = new UserDAO();\r\n            try {\r\n                HttpSession session = request.getSession();\r\n                if (userDAO.checkEmailExist(email)) {\r\n                    // email đã tồn tại trong database\r\n                    User user = new User();\r\n                    user = userDAO.loginGoogle(email);\r\n                    session.setAttribute(\"user\", user);\r\n                    RequestDispatcher rd = request.getRequestDispatcher(\"dashboard\");\r\n                    rd.forward(request, response);\r\n                } else {\r\n                    // email chưa tồn tại trong database\r\n                    session.setAttribute(\"email\", email);\r\n                    response.sendRedirect(\"set-password.jsp\");\r\n                }\r\n            } catch (SQLException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doGet(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Handles Google Login\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/google/LoginGoogleServlet.java b/src/java/controller/google/LoginGoogleServlet.java
--- a/src/java/controller/google/LoginGoogleServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/google/LoginGoogleServlet.java	(date 1721635964773)
@@ -13,7 +13,7 @@
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
 import model.google.GooglePojo;
-import model.user.User;
+import model.User;
 
 import java.io.IOException;
 import java.sql.SQLException;
Index: src/java/dal/MaterialDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dal;\r\n\r\nimport model.Material;\r\nimport java.io.Serializable;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\n\r\npublic class MaterialDAO extends DBContext implements Serializable {\r\n\r\n    public MaterialDAO() {\r\n    }\r\n\r\n    private Material getMaterialInfo(ResultSet rs) throws SQLException {\r\n        Material m = new Material();\r\n\r\n        m.setId(rs.getInt(\"id\"));\r\n        String uri = rs.getString(\"uri\");\r\n        m.setUri(uri);\r\n\r\n        String[] parts = uri.split(\"/\");\r\n        m.setName(parts[parts.length - 1]);\r\n\r\n        return m;\r\n    }\r\n\r\n    public ArrayList<Material> getAllMaterialOfALesson(int lessonId) {\r\n        ArrayList<Material> ret = new ArrayList<>();\r\n        String sql = \"select * from material where id in (\"\r\n                + \"select material_id from material_lesson where lesson_id = ?);\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, lessonId);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Material m = getMaterialInfo(rs);\r\n                ret.add(m);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public boolean isMaterialExist(int lessonId, String uri)\r\n            throws SQLException {\r\n        String sql = \"select m.uri as uri \"\r\n                + \"from material m join material_lesson ml where \"\r\n                + \"m.id = ml.material_id \"\r\n                + \"and uri = ? \"\r\n                + \"and ml.lesson_id = ?; \";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, uri);\r\n        st.setInt(2, lessonId);\r\n        ResultSet rs = st.executeQuery();\r\n        if (rs.next()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private void insertIntoMaterial(String uri) throws SQLException {\r\n        String sql = \"insert into material(uri) values (?);\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, uri);\r\n        st.execute();\r\n    }\r\n\r\n    private void insertIntoMaterial_Lesson(int lessonId, String uri) throws SQLException {\r\n        String sql = \"insert into material_lesson(lesson_id, material_id)\"\r\n                + \"values (?,\"\r\n                + \"(select id from material where uri = ?))\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, lessonId);\r\n        st.setString(2, uri);\r\n        st.execute();\r\n    }\r\n\r\n    public void insertMaterial(int lessonId, String uri) throws SQLException {\r\n        insertIntoMaterial(uri);\r\n        insertIntoMaterial_Lesson(lessonId, uri);\r\n    }\r\n\r\n    public void removeFromMaterial_Lesson(int lessonId, int materialId) throws SQLException {\r\n        String sql = \"delete from material_lesson where\"\r\n                + \" lesson_id = ? and material_id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, lessonId);\r\n        st.setInt(2, materialId);\r\n        st.execute();\r\n    }\r\n\r\n    public boolean isMaterialUsed(int materialId) throws SQLException {\r\n        String sql = \"select * from material_lesson where material_id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, materialId);\r\n        ResultSet rs = st.executeQuery();\r\n        return rs.next();\r\n    }\r\n\r\n    public Material getMaterialMatchId(int materialId) throws SQLException {\r\n        String sql = \"select * from material where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, materialId);\r\n        ResultSet rs = st.executeQuery();\r\n        if (rs.next()) {\r\n            return getMaterialInfo(rs);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void removeMaterial(Material m) throws SQLException {\r\n        String sql = \"delete from material where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        \r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/dal/MaterialDAO.java b/src/java/dal/MaterialDAO.java
--- a/src/java/dal/MaterialDAO.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/dal/MaterialDAO.java	(date 1721635964778)
@@ -113,7 +113,8 @@
     public void removeMaterial(Material m) throws SQLException {
         String sql = "delete from material where id = ?;";
         PreparedStatement st = connection.prepareStatement(sql);
-        
+        st.setInt(1, m.getId());
+        st.execute();
     }
 
 }
Index: nbproject/project.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>annotation.processing.enabled=true\r\nannotation.processing.enabled.in.editor=true\r\nannotation.processing.processors.list=\r\nannotation.processing.run.all.processors=true\r\nannotation.processing.source.output=${build.generated.sources.dir}/ap-source-output\r\nbuild.classes.dir=${build.web.dir}/WEB-INF/classes\r\nbuild.classes.excludes=**/*.java,**/*.form\r\nbuild.dir=build\r\nbuild.generated.dir=${build.dir}/generated\r\nbuild.generated.sources.dir=${build.dir}/generated-sources\r\nbuild.test.classes.dir=${build.dir}/test/classes\r\nbuild.test.results.dir=${build.dir}/test/results\r\nbuild.web.dir=${build.dir}/web\r\nbuild.web.excludes=${build.classes.excludes}\r\nclient.urlPart=\r\ncompile.jsps=false\r\nconf.dir=${source.root}/conf\r\ndebug.classpath=${build.classes.dir}:${javac.classpath}\r\ndebug.test.classpath=\\\r\n    ${run.test.classpath}\r\ndisplay.browser=true\r\n# Files to be excluded from distribution war\r\ndist.archive.excludes=\r\ndist.dir=dist\r\ndist.ear.war=${dist.dir}/${war.ear.name}\r\ndist.javadoc.dir=${dist.dir}/javadoc\r\ndist.war=${dist.dir}/${war.name}\r\nendorsed.classpath=\r\nexcludes=\r\nfile.reference.activation-1.1.1.jar=lib\\\\activation-1.1.1.jar\r\nfile.reference.commons-codec-1.15.jar=lib\\\\xls\\\\commons-codec-1.15.jar\r\nfile.reference.commons-collections4-4.4.jar=lib\\\\xls\\\\commons-collections4-4.4.jar\r\nfile.reference.commons-compress-1.21.jar=lib\\\\xls\\\\commons-compress-1.21.jar\r\nfile.reference.commons-io-2.11.0.jar=lib\\\\xls\\\\commons-io-2.11.0.jar\r\nfile.reference.commons-logging-1.2.jar=lib/commons-logging-1.2.jar\r\nfile.reference.commons-logging-1.2.jar-1=lib\\\\xls\\\\commons-logging-1.2.jar\r\nfile.reference.commons-math3-3.6.1.jar=lib\\\\xls\\\\commons-math3-3.6.1.jar\r\nfile.reference.curvesapi-1.07.jar=lib\\\\xls\\\\curvesapi-1.07.jar\r\nfile.reference.fluent-hc-4.5.5.jar=lib/fluent-hc-4.5.5.jar\r\nfile.reference.gson-2.8.2.jar=lib/gson-2.8.2.jar\r\nfile.reference.httpclient-4.5.5.jar=lib/httpclient-4.5.5.jar\r\nfile.reference.httpcore-4.4.9.jar=lib/httpcore-4.4.9.jar\r\nfile.reference.jakarta.activation-2.0.1.jar=lib\\\\xls\\\\jakarta.activation-2.0.1.jar\r\nfile.reference.jakarta.xml.bind-api-3.0.1.jar=lib\\\\xls\\\\jakarta.xml.bind-api-3.0.1.jar\r\nfile.reference.javax.activation-1.2.0.jar=lib//javax.activation-1.2.0.jar\r\nfile.reference.javax.mail.jar=lib/javax.mail.jar\r\nfile.reference.log4j-api-2.18.0.jar=lib\\\\xls\\\\log4j-api-2.18.0.jar\r\nfile.reference.mysql-connector-j-8.4.0.jar=lib/mysql-connector-j-8.4.0.jar\r\nfile.reference.jakarta.servlet.jsp.jstl-2.0.0.jar=lib/jakarta.servlet.jsp.jstl-2.0.0.jar\r\nfile.reference.jakarta.servlet.jsp.jstl-api-2.0.0.jar=lib/jakarta.servlet.jsp.jstl-api-2.0.0.jar\r\nfile.reference.json-20240303.jar=lib/json-20240303.jar\r\nfile.reference.mysql-connector-j-8.4.0.jar=lib/mysql-connector-j-8.4.0.jar\r\nfile.reference.poi-5.2.3.jar=lib\\\\xls\\\\poi-5.2.3.jar\r\nfile.reference.poi-examples-5.2.3.jar=lib\\\\xls\\\\poi-examples-5.2.3.jar\r\nfile.reference.poi-excelant-5.2.3.jar=lib\\\\xls\\\\poi-excelant-5.2.3.jar\r\nfile.reference.poi-javadoc-5.2.3.jar=lib\\\\xls\\\\poi-javadoc-5.2.3.jar\r\nfile.reference.poi-ooxml-5.2.3.jar=lib\\\\xls\\\\poi-ooxml-5.2.3.jar\r\nfile.reference.poi-ooxml-full-5.2.3.jar=lib\\\\xls\\\\poi-ooxml-full-5.2.3.jar\r\nfile.reference.poi-ooxml-lite-5.2.3.jar=lib\\\\xls\\\\poi-ooxml-lite-5.2.3.jar\r\nfile.reference.poi-scratchpad-5.2.3.jar=lib\\\\xls\\\\poi-scratchpad-5.2.3.jar\r\nfile.reference.restfb-2.3.0.jar=lib/restfb-2.3.0.jar\r\nfile.reference.slf4j-api-1.7.36.jar=lib\\\\xls\\\\slf4j-api-1.7.36.jar\r\nfile.reference.SparseBitSet-1.2.jar=lib\\\\xls\\\\SparseBitSet-1.2.jar\r\nfile.reference.xmlbeans-5.1.1.jar=lib\\\\xls\\\\xmlbeans-5.1.1.jar\r\nincludes=**\r\nj2ee.compile.on.save=true\r\nj2ee.copy.static.files.on.save=true\r\nj2ee.deploy.on.save=true\r\nj2ee.platform=10-web\r\nj2ee.platform.classpath=${j2ee.server.home}/bin/tomcat-juli.jar:${j2ee.server.home}/lib/annotations-api.jar:${j2ee.server.home}/lib/catalina-ant.jar:${j2ee.server.home}/lib/catalina-ha.jar:${j2ee.server.home}/lib/catalina-ssi.jar:${j2ee.server.home}/lib/catalina-storeconfig.jar:${j2ee.server.home}/lib/catalina-tribes.jar:${j2ee.server.home}/lib/catalina.jar:${j2ee.server.home}/lib/ecj-4.27.jar:${j2ee.server.home}/lib/el-api.jar:${j2ee.server.home}/lib/jakartaee-migration-1.0.8-shaded.jar:${j2ee.server.home}/lib/jasper-el.jar:${j2ee.server.home}/lib/jasper.jar:${j2ee.server.home}/lib/jaspic-api.jar:${j2ee.server.home}/lib/jsp-api.jar:${j2ee.server.home}/lib/servlet-api.jar:${j2ee.server.home}/lib/tomcat-api.jar:${j2ee.server.home}/lib/tomcat-coyote.jar:${j2ee.server.home}/lib/tomcat-dbcp.jar:${j2ee.server.home}/lib/tomcat-i18n-cs.jar:${j2ee.server.home}/lib/tomcat-i18n-de.jar:${j2ee.server.home}/lib/tomcat-i18n-es.jar:${j2ee.server.home}/lib/tomcat-i18n-fr.jar:${j2ee.server.home}/lib/tomcat-i18n-ja.jar:${j2ee.server.home}/lib/tomcat-i18n-ko.jar:${j2ee.server.home}/lib/tomcat-i18n-pt-BR.jar:${j2ee.server.home}/lib/tomcat-i18n-ru.jar:${j2ee.server.home}/lib/tomcat-i18n-zh-CN.jar:${j2ee.server.home}/lib/tomcat-jdbc.jar:${j2ee.server.home}/lib/tomcat-jni.jar:${j2ee.server.home}/lib/tomcat-util-scan.jar:${j2ee.server.home}/lib/tomcat-util.jar:${j2ee.server.home}/lib/tomcat-websocket.jar:${j2ee.server.home}/lib/websocket-api.jar:${j2ee.server.home}/lib/websocket-client-api.jar\r\nj2ee.server.type=Tomcat\r\njar.compress=false\r\njavac.classpath=\\\r\n    ${file.reference.commons-logging-1.2.jar}:\\\r\n    ${file.reference.fluent-hc-4.5.5.jar}:\\\r\n    ${file.reference.gson-2.8.2.jar}:\\\r\n    ${file.reference.httpclient-4.5.5.jar}:\\\r\n    ${file.reference.httpcore-4.4.9.jar}:\\\r\n    ${file.reference.mysql-connector-j-8.4.0.jar}:\\\r\n    ${file.reference.jakarta.servlet.jsp.jstl-2.0.0.jar}:\\\r\n    ${file.reference.jakarta.servlet.jsp.jstl-api-2.0.0.jar}:\\\r\n    ${file.reference.json-20240303.jar}:\\\r\n    ${file.reference.restfb-2.3.0.jar}:\\\r\n    ${file.reference.javax.mail.jar}:\\\r\n    ${file.reference.activation-1.1.1.jar}:\\\r\n    ${file.reference.javax.activation-1.2.0.jar}:\\\r\n    ${file.reference.SparseBitSet-1.2.jar}:\\\r\n    ${file.reference.commons-codec-1.15.jar}:\\\r\n    ${file.reference.commons-collections4-4.4.jar}:\\\r\n    ${file.reference.commons-compress-1.21.jar}:\\\r\n    ${file.reference.commons-io-2.11.0.jar}:\\\r\n    ${file.reference.commons-logging-1.2.jar-1}:\\\r\n    ${file.reference.commons-math3-3.6.1.jar}:\\\r\n    ${file.reference.curvesapi-1.07.jar}:\\\r\n    ${file.reference.jakarta.activation-2.0.1.jar}:\\\r\n    ${file.reference.jakarta.xml.bind-api-3.0.1.jar}:\\\r\n    ${file.reference.log4j-api-2.18.0.jar}:\\\r\n    ${file.reference.poi-5.2.3.jar}:\\\r\n    ${file.reference.poi-examples-5.2.3.jar}:\\\r\n    ${file.reference.poi-excelant-5.2.3.jar}:\\\r\n    ${file.reference.poi-javadoc-5.2.3.jar}:\\\r\n    ${file.reference.poi-ooxml-5.2.3.jar}:\\\r\n    ${file.reference.poi-ooxml-full-5.2.3.jar}:\\\r\n    ${file.reference.poi-ooxml-lite-5.2.3.jar}:\\\r\n    ${file.reference.poi-scratchpad-5.2.3.jar}:\\\r\n    ${file.reference.slf4j-api-1.7.36.jar}:\\\r\n    ${file.reference.xmlbeans-5.1.1.jar}\r\n    ${file.reference.mysql-connector-j-8.4.0.jar}:\\\r\n    ${file.reference.json-20240303.jar}:\\\r\n    ${file.reference.restfb-2.3.0.jar}:\\\r\n    ${file.reference.jakarta.servlet.jsp.jstl-2.0.0.jar}:\\\r\n    ${file.reference.jakarta.servlet.jsp.jstl-api-2.0.0.jar}\r\n# Space-separated list of extra javac options\r\njavac.compilerargs=\r\njavac.debug=true\r\njavac.deprecation=false\r\njavac.processorpath=\\\r\n    ${javac.classpath}\r\njavac.source=17\r\njavac.target=17\r\njavac.test.classpath=\\\r\n    ${javac.classpath}:\\\r\n    ${build.classes.dir}\r\njavac.test.processorpath=\\\r\n    ${javac.test.classpath}\r\njavadoc.additionalparam=\r\njavadoc.author=false\r\njavadoc.encoding=${source.encoding}\r\njavadoc.noindex=false\r\njavadoc.nonavbar=false\r\njavadoc.notree=false\r\njavadoc.preview=true\r\njavadoc.private=false\r\njavadoc.splitindex=true\r\njavadoc.use=true\r\njavadoc.version=false\r\njavadoc.windowtitle=\r\nlib.dir=${web.docbase.dir}/WEB-INF/lib\r\npersistence.xml.dir=${conf.dir}\r\nplatform.active=default_platform\r\nresource.dir=setup\r\nrun.test.classpath=\\\r\n    ${javac.test.classpath}:\\\r\n    ${build.test.classes.dir}\r\n# Space-separated list of JVM arguments used when running a class with a main method or a unit test\r\n# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value):\r\nrunmain.jvmargs=\r\nsource.encoding=UTF-8\r\nsource.root=src\r\nsrc.dir=${source.root}/java\r\ntest.src.dir=test\r\nwar.content.additional=\r\nwar.ear.name=${war.name}\r\nwar.name=se1808-g6.war\r\nweb.docbase.dir=web\r\nwebinf.dir=web/WEB-INF\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/nbproject/project.properties b/nbproject/project.properties
--- a/nbproject/project.properties	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/nbproject/project.properties	(date 1721635964763)
@@ -67,7 +67,7 @@
 j2ee.copy.static.files.on.save=true
 j2ee.deploy.on.save=true
 j2ee.platform=10-web
-j2ee.platform.classpath=${j2ee.server.home}/bin/tomcat-juli.jar:${j2ee.server.home}/lib/annotations-api.jar:${j2ee.server.home}/lib/catalina-ant.jar:${j2ee.server.home}/lib/catalina-ha.jar:${j2ee.server.home}/lib/catalina-ssi.jar:${j2ee.server.home}/lib/catalina-storeconfig.jar:${j2ee.server.home}/lib/catalina-tribes.jar:${j2ee.server.home}/lib/catalina.jar:${j2ee.server.home}/lib/ecj-4.27.jar:${j2ee.server.home}/lib/el-api.jar:${j2ee.server.home}/lib/jakartaee-migration-1.0.8-shaded.jar:${j2ee.server.home}/lib/jasper-el.jar:${j2ee.server.home}/lib/jasper.jar:${j2ee.server.home}/lib/jaspic-api.jar:${j2ee.server.home}/lib/jsp-api.jar:${j2ee.server.home}/lib/servlet-api.jar:${j2ee.server.home}/lib/tomcat-api.jar:${j2ee.server.home}/lib/tomcat-coyote.jar:${j2ee.server.home}/lib/tomcat-dbcp.jar:${j2ee.server.home}/lib/tomcat-i18n-cs.jar:${j2ee.server.home}/lib/tomcat-i18n-de.jar:${j2ee.server.home}/lib/tomcat-i18n-es.jar:${j2ee.server.home}/lib/tomcat-i18n-fr.jar:${j2ee.server.home}/lib/tomcat-i18n-ja.jar:${j2ee.server.home}/lib/tomcat-i18n-ko.jar:${j2ee.server.home}/lib/tomcat-i18n-pt-BR.jar:${j2ee.server.home}/lib/tomcat-i18n-ru.jar:${j2ee.server.home}/lib/tomcat-i18n-zh-CN.jar:${j2ee.server.home}/lib/tomcat-jdbc.jar:${j2ee.server.home}/lib/tomcat-jni.jar:${j2ee.server.home}/lib/tomcat-util-scan.jar:${j2ee.server.home}/lib/tomcat-util.jar:${j2ee.server.home}/lib/tomcat-websocket.jar:${j2ee.server.home}/lib/websocket-api.jar:${j2ee.server.home}/lib/websocket-client-api.jar
+j2ee.platform.classpath=${j2ee.server.home}/bin/tomcat-juli.jar:${j2ee.server.home}/lib/annotations-api.jar:${j2ee.server.home}/lib/catalina-ant.jar:${j2ee.server.home}/lib/catalina-ha.jar:${j2ee.server.home}/lib/catalina-ssi.jar:${j2ee.server.home}/lib/catalina-storeconfig.jar:${j2ee.server.home}/lib/catalina-tribes.jar:${j2ee.server.home}/lib/catalina.jar:${j2ee.server.home}/lib/ecj-4.27.jar:${j2ee.server.home}/lib/el-api.jar:${j2ee.server.home}/lib/jakartaee-migration-1.0.7-shaded.jar:${j2ee.server.home}/lib/jasper-el.jar:${j2ee.server.home}/lib/jasper.jar:${j2ee.server.home}/lib/jaspic-api.jar:${j2ee.server.home}/lib/jsp-api.jar:${j2ee.server.home}/lib/servlet-api.jar:${j2ee.server.home}/lib/tomcat-api.jar:${j2ee.server.home}/lib/tomcat-coyote.jar:${j2ee.server.home}/lib/tomcat-dbcp.jar:${j2ee.server.home}/lib/tomcat-i18n-cs.jar:${j2ee.server.home}/lib/tomcat-i18n-de.jar:${j2ee.server.home}/lib/tomcat-i18n-es.jar:${j2ee.server.home}/lib/tomcat-i18n-fr.jar:${j2ee.server.home}/lib/tomcat-i18n-ja.jar:${j2ee.server.home}/lib/tomcat-i18n-ko.jar:${j2ee.server.home}/lib/tomcat-i18n-pt-BR.jar:${j2ee.server.home}/lib/tomcat-i18n-ru.jar:${j2ee.server.home}/lib/tomcat-i18n-zh-CN.jar:${j2ee.server.home}/lib/tomcat-jdbc.jar:${j2ee.server.home}/lib/tomcat-jni.jar:${j2ee.server.home}/lib/tomcat-util-scan.jar:${j2ee.server.home}/lib/tomcat-util.jar:${j2ee.server.home}/lib/tomcat-websocket.jar:${j2ee.server.home}/lib/websocket-api.jar:${j2ee.server.home}/lib/websocket-client-api.jar
 j2ee.server.type=Tomcat
 jar.compress=false
 javac.classpath=\
Index: src/java/controller/flashcard/FlashcardLearn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.flashcard;\r\n\r\nimport dal.FlashcardDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.flashcard.FlashcardQuestions;\r\nimport model.flashcard.FlashcardAnswer;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\npublic class FlashcardLearn extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n        try {\r\n            FlashcardDAO flashcardDAO = new FlashcardDAO();\r\n            int flashcardSetId = Integer.parseInt(request.getParameter(\"flashcardSetId\"));\r\n            List<FlashcardQuestions> flashcardQuestions = flashcardDAO.getFlashcardQuestions(flashcardSetId);\r\n            List<FlashcardAnswer> allAnswers = flashcardDAO.getSetAnswers(flashcardSetId);\r\n            request.setAttribute(\"flashcardQuestions\", flashcardQuestions);\r\n            request.setAttribute(\"allAnswers\", allAnswers);\r\n            request.getRequestDispatcher(\"/flashcard-learn.jsp\").forward(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Flashcard Learn Servlet\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/flashcard/FlashcardLearn.java b/src/java/controller/flashcard/FlashcardLearn.java
--- a/src/java/controller/flashcard/FlashcardLearn.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/flashcard/FlashcardLearn.java	(date 1721635964771)
@@ -25,7 +25,14 @@
             FlashcardDAO flashcardDAO = new FlashcardDAO();
             int flashcardSetId = Integer.parseInt(request.getParameter("flashcardSetId"));
             List<FlashcardQuestions> flashcardQuestions = flashcardDAO.getFlashcardQuestions(flashcardSetId);
-            List<FlashcardAnswer> allAnswers = flashcardDAO.getSetAnswers(flashcardSetId);
+            List<FlashcardAnswer> allAnswers = flashcardDAO.getFlashcardAnswers();
+
+            if (allAnswers.size() <= 3) {
+                List<FlashcardAnswer> wrongAnswers = flashcardDAO.getFlashcardWrongAnswers(flashcardSetId);
+                allAnswers.addAll(wrongAnswers);
+                allAnswers.addAll(wrongAnswers);
+            }
+
             request.setAttribute("flashcardQuestions", flashcardQuestions);
             request.setAttribute("allAnswers", allAnswers);
             request.getRequestDispatcher("/flashcard-learn.jsp").forward(request, response);
Index: nbproject/private/private.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project-private xmlns=\"http://www.netbeans.org/ns/project-private/1\">\r\n    <editor-bookmarks xmlns=\"http://www.netbeans.org/ns/editor-bookmarks/2\" lastBookmarkId=\"0\"/>\r\n    <open-files xmlns=\"http://www.netbeans.org/ns/projectui-open-files/2\">\r\n        <group>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardTest.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardMatch.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardQuestionServlet.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardUpdate.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/course/CourseNewAnnouncement.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardLearn.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/user/UserDashboardController.java</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/web/WEB-INF/common/header.jsp</file>\r\n            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardEdit.java</file>\r\n        </group>\r\n    </open-files>\r\n</project-private>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/nbproject/private/private.xml b/nbproject/private/private.xml
--- a/nbproject/private/private.xml	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/nbproject/private/private.xml	(date 1721635974861)
@@ -3,15 +3,14 @@
     <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/2" lastBookmarkId="0"/>
     <open-files xmlns="http://www.netbeans.org/ns/projectui-open-files/2">
         <group>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardTest.java</file>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardMatch.java</file>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardQuestionServlet.java</file>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardUpdate.java</file>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/course/CourseNewAnnouncement.java</file>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardLearn.java</file>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/user/UserDashboardController.java</file>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/web/WEB-INF/common/header.jsp</file>
-            <file>file:/C:/Users/PC/Documents/SWP%20documents/se1808-g6/src/java/controller/flashcard/FlashcardEdit.java</file>
+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/controller/UserServlet.java</file>
+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/common/StringFormatter.java</file>
+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/dal/QuestionDAO.java</file>
+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/dal/AnswerDAO.java</file>
+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/common/ReadQuestionFromXlsFile.java</file>
+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/dal/LessonDAO.java</file>
+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/controller/QuestionServlet.java</file>
+            <file>file:/E:/Program%20Files/NetBeansProjects/se1808-g6/src/java/common/FileHandler.java</file>
         </group>
     </open-files>
 </project-private>
Index: src/java/controller/QuestionServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport model.Question;\r\nimport model.Answer;\r\nimport common.ReadQuestionFromXlsFile;\r\nimport dal.*;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport java.sql.SQLException;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.MultipartConfig;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport jakarta.servlet.http.Part;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport model.Lesson;\r\nimport model.user.User;\r\n\r\n@MultipartConfig\r\n@WebServlet(name = \"QuestionServlet\", urlPatterns = {\"/question\", \"/question/details\", \"/question/update\", \"/question/new\"})\r\npublic class QuestionServlet extends HttpServlet {\r\n\r\n    ArrayList<Answer> answerList;\r\n    int lastAnswerId;\r\n    private final int rowPerPage = 6;\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        response.setContentType(\"text/html;charset=UTF-8\");\r\n        try (PrintWriter out = response.getWriter()) {\r\n            /* TODO output your page here. You may use following sample code. */\r\n            out.println(\"<!DOCTYPE html>\");\r\n            out.println(\"<html>\");\r\n            out.println(\"<head>\");\r\n            out.println(\"<title>Servlet QuestionServlet</title>\");\r\n            out.println(\"</head>\");\r\n            out.println(\"<body>\");\r\n            out.println(\"<h1>Servlet QuestionServlet at \" + request.getContextPath() + \"</h1>\");\r\n            out.println(\"</body>\");\r\n            out.println(\"</html>\");\r\n        }\r\n    }\r\n\r\n    QuestionDAO questionDAO = new QuestionDAO();\r\n    AnswerDAO answerDAO = new AnswerDAO();\r\n    LessonDAO lessonDAO = new LessonDAO();\r\n    SubjectDAO subjectDAO = new SubjectDAO();\r\n    ReadQuestionFromXlsFile reader = new ReadQuestionFromXlsFile();\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        doPost(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        UserDAO userDAO = new UserDAO();\r\n        HttpSession session = request.getSession();\r\n        User user = (User) session.getAttribute(\"user\");\r\n        if (user == null) {\r\n            response.sendRedirect(\"login.jsp\");\r\n        } else {\r\n            User u = userDAO.getUserById(user.getId());\r\n            if (u != null && u.getEmail() != null) {\r\n                session.setAttribute(\"user\", u);\r\n                if (user.getRole() > 1) {\r\n                    response.sendRedirect(\"home\");\r\n                } else {\r\n                    String action = request.getServletPath();\r\n                    switch (action) {\r\n                        case \"/question\":\r\n                            viewQuestionList(request, response);\r\n                            break;\r\n                        case \"/question/details\":\r\n                            viewQuestionDetails(request, response);\r\n                            break;\r\n                        case \"/question/update\":\r\n                            updateQuestion(request, response);\r\n                            break;\r\n                        case \"/question/new\":\r\n                            newQuestion(request, response);\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                response.sendRedirect(\"login.jsp\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private ArrayList<Question> getAllMatchKeyWord(ArrayList<Question> list, String keyWord) {\r\n        ArrayList<Question> ret = new ArrayList<>();\r\n        keyWord = keyWord.toLowerCase();\r\n        for (Question q : list) {\r\n            if (q.getContent().toLowerCase().contains(keyWord)) {\r\n                ret.add(q);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private int getNoOfPages(ArrayList<Question> list) {\r\n        int length = list.size();\r\n        if (length == 0) {\r\n            return 1;\r\n        }\r\n        int noOfPages = length / rowPerPage;\r\n        if (length % rowPerPage == 0) {\r\n            return noOfPages;\r\n        }\r\n        return noOfPages + 1;\r\n    }\r\n\r\n    private int getPage(HttpServletRequest request, int noOfPages) {\r\n        String cur = request.getParameter(\"currentPage\");\r\n        if ((cur == null) || (cur.isEmpty())) {\r\n            return 1;\r\n        }\r\n\r\n        int currentPage = Integer.parseInt(cur);\r\n        switch (request.getParameter(\"pageAction\")) {\r\n            case \"firstPage\":\r\n                return 1;\r\n            case \"prevPage\": {\r\n                currentPage--;\r\n                if (currentPage < 1) {\r\n                    return 1;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"nextPage\": {\r\n                currentPage++;\r\n                if (currentPage > noOfPages) {\r\n                    return noOfPages;\r\n                } else {\r\n                    return currentPage;\r\n                }\r\n            }\r\n            case \"lastPage\":\r\n                return noOfPages;\r\n        }\r\n\r\n        String newpage = request.getParameter(\"newPage\");\r\n        if ((newpage != null) && (!newpage.isEmpty())) {\r\n            int newPage = Integer.parseInt(newpage);\r\n            return newPage;\r\n        }\r\n        return currentPage;\r\n\r\n    }\r\n\r\n    private ArrayList<Question> getAllQuestionsOfPage(int page, ArrayList<Question> list) {\r\n        ArrayList<Question> ret = new ArrayList<>();\r\n        int start = rowPerPage * (page - 1) + 1;\r\n        int end = rowPerPage * page;\r\n        if (start < 1) {\r\n            start = 1;\r\n        }\r\n        if (end > list.size()) {\r\n            end = list.size();\r\n        }\r\n\r\n        for (int i = start - 1; i < end; i++) {\r\n            ret.add(list.get(i));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private void viewQuestionList(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n\r\n        ArrayList<Question> list = null;\r\n\r\n        String sid = request.getParameter(\"subjectid\");\r\n        if ((sid != null) && (!sid.equals(\"All subjects\")) && (!sid.isEmpty())) {\r\n            int subjectId = Integer.parseInt(sid);\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n\r\n            String lid = request.getParameter(\"lessonId\");\r\n            if ((lid != null) && (!lid.equals(\"All lessons\")) && (!lid.isEmpty())) {\r\n                int lessonId = Integer.parseInt(lid);\r\n                Lesson lesson = lessonDAO.getLessonMatchId(lessonId);\r\n                if (lesson.getSubjectId() == subjectId) {\r\n                    request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n                    list = questionDAO.getAllQuestionsOfALesson(lessonId);\r\n                } else {\r\n                    list = questionDAO.getAllQuestionsOfASubject(subjectId);\r\n                }\r\n            } else {\r\n                list = questionDAO.getAllQuestionsOfASubject(subjectId);\r\n            }\r\n\r\n        } else {\r\n            String lid = request.getParameter(\"lessonId\");\r\n            if ((lid != null) && (!lid.equals(\"All lessons\")) && (!lid.isEmpty())) {\r\n                int lessonId = Integer.parseInt(lid);\r\n                request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n                list = questionDAO.getAllQuestionsOfALesson(lessonId);\r\n            } else {\r\n                list = questionDAO.getAllQuestions();\r\n            }\r\n\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n        }\r\n\r\n        String keyWord = request.getParameter(\"keyword\");\r\n        if (keyWord != null) {\r\n            list = getAllMatchKeyWord(list, keyWord);\r\n        }\r\n\r\n        String sortBy = request.getParameter(\"sortBy\");\r\n        if (sortBy != null) {\r\n            switch (sortBy) {\r\n                case \"none\":\r\n                    break;\r\n                case \"content\":\r\n                    Collections.sort(list, new Question.SortByContent());\r\n                    break;\r\n                case \"subject\":\r\n                    Collections.sort(list, new Question.SortBySubject());\r\n                    break;\r\n                case \"lesson\":\r\n                    Collections.sort(list, new Question.SortByLesson());\r\n                    break;\r\n                case \"status\":\r\n                    Collections.sort(list, new Question.SortByStatus());\r\n                    break;\r\n            }\r\n        }\r\n\r\n        int noOfPages = getNoOfPages(list);\r\n        int currentPage = getPage(request, noOfPages);\r\n        list = getAllQuestionsOfPage(currentPage, list);\r\n\r\n        request.setAttribute(\"currentPage\", currentPage);\r\n        request.setAttribute(\"noOfPages\", noOfPages);\r\n        request.setAttribute(\"sortBy\", sortBy);\r\n        request.setAttribute(\"list\", list);\r\n        request.setAttribute(\"keyword\", keyWord);\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/questionlist.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void viewQuestionDetails(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int questionId = Integer.parseInt(request.getParameter(\"questionId\"));\r\n        Question question = questionDAO.getQuestionMatchId(questionId);\r\n        if (question == null) {\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            ArrayList<Answer> answer = answerDAO.getAllAnswersOfAQuestion(questionId);\r\n            request.setAttribute(\"question\", question);\r\n            request.setAttribute(\"answers\", answer);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/question/questiondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void updateAnswer(HttpServletRequest request, HttpServletResponse response, Question question)\r\n            throws IOException, ServletException {\r\n        ArrayList<Answer> answer = answerDAO.getAllAnswersOfAQuestion(question.getId());\r\n        boolean succesful = true;\r\n        for (Answer a : answer) {\r\n            String content = request.getParameter(String.valueOf(a.getId()));\r\n            a.setContent(content);\r\n            if (request.getParameter(a.getId() + \"isCorrect\") != null) {\r\n                a.setIsCorrect(true);\r\n            } else {\r\n                a.setIsCorrect(false);\r\n            }\r\n            try {\r\n                answerDAO.updateAnswer(a);\r\n\r\n            } catch (SQLException e) {\r\n                succesful = false;\r\n                System.out.println(e.getMessage());\r\n            }\r\n        }\r\n\r\n        if (succesful) {\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            request.setAttribute(\"err\", \"Update failed!\");\r\n            request.setAttribute(\"question\", question);\r\n            request.setAttribute(\"answers\", answer);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/question/questiondetails.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void changeQuestionStatus(Question question, HttpServletResponse response)\r\n            throws IOException {\r\n        try {\r\n            questionDAO.changeQuestionStatus(question);\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        response.sendRedirect(\"../question\");\r\n    }\r\n\r\n    private void updateQuestion(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, ServletException {\r\n        int questionId = Integer.parseInt(request.getParameter(\"questionId\"));\r\n        System.out.println(questionId);\r\n        Question question = questionDAO.getQuestionMatchId(questionId);\r\n        if (question == null) {\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            switch (request.getParameter(\"action\")) {\r\n                case \"answerChange\":\r\n                    updateAnswer(request, response, question);\r\n                    break;\r\n                case \"changeStatus\":\r\n                    changeQuestionStatus(question, response);\r\n                    break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private void newQuestionForm(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws IOException, ServletException {\r\n        answerList = new ArrayList<>();\r\n        Answer a = new Answer();\r\n        a.setIsCorrect(false);\r\n        a.setId(1);\r\n        answerList.add(a);\r\n\r\n        Answer a1 = new Answer();\r\n        a1.setIsCorrect(false);\r\n        a1.setId(2);\r\n        answerList.add(a1);\r\n\r\n        lastAnswerId = 2;\r\n\r\n        if (subjectId != 0) {\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n        } else {\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n        }\r\n        if (lessonId != 0) {\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n        }\r\n\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n        request.setAttribute(\"answerList\", answerList);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void getAnswerListInfo(HttpServletRequest request) {\r\n        for (Answer a : answerList) {\r\n            int id = a.getId();\r\n            a.setContent(request.getParameter(String.valueOf(id)));\r\n            if (request.getParameter(id + \"isCorrect\") != null) {\r\n                a.setIsCorrect(true);\r\n            } else {\r\n                a.setIsCorrect(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void changeSubjectAndLesson(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId)\r\n            throws ServletException, IOException {\r\n        if (subjectId != 0) {\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n            if (lessonId != 0) {\r\n                Lesson l = lessonDAO.getLessonMatchId(lessonId);\r\n                if (l.getSubject().getId() == subjectId) {\r\n                    request.setAttribute(\"lesson\", l);\r\n                }\r\n            }\r\n        } else {\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n            if (lessonId != 0) {\r\n                request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n            }\r\n        }\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n\r\n        getAnswerListInfo(request);\r\n        request.setAttribute(\"answerList\", answerList);\r\n        Question q = new Question();\r\n        q.setContent(request.getParameter(\"question\"));\r\n        request.setAttribute(\"question\", q);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void addAnswer(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws ServletException, IOException {\r\n        if (subjectId != 0) {\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n        } else {\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n        }\r\n        if (lessonId != 0) {\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n        }\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n\r\n        getAnswerListInfo(request);\r\n        lastAnswerId++;\r\n        Answer a = new Answer();\r\n        a.setId(lastAnswerId);\r\n        a.setIsCorrect(false);\r\n        answerList.add(a);\r\n        request.setAttribute(\"answerList\", answerList);\r\n\r\n        Question q = new Question();\r\n        q.setContent(request.getParameter(\"question\"));\r\n        request.setAttribute(\"question\", q);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n    }\r\n\r\n    private int getIndexById(int id) {\r\n        int index = 0;\r\n        for (Answer a : answerList) {\r\n            if (a.getId() == id) {\r\n                return index;\r\n            }\r\n            index++;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    private void deleteAnswer(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws ServletException, IOException {\r\n        if (subjectId != 0) {\r\n            request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n        } else {\r\n            request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n        }\r\n        if (lessonId != 0) {\r\n            request.setAttribute(\"lesson\", lessonDAO.getLessonMatchId(lessonId));\r\n        }\r\n        request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n\r\n        getAnswerListInfo(request);\r\n        int deletedId = Integer.parseInt(request.getParameter(\"deletedId\"));\r\n        answerList.remove(getIndexById(deletedId));\r\n        request.setAttribute(\"answerList\", answerList);\r\n\r\n        Question q = new Question();\r\n        q.setContent(request.getParameter(\"question\"));\r\n        request.setAttribute(\"question\", q);\r\n        request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n    }\r\n\r\n    private void insertQuestion(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws ServletException, IOException {\r\n        boolean successful = true;\r\n        Lesson lesson = null;\r\n        if (lessonId != 0) {\r\n            lesson = lessonDAO.getLessonMatchId(lessonId);\r\n            request.setAttribute(\"lesson\", lesson);\r\n        } else {\r\n            successful = false;\r\n            request.setAttribute(\"lessonErr\", \"Please choose a lesson\");\r\n        }\r\n        getAnswerListInfo(request);\r\n        Question q = new Question();\r\n        q.setContent(request.getParameter(\"question\"));\r\n        if (q.getContent().isEmpty()) {\r\n            successful = false;\r\n            request.setAttribute(\"questionErr\", \"Question cannot be blank!\");\r\n        }\r\n        if (q.getContent().length() > 255) {\r\n            successful = false;\r\n            request.setAttribute(\"questionErr\", \"Question content can not exceed 255 characters!\");\r\n        }\r\n\r\n        int nonEmptyAnswers = 0;\r\n        int checked = 0;\r\n        for (Answer a : answerList) {\r\n            if (!a.getContent().isEmpty()) {\r\n                nonEmptyAnswers++;\r\n                if (a.getContent().length() > 255) {\r\n                    successful = false;\r\n                    request.setAttribute(\"answerErr\", \"Please enter answer within 255 characters!\");\r\n                    break;\r\n                } else {\r\n                    if (a.isIsCorrect()) {\r\n                        checked++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (nonEmptyAnswers < 2) {\r\n            successful = false;\r\n            request.setAttribute(\"answerErr\", \"Please enter at least 2 answers!\");\r\n        } else {\r\n            if (checked == 0) {\r\n                request.setAttribute(\"answerErr\", \"Please select at least one correct answer!\");\r\n            }\r\n        }\r\n\r\n        if (successful) {\r\n            q.setLesson(lesson);\r\n            q.setStatus(true);\r\n            questionDAO.insertQuestion(q);\r\n            for (Answer a : answerList) {\r\n                answerDAO.insertAnswer(a, q);\r\n            }\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            if (subjectId != 0) {\r\n                request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n                request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n            } else {\r\n                request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n            }\r\n            request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n            request.setAttribute(\"answerList\", answerList);\r\n            request.setAttribute(\"question\", q);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n        }\r\n\r\n    }\r\n\r\n    private void insertQuestionByFile(HttpServletRequest request, HttpServletResponse response,\r\n            int subjectId, int lessonId) throws ServletException, IOException {\r\n        boolean successful = true;\r\n        Lesson lesson = null;\r\n        if (lessonId != 0) {\r\n            lesson = lessonDAO.getLessonMatchId(lessonId);\r\n            request.setAttribute(\"lesson\", lesson);\r\n            Part filePart = request.getPart(\"file\");\r\n            if ((filePart == null) || (filePart.getSize() == 0)) {\r\n                successful = false;\r\n                request.setAttribute(\"fileErr\", \"Please choose a file!\");\r\n            } else {\r\n                try {\r\n                    reader.readQuestionFromFile(filePart, lesson);\r\n                } catch (IOException e) {\r\n                    successful = false;\r\n                    request.setAttribute(\"fileErr\", \"Import file failed!\");\r\n                }\r\n            }\r\n        } else {\r\n            successful = false;\r\n            request.setAttribute(\"lessonErr\", \"Please choose a lesson\");\r\n        }\r\n\r\n        if (successful) {\r\n            response.sendRedirect(\"../question\");\r\n        } else {\r\n            if (subjectId != 0) {\r\n                request.setAttribute(\"subject\", subjectDAO.getSubjectMatchId(subjectId));\r\n                request.setAttribute(\"lessonList\", lessonDAO.getAllLesson(subjectId));\r\n            } else {\r\n                request.setAttribute(\"lessonList\", lessonDAO.getAllLessons());\r\n            }\r\n            request.setAttribute(\"subjectList\", subjectDAO.getAllSubject());\r\n            request.setAttribute(\"answerList\", answerList);\r\n            Question q = new Question();\r\n            q.setContent(request.getParameter(\"question\"));\r\n            request.setAttribute(\"question\", q);\r\n            request.getRequestDispatcher(\"/WEB-INF/views/question/newquestion.jsp\").forward(request, response);\r\n        }\r\n    }\r\n\r\n    private void newQuestion(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        int subjectId = 0, lessonId = 0;\r\n        String sid = request.getParameter(\"subjectId\");\r\n        if ((sid != null) && (!sid.isEmpty()) && (!sid.equals(\"All subjects\"))) {\r\n            subjectId = Integer.parseInt(sid);\r\n        }\r\n        String lid = request.getParameter(\"lessonId\");\r\n        if ((lid != null) && (!lid.isEmpty()) && (!lid.equals(\"All lessons\"))) {\r\n            lessonId = Integer.parseInt(lid);\r\n        }\r\n\r\n        switch (request.getParameter(\"action\")) {\r\n            case \"newQuestion\":\r\n                request.setAttribute(\"currentPage\", \"enterData\");\r\n                newQuestionForm(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"changeSubjectAndLesson\":\r\n                request.setAttribute(\"currentPage\", request.getParameter(\"currentPage\"));\r\n                changeSubjectAndLesson(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"addAnswer\":\r\n                request.setAttribute(\"currentPage\", \"enterData\");\r\n                addAnswer(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"deleteAnswer\":\r\n                request.setAttribute(\"currentPage\", \"enterData\");\r\n                deleteAnswer(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"insertQuestion\":\r\n                request.setAttribute(\"currentPage\", \"enterData\");\r\n                insertQuestion(request, response, subjectId, lessonId);\r\n                break;\r\n            case \"insertQuestionByFile\":\r\n                request.setAttribute(\"currentPage\", \"importFile\");\r\n                insertQuestionByFile(request, response, subjectId, lessonId);\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }// </editor-fold>\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/QuestionServlet.java b/src/java/controller/QuestionServlet.java
--- a/src/java/controller/QuestionServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/QuestionServlet.java	(date 1721635964766)
@@ -3,6 +3,7 @@
 import model.Question;
 import model.Answer;
 import common.ReadQuestionFromXlsFile;
+import common.StringFormatter;
 import dal.*;
 import java.io.IOException;
 import java.io.PrintWriter;
@@ -15,10 +16,14 @@
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
 import jakarta.servlet.http.Part;
+import java.net.Authenticator;
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
 import model.Lesson;
-import model.user.User;
+import model.User;
+import model.subject.Subject;
 
 @MultipartConfig
 @WebServlet(name = "QuestionServlet", urlPatterns = {"/question", "/question/details", "/question/update", "/question/new"})
@@ -60,17 +65,21 @@
     @Override
     protected void doPost(HttpServletRequest request, HttpServletResponse response)
             throws ServletException, IOException {
+
+        String contextPath = request.getServletContext().getContextPath();
+        String loginPage = contextPath + "/login.jsp";
+        String homePage = contextPath + "/home";
         UserDAO userDAO = new UserDAO();
         HttpSession session = request.getSession();
         User user = (User) session.getAttribute("user");
         if (user == null) {
-            response.sendRedirect("login.jsp");
+            response.sendRedirect(loginPage);
         } else {
             User u = userDAO.getUserById(user.getId());
             if (u != null && u.getEmail() != null) {
                 session.setAttribute("user", u);
                 if (user.getRole() > 1) {
-                    response.sendRedirect("home");
+                    response.sendRedirect(homePage);
                 } else {
                     String action = request.getServletPath();
                     switch (action) {
@@ -89,7 +98,7 @@
                     }
                 }
             } else {
-                response.sendRedirect("login.jsp");
+                response.sendRedirect(loginPage);
             }
         }
     }
@@ -173,43 +182,79 @@
         return ret;
     }
 
-    private void viewQuestionList(HttpServletRequest request, HttpServletResponse response)
-            throws ServletException, IOException {
-
-        ArrayList<Question> list = null;
-
-        String sid = request.getParameter("subjectid");
-        if ((sid != null) && (!sid.equals("All subjects")) && (!sid.isEmpty())) {
-            int subjectId = Integer.parseInt(sid);
-            request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
-
-            String lid = request.getParameter("lessonId");
+    private ArrayList<String> getAllSortOptions() {
+        ArrayList<String> ret = new ArrayList<>();
+        ret.add("None");
+        ret.add("Content");
+        ret.add("Subject");
+        ret.add("Lesson");
+        ret.add("Status");
+        return ret;
+    }
+
+    private ArrayList<Question> getQuestionsListOfLesson(HttpServletRequest request) {
+        ArrayList<Question> list;
+        String sid = request.getParameter("subjectId");
+        String lid = request.getParameter("lessonId");
+        String change = request.getParameter("change");
+        System.out.println("'" + change + "'");
+        if (change == null || change.isEmpty()) {
+            int subjectId = 0;
+            if ((sid != null) && (!sid.equals("All subjects")) && (!sid.isEmpty())) {
+                subjectId = Integer.parseInt(sid);
+                request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
+            } else {
+                request.setAttribute("lessonList", lessonDAO.getAllLessons());
+            }
             if ((lid != null) && (!lid.equals("All lessons")) && (!lid.isEmpty())) {
                 int lessonId = Integer.parseInt(lid);
-                Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
-                if (lesson.getSubjectId() == subjectId) {
-                    request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
-                    list = questionDAO.getAllQuestionsOfALesson(lessonId);
-                } else {
-                    list = questionDAO.getAllQuestionsOfASubject(subjectId);
-                }
+                request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
+                list = questionDAO.getAllQuestionsOfALesson(lessonId);
+            } else if (subjectId != 0) {
+                list = questionDAO.getAllQuestionsOfASubject(subjectId);
+            } else {
+                list = questionDAO.getAllQuestions();
+            }
+        } else if (change.equals("subject")) {
+            if ((sid != null) && (!sid.equals("All subjects")) && (!sid.isEmpty())) {
+                int subjectId = Integer.parseInt(sid);
+                request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
+                list = questionDAO.getAllQuestionsOfASubject(subjectId);
             } else {
-                list = questionDAO.getAllQuestionsOfASubject(subjectId);
+                request.setAttribute("lessonList", lessonDAO.getAllLessons());
+                list = questionDAO.getAllQuestions();
             }
-
         } else {
-            String lid = request.getParameter("lessonId");
             if ((lid != null) && (!lid.equals("All lessons")) && (!lid.isEmpty())) {
                 int lessonId = Integer.parseInt(lid);
-                request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
+                Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
+                System.out.println(lesson.getSubjectId());
+                Subject subject = subjectDAO.getSubjectMatchId(lesson.getSubjectId());
+                request.setAttribute("lesson", lesson);
+                request.setAttribute("subject", subject);
+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subject.getId()));
                 list = questionDAO.getAllQuestionsOfALesson(lessonId);
             } else {
-                list = questionDAO.getAllQuestions();
-            }
-
-            request.setAttribute("lessonList", lessonDAO.getAllLessons());
+                if ((sid != null) && (!sid.equals("All subjects")) && (!sid.isEmpty())) {
+                    int subjectId = Integer.parseInt(sid);
+                    request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
+                    request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
+                    list = questionDAO.getAllQuestionsOfASubject(subjectId);
+                } else {
+                    request.setAttribute("lessonList", lessonDAO.getAllLessons());
+                    list = questionDAO.getAllQuestions();
+                }
+            }
         }
+        return list;
+    }
+
+    private void viewQuestionList(HttpServletRequest request, HttpServletResponse response)
+            throws ServletException, IOException {
+
+        ArrayList<Question> list = getQuestionsListOfLesson(request);
 
         String keyWord = request.getParameter("keyword");
         if (keyWord != null) {
@@ -219,20 +264,20 @@
         String sortBy = request.getParameter("sortBy");
         if (sortBy != null) {
             switch (sortBy) {
-                case "none":
-                    break;
-                case "content":
+                case "Content":
                     Collections.sort(list, new Question.SortByContent());
                     break;
-                case "subject":
+                case "Subject":
                     Collections.sort(list, new Question.SortBySubject());
                     break;
-                case "lesson":
+                case "Lesson":
                     Collections.sort(list, new Question.SortByLesson());
                     break;
-                case "status":
+                case "Status":
                     Collections.sort(list, new Question.SortByStatus());
                     break;
+                default:
+                    break;
             }
         }
 
@@ -240,6 +285,13 @@
         int currentPage = getPage(request, noOfPages);
         list = getAllQuestionsOfPage(currentPage, list);
 
+        HttpSession session = request.getSession();
+        request.setAttribute("successful", session.getAttribute("successful"));
+        session.removeAttribute("successful");
+        request.setAttribute("err", session.getAttribute("err"));
+        session.removeAttribute("err");
+
+        request.setAttribute("sortOptions", getAllSortOptions());
         request.setAttribute("currentPage", currentPage);
         request.setAttribute("noOfPages", noOfPages);
         request.setAttribute("sortBy", sortBy);
@@ -257,53 +309,146 @@
             response.sendRedirect("../question");
         } else {
             ArrayList<Answer> answer = answerDAO.getAllAnswersOfAQuestion(questionId);
+            int id = 0;
+            answerList = new ArrayList<>();
+            for (Answer a : answer) {
+                id++;
+                answerList.add(new Answer(id, a.getContent(), a.isIsCorrect(), question));
+            }
+            lastAnswerId = id;
             request.setAttribute("question", question);
-            request.setAttribute("answers", answer);
+            request.setAttribute("answerList", answerList);
             request.getRequestDispatcher("/WEB-INF/views/question/questiondetails.jsp").forward(request, response);
         }
     }
 
     private void updateAnswer(HttpServletRequest request, HttpServletResponse response, Question question)
             throws IOException, ServletException {
-        ArrayList<Answer> answer = answerDAO.getAllAnswersOfAQuestion(question.getId());
-        boolean succesful = true;
-        for (Answer a : answer) {
-            String content = request.getParameter(String.valueOf(a.getId()));
-            a.setContent(content);
-            if (request.getParameter(a.getId() + "isCorrect") != null) {
-                a.setIsCorrect(true);
-            } else {
-                a.setIsCorrect(false);
+        boolean successful = true;
+        String content = request.getParameter("question").trim();
+        Question q = new Question(question.getId(), content, question.getLesson(), question.isStatus());
+        if (q.getContent().isEmpty() || q.getContent().length() > 255) {
+            successful = false;
+            request.setAttribute("questionErr", "Question is empty!");
+        }
+
+        getAnswerListInfo(request);
+
+        int nonEmptyAnswers = 0;
+        int checked = 0;
+        for (Answer a : answerList) {
+            String answerContent = a.getContent().trim();
+            a.setContent(answerContent);
+            if (!a.getContent().isEmpty()) {
+                nonEmptyAnswers++;
+                if (a.getContent().length() > 255) {
+                    successful = false;
+                    request.setAttribute("answerErr", "Please enter answer within 255 characters!");
+                    break;
+                } else {
+                    if (a.isIsCorrect()) {
+                        checked++;
+                    }
+                }
             }
-            try {
-                answerDAO.updateAnswer(a);
-
-            } catch (SQLException e) {
-                succesful = false;
-                System.out.println(e.getMessage());
+        }
+
+        if (nonEmptyAnswers < 2) {
+            successful = false;
+            request.setAttribute("answerErr", "Please enter at least 2 answers!");
+        } else if (checkDuplicateAnswer()) {
+            successful = false;
+            request.setAttribute("answerErr", "Please enter different answers!");
+        } else if (checked == 0) {
+            successful = false;
+            request.setAttribute("answerErr", "Please select at least one correct answer!");
+        }
+
+        if (successful) {
+            if (!questionDAO.isQuestionExist(q)) {
+                try {
+                    questionDAO.updateQuestion(q);
+                    answerDAO.deleteAllAnswersOfAQuestion(q.getId());
+                    for (Answer a : getNonEmptyAnswerList()) {
+                        String answerContent = a.getContent().trim();
+                        a.setContent(answerContent);
+                        a.setQuestion(q);
+                        answerDAO.insertAnswer(a);
+                    }
+                } catch (SQLException e) {
+                    System.out.println(e.getMessage());
+                    successful = false;
+                    request.setAttribute("questionErr", "Update question failed!");
+                }
+            } else {
+                successful = false;
+                request.setAttribute("questionErr", "Question already exist in subject!");
             }
         }
 
-        if (succesful) {
+        if (successful) {
+            HttpSession session = request.getSession();
+            session.setAttribute("successful", "Updated question successfully!");
             response.sendRedirect("../question");
         } else {
-            request.setAttribute("err", "Update failed!");
-            request.setAttribute("question", question);
-            request.setAttribute("answers", answer);
+            request.setAttribute("question", q);
+            request.setAttribute("answerList", answerList);
             request.getRequestDispatcher("/WEB-INF/views/question/questiondetails.jsp").forward(request, response);
         }
     }
 
-    private void changeQuestionStatus(Question question, HttpServletResponse response)
+    private void changeQuestionStatus(Question question, HttpServletResponse response, HttpServletRequest request)
             throws IOException {
+        HttpSession session = request.getSession();
+        String action;
+        if (question.isStatus()) {
+            action = "Deactivated";
+        } else {
+            action = "Activated";
+        }
         try {
             questionDAO.changeQuestionStatus(question);
+            session.setAttribute("successful", action + " question successfully!");
         } catch (SQLException e) {
-            System.out.println(e.getMessage());
+            session.setAttribute("err", action + " question failed!");
         }
         response.sendRedirect("../question");
     }
 
+    private void update_deleteAnswer(HttpServletRequest request, HttpServletResponse response, Question question)
+            throws ServletException, IOException {
+        String content = request.getParameter("question");
+        Question q = new Question(question.getId(), content, question.getLesson(), question.isStatus());
+        request.setAttribute("question", q);
+
+        getAnswerListInfo(request);
+        int deletedId = Integer.parseInt(request.getParameter("deletedId"));
+        answerList.remove(getIndexById(deletedId));
+        request.setAttribute("answerList", answerList);
+
+        request.getRequestDispatcher("/WEB-INF/views/question/questiondetails.jsp").forward(request, response);
+    }
+
+    private void update_addAnswer(HttpServletRequest request, HttpServletResponse response, Question question)
+            throws ServletException, IOException {
+        Question q = new Question();
+        q.setId(question.getId());
+        q.setLesson(question.getLesson());
+        q.setStatus(question.isStatus());
+        q.setContent(request.getParameter("question"));
+        request.setAttribute("question", q);
+
+        getAnswerListInfo(request);
+
+        lastAnswerId++;
+        Answer a = new Answer();
+        a.setId(lastAnswerId);
+        a.setIsCorrect(false);
+        answerList.add(a);
+        request.setAttribute("answerList", answerList);
+        request.getRequestDispatcher("/WEB-INF/views/question/questiondetails.jsp").forward(request, response);
+    }
+
     private void updateQuestion(HttpServletRequest request, HttpServletResponse response)
             throws IOException, ServletException {
         int questionId = Integer.parseInt(request.getParameter("questionId"));
@@ -313,11 +458,17 @@
             response.sendRedirect("../question");
         } else {
             switch (request.getParameter("action")) {
-                case "answerChange":
-                    updateAnswer(request, response, question);
+                case "changeStatus":
+                    changeQuestionStatus(question, response, request);
+                    break;
+                case "deleteAnswer":
+                    update_deleteAnswer(request, response, question);
                     break;
-                case "changeStatus":
-                    changeQuestionStatus(question, response);
+                case "addAnswer":
+                    update_addAnswer(request, response, question);
+                    break;
+                default:
+                    updateAnswer(request, response, question);
                     break;
             }
 
@@ -341,7 +492,7 @@
 
         if (subjectId != 0) {
             request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
+            request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
         } else {
             request.setAttribute("lessonList", lessonDAO.getAllLessons());
         }
@@ -369,21 +520,34 @@
     private void changeSubjectAndLesson(HttpServletRequest request, HttpServletResponse response,
             int subjectId, int lessonId)
             throws ServletException, IOException {
-        if (subjectId != 0) {
-            request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
-            if (lessonId != 0) {
-                Lesson l = lessonDAO.getLessonMatchId(lessonId);
-                if (l.getSubject().getId() == subjectId) {
-                    request.setAttribute("lesson", l);
-                }
+        if (request.getParameter("change").equals("subject")) {
+            if (subjectId == 0) {
+                request.setAttribute("lessonList", lessonDAO.getAllLessons());
+            } else {
+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
             }
         } else {
-            request.setAttribute("lessonList", lessonDAO.getAllLessons());
-            if (lessonId != 0) {
-                request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
-            }
+            if (lessonId == 0) {
+                if (subjectId == 0) {
+                    request.setAttribute("lessonList", lessonDAO.getAllLessons());
+                } else {
+                    request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
+                }
+            } else {
+                Lesson lesson = lessonDAO.getLessonMatchId(lessonId);
+                Subject subject = subjectDAO.getSubjectMatchId(lesson.getSubjectId());
+                request.setAttribute("subject", subject);
+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subject.getId()));
+            }
+        }
+
+        if (subjectId != 0) {
+            request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
+        }
+        if (lessonId != 0) {
+            request.setAttribute("lesson", lessonDAO.getLessonMatchId(lessonId));
         }
+
         request.setAttribute("subjectList", subjectDAO.getAllSubject());
 
         getAnswerListInfo(request);
@@ -398,7 +562,7 @@
             int subjectId, int lessonId) throws ServletException, IOException {
         if (subjectId != 0) {
             request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
+            request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
         } else {
             request.setAttribute("lessonList", lessonDAO.getAllLessons());
         }
@@ -436,7 +600,7 @@
             int subjectId, int lessonId) throws ServletException, IOException {
         if (subjectId != 0) {
             request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-            request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
+            request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
         } else {
             request.setAttribute("lessonList", lessonDAO.getAllLessons());
         }
@@ -456,6 +620,25 @@
         request.getRequestDispatcher("/WEB-INF/views/question/newquestion.jsp").forward(request, response);
     }
 
+    private ArrayList<Answer> getNonEmptyAnswerList() {
+        ArrayList<Answer> nonEmptyList = new ArrayList<>();
+        for (Answer a : answerList) {
+            if (!a.getContent().isEmpty()) {
+                nonEmptyList.add(a);
+            }
+        }
+        return nonEmptyList;
+    }
+
+    private boolean checkDuplicateAnswer() {
+        ArrayList<String> nonEmptyList = new ArrayList<>();
+        for (Answer a : getNonEmptyAnswerList()) {
+            nonEmptyList.add(a.getContent());
+        }
+        Set<String> set = new HashSet<>(nonEmptyList);
+        return set.size() < nonEmptyList.size();
+    }
+
     private void insertQuestion(HttpServletRequest request, HttpServletResponse response,
             int subjectId, int lessonId) throws ServletException, IOException {
         boolean successful = true;
@@ -469,7 +652,7 @@
         }
         getAnswerListInfo(request);
         Question q = new Question();
-        q.setContent(request.getParameter("question"));
+        q.setContent(request.getParameter("question".trim()));
         if (q.getContent().isEmpty()) {
             successful = false;
             request.setAttribute("questionErr", "Question cannot be blank!");
@@ -482,6 +665,8 @@
         int nonEmptyAnswers = 0;
         int checked = 0;
         for (Answer a : answerList) {
+            String content = a.getContent().trim();
+            a.setContent(content);
             if (!a.getContent().isEmpty()) {
                 nonEmptyAnswers++;
                 if (a.getContent().length() > 255) {
@@ -499,24 +684,42 @@
         if (nonEmptyAnswers < 2) {
             successful = false;
             request.setAttribute("answerErr", "Please enter at least 2 answers!");
-        } else {
-            if (checked == 0) {
-                request.setAttribute("answerErr", "Please select at least one correct answer!");
-            }
+        } else if (checkDuplicateAnswer()) {
+            successful = false;
+            request.setAttribute("answerErr", "Please enter different answers!");
+        } else if (checked == 0) {
+            successful = false;
+            request.setAttribute("answerErr", "Please select at least one correct answer!");
         }
 
         if (successful) {
             q.setLesson(lesson);
             q.setStatus(true);
-            questionDAO.insertQuestion(q);
-            for (Answer a : answerList) {
-                answerDAO.insertAnswer(a, q);
+            if (!questionDAO.isQuestionExist(q)) {
+                try {
+                    questionDAO.insertQuestion(q);
+                    for (Answer a : getNonEmptyAnswerList()) {
+                        a.setQuestion(q);
+                        answerDAO.insertAnswer(a);
+                    }
+                } catch (SQLException e) {
+                    successful = false;
+                    request.setAttribute("questionErr", "Adding question failed!");
+                }
+            } else {
+                successful = false;
+                request.setAttribute("questionErr", "Question already exist in subject!");
             }
+        }
+
+        if (successful) {
+            HttpSession session = request.getSession();
+            session.setAttribute("successful", "Insert question successfully!");
             response.sendRedirect("../question");
         } else {
             if (subjectId != 0) {
                 request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-                request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
             } else {
                 request.setAttribute("lessonList", lessonDAO.getAllLessons());
             }
@@ -532,6 +735,7 @@
             int subjectId, int lessonId) throws ServletException, IOException {
         boolean successful = true;
         Lesson lesson = null;
+        int count = 0;
         if (lessonId != 0) {
             lesson = lessonDAO.getLessonMatchId(lessonId);
             request.setAttribute("lesson", lesson);
@@ -541,7 +745,7 @@
                 request.setAttribute("fileErr", "Please choose a file!");
             } else {
                 try {
-                    reader.readQuestionFromFile(filePart, lesson);
+                    count = reader.readQuestionFromFile(filePart, lesson);
                 } catch (IOException e) {
                     successful = false;
                     request.setAttribute("fileErr", "Import file failed!");
@@ -553,11 +757,17 @@
         }
 
         if (successful) {
+            HttpSession session = request.getSession();
+            if (count == 0) {
+                session.setAttribute("err", "No question imported!");
+            } else {
+                session.setAttribute("successful", count + " questions imported successfully!");
+            }
             response.sendRedirect("../question");
         } else {
             if (subjectId != 0) {
                 request.setAttribute("subject", subjectDAO.getSubjectMatchId(subjectId));
-                request.setAttribute("lessonList", lessonDAO.getAllLesson(subjectId));
+                request.setAttribute("lessonList", lessonDAO.getAllLessonsOfASubject(subjectId));
             } else {
                 request.setAttribute("lessonList", lessonDAO.getAllLessons());
             }
@@ -581,32 +791,37 @@
         if ((lid != null) && (!lid.isEmpty()) && (!lid.equals("All lessons"))) {
             lessonId = Integer.parseInt(lid);
         }
-
-        switch (request.getParameter("action")) {
-            case "newQuestion":
-                request.setAttribute("currentPage", "enterData");
-                newQuestionForm(request, response, subjectId, lessonId);
-                break;
-            case "changeSubjectAndLesson":
-                request.setAttribute("currentPage", request.getParameter("currentPage"));
-                changeSubjectAndLesson(request, response, subjectId, lessonId);
-                break;
-            case "addAnswer":
-                request.setAttribute("currentPage", "enterData");
-                addAnswer(request, response, subjectId, lessonId);
-                break;
-            case "deleteAnswer":
-                request.setAttribute("currentPage", "enterData");
-                deleteAnswer(request, response, subjectId, lessonId);
-                break;
-            case "insertQuestion":
-                request.setAttribute("currentPage", "enterData");
-                insertQuestion(request, response, subjectId, lessonId);
-                break;
-            case "insertQuestionByFile":
-                request.setAttribute("currentPage", "importFile");
-                insertQuestionByFile(request, response, subjectId, lessonId);
-                break;
+        String action = request.getParameter("action");
+        if (action != null) {
+            switch (request.getParameter("action")) {
+                case "changeSubjectAndLesson":
+                    request.setAttribute("currentPage", request.getParameter("currentPage"));
+                    changeSubjectAndLesson(request, response, subjectId, lessonId);
+                    break;
+                case "addAnswer":
+                    request.setAttribute("currentPage", "enterData");
+                    addAnswer(request, response, subjectId, lessonId);
+                    break;
+                case "deleteAnswer":
+                    request.setAttribute("currentPage", "enterData");
+                    deleteAnswer(request, response, subjectId, lessonId);
+                    break;
+                case "insertQuestion":
+                    request.setAttribute("currentPage", "enterData");
+                    insertQuestion(request, response, subjectId, lessonId);
+                    break;
+                case "insertQuestionByFile":
+                    request.setAttribute("currentPage", "importFile");
+                    insertQuestionByFile(request, response, subjectId, lessonId);
+                    break;
+                default:
+                    request.setAttribute("currentPage", "enterData");
+                    newQuestionForm(request, response, subjectId, lessonId);
+                    break;
+            }
+        } else {
+            request.setAttribute("currentPage", "enterData");
+            newQuestionForm(request, response, subjectId, lessonId);
         }
     }
 
Index: src/java/model/Lesson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\nimport java.util.Comparator;\r\nimport model.subject.Subject;\r\n\r\npublic class Lesson {\r\n\r\n    int id, subjectId, order;\r\n    String name;\r\n    boolean status;\r\n    Subject subject;\r\n\r\n    public Lesson() {\r\n    }\r\n\r\n    public Lesson(int id, int subjectId, int order, String name, boolean status, Subject subject) {\r\n        this.id = id;\r\n        this.subjectId = subjectId;\r\n        this.order = order;\r\n        this.name = name;\r\n        this.status = status;\r\n        this.subject = subject;\r\n    }\r\n\r\n    public int getOrder() {\r\n        return order;\r\n    }\r\n\r\n    public void setOrder(int order) {\r\n        this.order = order;\r\n    }\r\n\r\n    public boolean isStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(boolean status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public Subject getSubject() {\r\n        return subject;\r\n    }\r\n\r\n    public void setSubject(Subject subject) {\r\n        this.subject = subject;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public int getSubjectId() {\r\n        return subjectId;\r\n    }\r\n\r\n    public void setSubjectId(int subjectId) {\r\n        this.subjectId = subjectId;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public static class SortByName implements Comparator<Lesson> {\r\n\r\n        @Override\r\n        public int compare(Lesson l1, Lesson l2) {\r\n            return l1.getName().compareTo(l2.getName());\r\n        }\r\n\r\n    }\r\n\r\n    public static class SortByStatus implements Comparator<Lesson> {\r\n\r\n        @Override\r\n        public int compare(Lesson l1, Lesson l2) {\r\n            if (l1.isStatus() == l2.isStatus()) {\r\n                return 0;\r\n            }\r\n            if (l1.isStatus() && !l2.isStatus()) {\r\n                return -1;\r\n            }\r\n            return 1;\r\n        }\r\n\r\n    }\r\n\r\n    public static class SortBySubject implements Comparator<Lesson> {\r\n\r\n        @Override\r\n        public int compare(Lesson l1, Lesson l2) {\r\n            return l1.getSubjectId() - l2.getSubjectId();\r\n        }\r\n\r\n    }\r\n\r\n    public static class SortByOrder implements Comparator<Lesson> {\r\n\r\n        @Override\r\n        public int compare(Lesson l1, Lesson l2) {\r\n            return l1.getSubjectId() - l2.getSubjectId();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/model/Lesson.java b/src/java/model/Lesson.java
--- a/src/java/model/Lesson.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/model/Lesson.java	(date 1721635964779)
@@ -94,20 +94,11 @@
 
     }
 
-    public static class SortBySubject implements Comparator<Lesson> {
-
-        @Override
-        public int compare(Lesson l1, Lesson l2) {
-            return l1.getSubjectId() - l2.getSubjectId();
-        }
-
-    }
-
     public static class SortByOrder implements Comparator<Lesson> {
 
         @Override
         public int compare(Lesson l1, Lesson l2) {
-            return l1.getSubjectId() - l2.getSubjectId();
+            return l1.getOrder() - l2.getOrder();
         }
     }
 
Index: src/java/controller/signup/SignUpServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.signup;\r\n\r\nimport dal.UserDAO;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport mail.GenerateVerifyCode;\r\nimport mail.SendMail;\r\nimport model.user.User;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\n\r\n@WebServlet(name = \"SignUpServlet\", urlPatterns = {\"/signup\"})\r\npublic class SignUpServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws IOException, SQLException {\r\n        // Retrieve form data\r\n        String fullName = request.getParameter(\"fullName\");\r\n        String email = request.getParameter(\"email\");\r\n        String password = request.getParameter(\"password\");\r\n        String repassword = request.getParameter(\"repassword\");\r\n        String avt = \"assets/img/default_avt.jpg\";\r\n        int role = 3;\r\n        int status = 0;\r\n        HttpSession session = request.getSession();\r\n        UserDAO dao = new UserDAO();\r\n        if (fullName == null || email == null || password == null || repassword == null) {\r\n            session.setAttribute(\"message\", \"Please fill in all fields.\");\r\n            response.sendRedirect(\"signup.jsp\");\r\n        } else if (dao.checkEmailExist(email)) {\r\n            session.setAttribute(\"message\", \"Email already exists.\");\r\n            response.sendRedirect(\"signup.jsp\");\r\n        } else if (!password.equals(repassword)) {\r\n            session.setAttribute(\"message\", \"Passwords do not match.\");\r\n            response.sendRedirect(\"signup.jsp\");\r\n        } else {\r\n            User user = new User();\r\n            user.setName(fullName);\r\n            user.setEmail(email);\r\n            user.setRole(role);\r\n            user.setAvatar(avt);\r\n            user.setStatus(status);\r\n            String verificationCode = GenerateVerifyCode.GenerateCode();\r\n            String subject = \"Verify Email\";\r\n            String body = \"Hello, \" + fullName + \"! Your verification code for KMS is: \" + verificationCode;\r\n            SendMail.sendMail(email, subject, body);\r\n            session.setAttribute(\"user\", user);\r\n            session.setAttribute(\"password\", password);\r\n            session.setAttribute(\"verificationCode\", verificationCode);\r\n            response.sendRedirect(\"verificate-email.jsp\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            processRequest(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            processRequest(request, response);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/signup/SignUpServlet.java b/src/java/controller/signup/SignUpServlet.java
--- a/src/java/controller/signup/SignUpServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/signup/SignUpServlet.java	(date 1721635964775)
@@ -9,7 +9,7 @@
 import jakarta.servlet.http.HttpSession;
 import mail.GenerateVerifyCode;
 import mail.SendMail;
-import model.user.User;
+import model.User;
 
 import java.io.IOException;
 import java.sql.SQLException;
@@ -32,7 +32,7 @@
         if (fullName == null || email == null || password == null || repassword == null) {
             session.setAttribute("message", "Please fill in all fields.");
             response.sendRedirect("signup.jsp");
-        } else if (dao.checkEmailExist(email)) {
+        } else if (dao.checkEmailExist(email) && !dao.isEmailUnverified(email)) {
             session.setAttribute("message", "Email already exists.");
             response.sendRedirect("signup.jsp");
         } else if (!password.equals(repassword)) {
Index: src/java/controller/flashcard/FlashcardAddServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.flashcard;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport dal.FlashcardDAO;\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport model.flashcard.FlashcardQuestions;\r\nimport model.user.User;\r\n\r\npublic class FlashcardAddServlet extends HttpServlet {\r\n\r\n    protected void processRequest(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        try {\r\n            HttpSession session = request.getSession();\r\n            User user = (User) session.getAttribute(\"user\");\r\n            if (user == null) {\r\n                response.sendRedirect(\"login.jsp\");\r\n                return;\r\n            }\r\n\r\n            String title = request.getParameter(\"title\");\r\n            int subjectId = Integer.parseInt(request.getParameter(\"subjectId\"));\r\n            String[] terms = request.getParameterValues(\"term[]\");\r\n            String[] definitions = request.getParameterValues(\"definition[]\");\r\n\r\n            // Assuming userEmail is obtained from session or request\r\n            String userEmail = user.getEmail();\r\n\r\n            FlashcardDAO dao = new FlashcardDAO();\r\n            int userId = dao.getUserId(userEmail);\r\n            if (userId == -1) {\r\n                // Handle error: user not found\r\n                RequestDispatcher dispatcher = request.getRequestDispatcher(\"login\");\r\n                dispatcher.forward(request, response);\r\n                return;\r\n            }\r\n\r\n            boolean setAdded = dao.addFlashcardSet(title, subjectId, userId);\r\n\r\n            if (setAdded) {\r\n                int flashcardSetId = dao.getFlashcardSetId(title);\r\n                ArrayList<FlashcardQuestions> questions = new ArrayList<>();\r\n\r\n                for (int i = 0; i < terms.length; i++) {\r\n                    FlashcardQuestions question = new FlashcardQuestions();\r\n                    question.setTerm(terms[i]);\r\n                    question.setDefinition(definitions[i]);\r\n                    question.setFlashcardSetId(flashcardSetId);\r\n                    questions.add(question);\r\n                }\r\n\r\n                dao.addFlashcardQuestions(questions, flashcardSetId);\r\n            }\r\n\r\n            RequestDispatcher dispatcher = request.getRequestDispatcher(\"flashcard\");\r\n            dispatcher.forward(request, response);\r\n        } catch (Exception e) {\r\n            response.sendRedirect(\"flashcard.jsp\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void doGet(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n            throws ServletException, IOException {\r\n        processRequest(request, response);\r\n    }\r\n\r\n    @Override\r\n    public String getServletInfo() {\r\n        return \"Short description\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/controller/flashcard/FlashcardAddServlet.java b/src/java/controller/flashcard/FlashcardAddServlet.java
--- a/src/java/controller/flashcard/FlashcardAddServlet.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/controller/flashcard/FlashcardAddServlet.java	(date 1721635964770)
@@ -2,7 +2,6 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
-import java.util.List;
 
 import dal.FlashcardDAO;
 import jakarta.servlet.RequestDispatcher;
@@ -12,7 +11,7 @@
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
 import model.flashcard.FlashcardQuestions;
-import model.user.User;
+import model.User;
 
 public class FlashcardAddServlet extends HttpServlet {
 
@@ -23,45 +22,45 @@
             User user = (User) session.getAttribute("user");
             if (user == null) {
                 response.sendRedirect("login.jsp");
-                return;
-            }
-
-            String title = request.getParameter("title");
-            int subjectId = Integer.parseInt(request.getParameter("subjectId"));
-            String[] terms = request.getParameterValues("term[]");
-            String[] definitions = request.getParameterValues("definition[]");
+            } else {
+                String title = request.getParameter("title");
+                int subjectId = Integer.parseInt(request.getParameter("subjectId"));
+                String[] terms = request.getParameterValues("term");
+                String[] definitions = request.getParameterValues("definition");
 
-            // Assuming userEmail is obtained from session or request
-            String userEmail = user.getEmail();
+                // Assuming userEmail is obtained from session or request
+                String userEmail = user.getEmail();
 
-            FlashcardDAO dao = new FlashcardDAO();
-            int userId = dao.getUserId(userEmail);
-            if (userId == -1) {
-                // Handle error: user not found
-                RequestDispatcher dispatcher = request.getRequestDispatcher("login");
-                dispatcher.forward(request, response);
-                return;
-            }
+                FlashcardDAO dao = new FlashcardDAO();
+                int userId = dao.getUserId(userEmail);
+                if (userId == -1) {
+                    // Handle error: user not found
+
+                    RequestDispatcher dispatcher = request.getRequestDispatcher("login");
+                    dispatcher.forward(request, response);
+                    return;
+                }
 
-            boolean setAdded = dao.addFlashcardSet(title, subjectId, userId);
+                boolean setAdded = dao.addFlashcardSet(title, subjectId, userId);
 
-            if (setAdded) {
-                int flashcardSetId = dao.getFlashcardSetId(title);
-                ArrayList<FlashcardQuestions> questions = new ArrayList<>();
+                if (setAdded) {
+                    int flashcardSetId = dao.getFlashcardSetId(title);
+                    ArrayList<FlashcardQuestions> questions = new ArrayList<>();
 
-                for (int i = 0; i < terms.length; i++) {
-                    FlashcardQuestions question = new FlashcardQuestions();
-                    question.setTerm(terms[i]);
-                    question.setDefinition(definitions[i]);
-                    question.setFlashcardSetId(flashcardSetId);
-                    questions.add(question);
-                }
+                    for (int i = 0; i < terms.length; i++) {
+                        FlashcardQuestions question = new FlashcardQuestions();
+                        question.setTerm(terms[i]);
+                        question.setDefinition(definitions[i]);
+                        question.setFlashcardSetId(flashcardSetId);
+                        questions.add(question);
+                    }
 
-                dao.addFlashcardQuestions(questions, flashcardSetId);
-            }
+                    dao.addFlashcardQuestions(questions, flashcardSetId);
+                }
 
-            RequestDispatcher dispatcher = request.getRequestDispatcher("flashcard");
-            dispatcher.forward(request, response);
+                RequestDispatcher dispatcher = request.getRequestDispatcher("flashcard");
+                dispatcher.forward(request, response);
+            }
         } catch (Exception e) {
             response.sendRedirect("flashcard.jsp");
         }
Index: src/java/dal/UserDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dal;\r\n\r\nimport controller.encrypt.BCrypt;\r\nimport model.user.User;\r\n\r\nimport java.io.Serializable;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport model.subject.Subject;\r\nimport model.user.Role;\r\n\r\npublic class UserDAO extends DBContext implements Serializable {\r\n\r\n    public void userSignUp(User user, String password) throws SQLException {\r\n        Connection conn = null;\r\n        PreparedStatement ps = null;\r\n        ResultSet rs = null;\r\n\r\n        try {\r\n            conn = connection;\r\n\r\n            // SQL query to insert a new user, including the status column\r\n            String query = \"INSERT INTO `user` (name, email, avt, password, role, status) \"\r\n                    + \"VALUES (?, ?, ?, ?, ?, ?)\";\r\n\r\n            // Create a prepared statement with auto-generated keys\r\n            ps = conn.prepareStatement(query, PreparedStatement.RETURN_GENERATED_KEYS);\r\n            ps.setString(1, user.getName());\r\n            ps.setString(2, user.getEmail());\r\n            ps.setString(3, user.getAvatar());\r\n            String hashedpw = BCrypt.hashpw(password, BCrypt.gensalt(12));\r\n            ps.setString(4, hashedpw);\r\n            ps.setInt(5, user.getRole());\r\n            ps.setInt(6, user.getStatus());\r\n\r\n            // Execute the query\r\n            int affectedRows = ps.executeUpdate();\r\n\r\n            // Check if any rows were affected (user inserted successfully)\r\n            if (affectedRows == 0) {\r\n                throw new SQLException(\"User sign-up failed, no rows affected.\");\r\n            }\r\n\r\n            // Retrieve the auto-generated key (id)\r\n            rs = ps.getGeneratedKeys();\r\n            if (rs.next()) {\r\n                user.setId(rs.getInt(1)); // Set the generated id back to the User object\r\n            }\r\n        } finally {\r\n            // Close the ResultSet, PreparedStatement, and Connection\r\n            if (rs != null) {\r\n                rs.close();\r\n            }\r\n            if (ps != null) {\r\n                ps.close();\r\n            }\r\n            if (conn != null) {\r\n                conn.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    public User login(String email, String password) throws SQLException {\r\n        Connection conn = null;\r\n        PreparedStatement ps = null;\r\n        ResultSet rs = null;\r\n        User user;\r\n\r\n        try {\r\n            conn = connection;\r\n\r\n            String query = \"SELECT * FROM `user` WHERE email = ?\";\r\n            ps = conn.prepareStatement(query);\r\n            ps.setString(1, email);\r\n\r\n            rs = ps.executeQuery();\r\n            user = new User();\r\n\r\n            if (rs.next() && checkEmailExist(email)) {\r\n                if ((BCrypt.checkpw(password, rs.getString(\"password\")))) {\r\n                    user.setId(rs.getInt(\"id\"));\r\n                    user.setName(rs.getString(\"name\"));\r\n                    user.setEmail(rs.getString(\"email\"));\r\n                    user.setAvatar(rs.getString(\"avt\"));\r\n                    int role = rs.getInt(\"role\");\r\n                    user.setRole(role);\r\n                    user.setR(getRole(role));\r\n                    user.setStatus(rs.getInt(\"status\")); // Set status from DB\r\n                }\r\n            } else if (!checkEmailExist(email)) {\r\n                user = null;\r\n            }\r\n        } finally {\r\n            if (rs != null) {\r\n                rs.close();\r\n            }\r\n            if (ps != null) {\r\n                ps.close();\r\n            }\r\n            if (conn != null) {\r\n                conn.close();\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    public User loginGoogle(String email) throws SQLException {\r\n        Connection conn = null;\r\n        PreparedStatement ps = null;\r\n        ResultSet rs = null;\r\n        User user = null;\r\n\r\n        try {\r\n            conn = connection;\r\n\r\n            String query = \"SELECT * FROM `user` WHERE email = ?\";\r\n            ps = conn.prepareStatement(query);\r\n            ps.setString(1, email);\r\n\r\n            rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                user = new User();\r\n                user.setId(rs.getInt(\"id\"));\r\n                user.setName(rs.getString(\"name\"));\r\n                user.setEmail(rs.getString(\"email\"));\r\n                user.setAvatar(rs.getString(\"avt\"));\r\n                user.setRole(rs.getInt(\"role\"));\r\n                user.setStatus(rs.getInt(\"status\")); // Set status from DB\r\n            }\r\n        } finally {\r\n            if (rs != null) {\r\n                rs.close();\r\n            }\r\n            if (ps != null) {\r\n                ps.close();\r\n            }\r\n            if (conn != null) {\r\n                conn.close();\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n//\r\n//    public void updateUserAvatar(int userId, String avatar) throws SQLException {\r\n//        Connection conn = null;\r\n//        PreparedStatement ps = null;\r\n//\r\n//        try {\r\n//            conn = connection;\r\n//            String query = \"UPDATE `user` SET avt = ? WHERE id = ?\";\r\n//            ps = conn.prepareStatement(query);\r\n//            ps.setString(1, avatar);\r\n//            ps.setInt(2, userId);\r\n//            ps.executeUpdate();\r\n//        } finally {\r\n//            if (ps != null) {\r\n//                ps.close();\r\n//            }\r\n//            if (conn != null) {\r\n//                conn.close();\r\n//            }\r\n//        }\r\n//    }\r\n\r\n    private Role getRole(int id) {\r\n        String sql = \"select * from role where id = ?;\";\r\n        Role r;\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, id);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                r = new Role();\r\n                r.setId(id);\r\n                r.setName(rs.getString(\"name\"));\r\n                return r;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private User getUserInfo(ResultSet rs) throws SQLException {\r\n        User u = new User();\r\n        u.setId(rs.getInt(\"id\"));\r\n        u.setName(rs.getString(\"name\"));\r\n        u.setEmail(rs.getString(\"email\"));\r\n        u.setAvatar(rs.getString(\"avt\"));\r\n        u.setStatus(rs.getInt(\"status\"));\r\n        int roleId = rs.getInt(\"role\");\r\n        u.setRole(roleId);\r\n        u.setR(getRole(roleId));\r\n        u.setDateCreated(rs.getDate(\"date_created\"));\r\n        return u;\r\n    }\r\n\r\n    public ArrayList<User> getAllUsers() {\r\n        String sql = \"select * from user where role > 0;\";\r\n        ArrayList<User> list = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                User u = getUserInfo(rs);\r\n                list.add(u);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public int getNumberOfStudents() {\r\n        String sql = \"SELECT COUNT(*) AS number FROM `user` WHERE role = 3\";\r\n        int count = 0;\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                count = rs.getInt(\"number\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public int getNumberOfTeachers() {\r\n        String sql = \"SELECT COUNT(*) AS number FROM `user` WHERE role = 2\";\r\n        int count = 0;\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                count = rs.getInt(\"number\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public ArrayList<User> getAllAccount() {\r\n        ArrayList<User> list = new ArrayList<>();\r\n\r\n        String query = \"SELECT * FROM user;\";\r\n        try {\r\n            PreparedStatement ps = connection.prepareStatement(query);\r\n            ResultSet rs = ps.executeQuery();\r\n            while (rs.next()) {\r\n                User s = new User();\r\n                s.setId(rs.getInt(\"id\"));\r\n                s.setName(rs.getString(\"name\"));\r\n                s.setEmail(rs.getString(\"email\"));\r\n                s.setRole(rs.getInt(\"role\"));\r\n                s.setAvatar(rs.getString(\"avt\"));\r\n                s.setStatus(rs.getInt(\"status\"));\r\n                list.add(s);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public User getUserByID(int Id) {\r\n\r\n        User user = new User();\r\n        String query = \"select * from user where Id= ?\";\r\n\r\n        try {\r\n            PreparedStatement ps;\r\n            ResultSet rs;\r\n            if (connection != null) {\r\n                ps = connection.prepareStatement(query);\r\n                ps.setInt(1, Id);\r\n                rs = ps.executeQuery();\r\n                while (rs.next()) {\r\n                    user.setId(rs.getInt(1));\r\n                    user.setName(rs.getString(2));\r\n                    user.setEmail(rs.getString(3));\r\n                    int role = rs.getInt(5);\r\n                    user.setRole(role);\r\n                    user.setAvatar(rs.getString(6));\r\n                    user.setR(getRole(role));\r\n                }\r\n            }\r\n        } catch (SQLException ignored) {\r\n        }\r\n        return user;\r\n    }\r\n\r\n    public void updatePassword(String email, String currentPassword, String newPassword) throws SQLException {\r\n        Connection conn = null;\r\n        PreparedStatement psSelect = null;\r\n        PreparedStatement psUpdate = null;\r\n        ResultSet rs = null;\r\n        User user;\r\n\r\n        try {\r\n            // Assuming `connection` is a valid Connection object\r\n            conn = connection;\r\n\r\n            // Step 1: Verify the user's current password\r\n            String selectQuery = \"SELECT * FROM `user` WHERE email = ?\";\r\n            psSelect = conn.prepareStatement(selectQuery);\r\n            psSelect.setString(1, email);\r\n\r\n            rs = psSelect.executeQuery();\r\n            if (rs.next()) {\r\n                if (BCrypt.checkpw(currentPassword, rs.getString(\"password\"))) {\r\n                    // Step 2: Update the user's password\r\n                    String updateQuery = \"UPDATE `user` SET password = ? WHERE email = ?\";\r\n                    psUpdate = conn.prepareStatement(updateQuery);\r\n                    newPassword = BCrypt.hashpw(newPassword, BCrypt.gensalt(12));\r\n                    psUpdate.setString(1, newPassword);\r\n                    psUpdate.setString(2, email);\r\n                    psUpdate.executeUpdate();\r\n\r\n                    // Step 3: Retrieve the updated user\r\n                    user = new User();\r\n                    user.setId(rs.getInt(\"id\"));\r\n                    user.setName(rs.getString(\"name\"));\r\n                    user.setEmail(rs.getString(\"email\"));\r\n                    user.setAvatar(rs.getString(\"avt\"));\r\n                    user.setRole(rs.getInt(\"role\"));\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        } finally {\r\n            // Close ResultSet\r\n            if (rs != null) {\r\n                rs.close();\r\n            }\r\n            // Close PreparedStatements\r\n            if (psSelect != null) {\r\n                psSelect.close();\r\n            }\r\n            if (psUpdate != null) {\r\n                psUpdate.close();\r\n            }\r\n            // Close Connection\r\n            if (conn != null) {\r\n                conn.close();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void resetPassword(String email, String newpassword) {\r\n        String query = \"UPDATE user SET password = ? WHERE email = ?\";\r\n        try {\r\n            PreparedStatement ps = connection.prepareStatement(query);\r\n            newpassword = BCrypt.hashpw(newpassword, BCrypt.gensalt(12));\r\n            ps.setString(1, newpassword);\r\n            ps.setString(2, email);\r\n            ps.executeUpdate();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public Boolean checkEmailExist(String email) {\r\n        String query = \"SELECT * FROM user WHERE email = ?\";\r\n        try {\r\n            PreparedStatement ps = connection.prepareStatement(query);\r\n            ps.setString(1, email);\r\n            ResultSet rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                return true;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public String getPasswordByEmail(String email) {\r\n        String query = \"SELECT password FROM user WHERE email = ?\";\r\n        try {\r\n            PreparedStatement ps = connection.prepareStatement(query);\r\n            ps.setString(1, email);\r\n            ResultSet rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                return rs.getString(\"password\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private int getStatusById(int id) {\r\n        String sql = \"select status from `user` where id = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, id);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return rs.getInt(\"status\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public void changeUserStatus(int id) {\r\n        int newStatus;\r\n        if (getStatusById(id) == 1) {\r\n            newStatus = 0;\r\n        } else {\r\n            newStatus = 1;\r\n        }\r\n        String sql = \"update `user` set status = ? where id = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, newStatus);\r\n            st.setInt(2, id);\r\n            st.execute();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public ArrayList<Role> getAllRoles() {\r\n        ArrayList<Role> list = new ArrayList<>();\r\n        String sql = \"select * from `role`;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                Role role = new Role();\r\n                role.setId(rs.getInt(\"id\"));\r\n                role.setName(rs.getString(\"name\"));\r\n                list.add(role);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public User getUserById(int id) {\r\n        String sql = \"select * from user where id = ?\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, id);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return getUserInfo(rs);\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void updateUser(User u) throws SQLException {\r\n        String sql = \"update user set role = ?, name = ? where id = ?\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, u.getRole());\r\n        st.setString(2, u.getName());\r\n        st.setInt(3, u.getId());\r\n        st.execute();\r\n    }\r\n\r\n    public void updateAvatar(User u) throws SQLException {\r\n        String sql = \"update user set avt = ? where id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, u.getAvatar());\r\n        st.setInt(2, u.getId());\r\n        st.execute();\r\n    }\r\n\r\n    public boolean isAvtExist(String uri) {\r\n        String sql = \"select * from user where avt = ?;\";\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setString(1, uri);\r\n            ResultSet rs = st.executeQuery();\r\n            if (rs.next()) {\r\n                return true;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void addUser(User user, String password) throws SQLException {\r\n        String sql = \"INSERT INTO `user` (name, email, avt, password, role, status)\"\r\n                + \"VALUES (?, ?, ?, ?, ?, ?)\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setString(1, user.getName());\r\n        st.setString(2, user.getEmail());\r\n        st.setString(3, user.getAvatar());\r\n        String hashedpw = BCrypt.hashpw(password, BCrypt.gensalt(12));\r\n        st.setString(4, hashedpw);\r\n        st.setInt(5, user.getRole());\r\n        st.setInt(6, user.getStatus());\r\n        st.execute();\r\n    }\r\n\r\n    public void setNewPassword(int userId, String newPassword) throws SQLException {\r\n        String sql = \"update user set password = ?, status = 1 where id = ?\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        String hashedpw = BCrypt.hashpw(newPassword, BCrypt.gensalt(12));\r\n        st.setString(1, hashedpw);\r\n        st.setInt(2, userId);\r\n        st.execute();\r\n    }\r\n\r\n    public ArrayList<Subject> getAllSubjectsInCharged(int id) {\r\n        SubjectDAO subjectDAO = new SubjectDAO();\r\n        String sql = \"select * from subject_in_charged where user_id = ?;\";\r\n        ArrayList<Subject> ret = new ArrayList<>();\r\n        try {\r\n            PreparedStatement st = connection.prepareStatement(sql);\r\n            st.setInt(1, id);\r\n            ResultSet rs = st.executeQuery();\r\n            while (rs.next()) {\r\n                ret.add(subjectDAO.getSubjectMatchId(rs.getInt(\"subject_id\")));\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public void assignSubject(int userId, int subjectId) throws SQLException {\r\n        String sql = \"insert into subject_in_charged (user_id, subject_id) values (?,?);\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, userId);\r\n        st.setInt(2, subjectId);\r\n        st.execute();\r\n    }\r\n    \r\n    public void removeAssignedSubject(int userId, int subjectId) throws SQLException{\r\n        String sql = \"delete from subject_in_charged where user_id = ? and subject_id = ?;\";\r\n        PreparedStatement st = connection.prepareStatement(sql);\r\n        st.setInt(1, userId);\r\n        st.setInt(2, subjectId);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java/dal/UserDAO.java b/src/java/dal/UserDAO.java
--- a/src/java/dal/UserDAO.java	(revision 6e69a438937970ddda5d35fac17ac9c5b95d66cb)
+++ b/src/java/dal/UserDAO.java	(date 1721635964779)
@@ -1,7 +1,7 @@
 package dal;
 
 import controller.encrypt.BCrypt;
-import model.user.User;
+import model.User;
 
 import java.io.Serializable;
 import java.sql.Connection;
@@ -10,7 +10,7 @@
 import java.sql.SQLException;
 import java.util.ArrayList;
 import model.subject.Subject;
-import model.user.Role;
+import model.Role;
 
 public class UserDAO extends DBContext implements Serializable {
 
@@ -413,7 +413,7 @@
         return -1;
     }
 
-    public void changeUserStatus(int id) {
+    public void changeUserStatus(int id) throws SQLException {
         int newStatus;
         if (getStatusById(id) == 1) {
             newStatus = 0;
@@ -421,14 +421,10 @@
             newStatus = 1;
         }
         String sql = "update `user` set status = ? where id = ?;";
-        try {
-            PreparedStatement st = connection.prepareStatement(sql);
-            st.setInt(1, newStatus);
-            st.setInt(2, id);
-            st.execute();
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
+        PreparedStatement st = connection.prepareStatement(sql);
+        st.setInt(1, newStatus);
+        st.setInt(2, id);
+        st.execute();
     }
 
     public ArrayList<Role> getAllRoles() {
@@ -543,12 +539,32 @@
         st.setInt(2, subjectId);
         st.execute();
     }
-    
-    public void removeAssignedSubject(int userId, int subjectId) throws SQLException{
+
+    public void removeAssignedSubject(int userId, int subjectId) throws SQLException {
         String sql = "delete from subject_in_charged where user_id = ? and subject_id = ?;";
         PreparedStatement st = connection.prepareStatement(sql);
         st.setInt(1, userId);
         st.setInt(2, subjectId);
+        st.execute();
+    }
+
+    public User getUserByEmail(String email) {
+        String sql = "select * from user where email = ?;";
+        try {
+            PreparedStatement st = connection.prepareStatement(sql);
+            st.setString(1, email);
+            ResultSet rs = st.executeQuery();
+            if (rs.next()) {
+                return getUserInfo(rs);
+            }
+        } catch (SQLException e) {
+            System.out.println(e.getMessage());
+        }
+        return null;
+    }
+
+    public boolean isEmailUnverified(String email) {
+        return getUserByEmail(email).getStatus() == 2;
     }
 
 }
